taxa <- c("Drosophila affinis",
"Drosophila albomicans",
"Drosophila aldrichi",
"Drosophila americana",
"Drosophila anassae",
"Drosophila arizonae",
"Drosophila biarmipes",
"Drosophila bifasciata",
"Drosophila bipectinata",
"Drosophila borealis",
"Drosophila buzzatii",
"Drosophila eohydei",
"Drosophila erecta",
"Drosophila flavomontana",
"Drosophila hydei",
"Drosophila lacicola",
"Drosophila littoralis",
"Drosophila lummei",
"Drosophila madeirensis",
"Drosophila mayaguana",
"Drosophila melanica",
"Drosophila melanogaster",
"Drosophila mercatorum",
"Drosophila micromelanica",
"Drosophila mojavensis",
"Drosophila montana",
"Drosophila nasuta",
"Drosophila novamexicana",
"Drosophila obscura",
"Drosophila paranaensis",
"Drosophila pseudoobscura",
"Drosophila repleta",
"Drosophila santomea",
"Drosophila sechellia",
"Drosophila simulans",
"Drosophila subobscura",
"Drosophila suzukii",
"Drosophila takahashii",
"Drosophila teissieri",
"Drosophila virilis",
"Drosophila yakuba",
"Zaprionus indianus",
"Zaprionus tuberculatus")
library(rotl)
resolved_names <- tnrs_match_names(taxa,context_name = "Animals")
resolved_names
library(ape)
tree <- tol_induced_subtree(ott_ids = resolved_names$ott_id)
tree$tip.label <- strip_ott_ids(tree$tip.label)
tree$node.label <- NULL
summary.phylo(tree)
plot(tree)
plot(tree, cex=0.7)
library(rotl)
taxa <- c('Drosophila_subobscura',
'Drosophila_melanogaster',
'Drosophila_suzukii',
'Zaprionus_indianus',
'Drosophila_albomicans',
'Drosophila_montana',
'Drosophila_novamexicana',
'Drosophila_virilis',
'Drosophila_lacicola',
'Drosophila_littoralis',
'Drosophila_hydei',
'Drosophila_repleta')
resolved_names <- tnrs_match_names(taxa,context_name = "Animals")
library(rotl)
resolved_names <- tnrs_match_names(taxa,context_name = "Animals")
resolved_names
# To check for mismatches
newname <- gsub(" ", "_", tolower(resolved_names$unique_name)) # remove underscores from resolved names table
# Making the tree
tree1 <- tol_induced_subtree(ott_ids = resolved_names$ott_id)
tree1$tip.label <- strip_ott_ids(tree1$tip.label) # Remove ott IDs for presentation
tree1$node.label <- NULL # Remove node labels (these might be a problem later)
summary.phylo(tree1) # Check number of tips match number of species
library(ape)
summary.phylo(tree1) # Check number of tips match number of species
plot(tree1)
?(expression)
?expression
?paste
load("C:/Users/Liam/AppData/Local/Temp/9cf5d377-5f4c-44c3-b93b-1eca6fdb1a39_ecology_comment-1.0.zip.a39/daniel1noble-ecology_comment-ee7c66f/EqualStudy.RData")
setwd("C:/Users/Liam/Documents/GitHub/Thermal_Fertility_Meta-Analysis")
#| echo: false
#| warning: false
#| include: false
#| eval: true
#install.packages("pacman")
#devtools::install_github("daniel1noble/metaAidR", force=TRUE)
pacman::p_load(tidyverse, here, ggplot2, rotl, multicomp, dplyr, clubSandwich, tidyr,  metafor, ape, phytools, corrplot, metaAidR, orchaRd, latex2exp, flextable)
# source functions
source(here("R", "func.R"))
options(digits = 6)
#| echo: false
#| warning: false
#| include: false
#| eval: true
## rerun all models?
rerun <- FALSE
#| echo: false
#| warning: false
#| include: false
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
### select data for analysis
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata <- alllong
### Species names which need changing for phylogeny.
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea ashmeadi")]              <- "Gonatocerus ashmeadi"
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea triguttata")]   <- "Gonatocerus triguttatus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <-  "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Daphnia australis")]            <-  "Daphniopsis australis"
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_long_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE)
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix
# use a randomization approach to deal with polytomies.
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html
saveRDS(rdata, here("Output", "Output data", "longevity", "data_full_longevity.rds"))
#| echo: false
#| warning: false
#| include: false
#|
# Simple model (no random effects)
if(rerun){
meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1)}
#| echo: false
#| warning: false
#| include: false
#|
# Adding four random factors
if(rerun){
meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
saveRDS(meta2, here("Output", "models", "longevity", "mv_long_2.rds"))
} else {
meta2 <- readRDS(here("Output", "models", "longevity", "mv_long_2.rds"))
}
#| echo: false
#| warning: false
#| include: false
# Assumes a correlation of 0.5 between effect sizes from the same experiment
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
# Add new variance matrix for shared_control into the mixed-effects meta-analysis model
if(rerun){
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
saveRDS(meta3, here("Output", "models", "longevity", "mv_long_3.rds"))
} else {
meta3 <-  readRDS(here("Output", "models", "longevity", "mv_long_3.rds"))
}
#| echo: false
#| warning: false
#| include: true
#| eval: false
summary(meta3)
i2_ml(meta3, method=c("ratio"))
#| echo: false
#| warning: false
#| include: false
#|
if(rerun){
## without phylogeny or species
meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
saveRDS(meta4, here("Output", "models", "longevity", "mv_long_4.rds"))
## without phylogeny
meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta5, here("Output", "models", "longevity", "mv_long_5.rds"))
## without phylogeny, species or study_code
meta7 <- rma.mv(es, VCV_shared, random= list(~1|obs), data= rdata, method= "REML")
saveRDS(meta7, here("Output", "models", "longevity", "mv_long_7.rds"))
} else {
meta4 <- readRDS(here("Output", "models", "longevity", "mv_long_4.rds"))
meta5 <- readRDS(here("Output", "models", "longevity",  "mv_long_5.rds"))
meta7 <- readRDS(here("Output", "models", "longevity", "mv_long_7.rds"))
}
#| echo: false
#| warning: false
#| include: false
#|
if(rerun){
# warm/cool
meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm, here("Output", "models", "longevity", "mv_long_warm.rds"))
# warm/cool -1
meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm_nointer, here("Output", "models", "longevity", "mv_long_warm-1.rds"))
# ref temp
meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_ref, here("Output", "models", "longevity", "mv_long_ref.rds"))
# treat temp centered
meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treattemp, here("Output", "models", "longevity", "mv_long_ctemp.rds"))
# treat temp^2 centered
meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
r2_ml(meta_trait_treat2)
saveRDS(meta_trait_treat2, here("Output", "models", "longevity",  "mv_long_ctemp2.rds"))
# treat temp^3 centered
meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~ poly(c_treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat3, here("Output", "models", "longevity", "mv_long_ctemp3.rds"))
r2_ml(meta_trait_treat3)
# treat temp^4 centered
meta_trait_treat4 <- rma.mv(es, VCV_shared,  mod= ~ poly(c_treattemp, degree=4, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat3, here("Output", "models", "longevity", "mv_long_ctemp4.rds"))
# diff temp
meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_diff, here("Output", "models", "longevity", "mv_long_diff.rds"))
### binned treatment max temperatures.
rdata$bin.temp <- c(NA)
rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40"
rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40"
rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35"
rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30"
rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
rdata$bin.temp[which(rdata$treattemp <15)] <- "<15"
rdata$bin.temp <- factor(rdata$bin.temp)
levels(rdata$bin.temp)
table(rdata$bin.temp)
# binned temps
meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,
random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_bintemp, here("Output", "models", "longevity", "mv_long_bintemp.rds"))
} else {
meta_trait_warm  <- readRDS(here("Output", "models", "longevity", "mv_long_warm.rds"))
meta_trait_warm_nointer  <- readRDS(here("Output", "models", "longevity", "mv_long_warm-1.rds"))
meta_trait_ref <- readRDS(here("Output", "models", "longevity", "mv_long_ref.rds"))
meta_trait_treattemp  <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp.rds"))
meta_trait_treat2  <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp2.rds"))
meta_trait_diff <- readRDS(here("Output", "models", "longevity", "mv_long_diff.rds"))
meta_trait_bintemp <-  readRDS(here("Output", "models", "longevity", "mv_long_bintemp.rds"))
meta_trait_treat3 <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp3.rds"))
meta_trait_treat4 <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp4.rds"))
}
#| label: fig-treat3
#| fig-cap: Bubble plot of effect size of longevity when controlling for temperature.
preds.rep <- predict(meta_trait_treat2, addx=TRUE)
rep_data <- rdata
rep_data$pred <- preds.rep$pred
rep_data$pred.lb <- preds.rep$pi.lb
rep_data$pred.ub <- preds.rep$pi.ub
rep_data$c.lb <- preds.rep$ci.lb
rep_data$c.ub <- preds.rep$ci.ub
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,6)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in reproduction")
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,6)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in reproduction")
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,8)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in reproduction")
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,8)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in adult lifespan")
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,8)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in adult lifespan")
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,8)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in adult lifespan")
