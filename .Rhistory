df <- subset(df, select = -(Trait.category))
df <- subset(df, select = -(Trait))
write.csv(df, here("Data", "Combined_effectsizes.csv"))
write.csv(df, here("Data", "Combined_effectsizes.csv"))
colnames(rdata)
colnames(df)
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
rdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- subset(rdata, select = -Effect.size.code)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- subset(alllong, select = -Effect.size.code)
df <- merge(rdata, alllong, all=TRUE)
View(df)
df <- subset(df, select = -(Trait.category))
View(df)
View(df)
1381+1423
View(df)
df_cleaned <- df[!is.na(df$es.reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es.longevity), ]
df_cleaned <- df[!is.na(df$es.reproduction), ]
View(df)
!is.na(df$es.reproduction)
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
View(df_cleaned)
View(df_cleaned)
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
rdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- subset(rdata, select = -Effect.size.code)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- subset(alllong, select = -Effect.size.code)
df <- merge(rdata, alllong, all=TRUE)
write.csv(df, here("Data", "Combined_effectsizes.csv"))
View(df)
df_cleaned <- df[!is.na(u_combo$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es.longevity), ]
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es.longevity), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
write.csv(df_cleaned, "Data/cleaned_unique_combo.csv")
View(df)
View(df)
which(df$Sex == "Both")
df$Experiment.code[which(df$Sex == "Both"),]
df$Experiment.code[which(df$Sex == "Both")]
unique(df$Experiment.code[which(df$Sex == "Both")])
to.fix <- unique(df$Experiment.code[which(df$Sex == "Both")])
to.fix <- as.vector(to.fix)
write.csv(to.fix, "to.fix.csv")
View(rdata)
View(alllong)
df[which(df$Paper.code == "HUM302")])
df[which(df$Paper.code == "HUM302")]
df[which(df$Paper.code == "HUM302"),]
rdata[which(df$rdata== "HUM302"),]
rdata[which(df$rdata == "HUM302"),]
rdata[which(rdata$Paper.code == "HUM302"),]
alllong[which(alllong$Paper.code == "HUM302"),]
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
rdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- subset(rdata, select = -Effect.size.code)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- subset(alllong, select = -Effect.size.code)
df <- merge(rdata, alllong, all=TRUE)
View(df)
write.csv(df, here("Data", "Combined_effectsizes.csv"))
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
write.csv(df_cleaned, "Data/cleaned_unique_combo.csv")
to.fix <- unique(df$Experiment.code[which(df$Sex == "Both")])
to.fix <- as.vector(to.fix)
write.csv(to.fix, "to.fix.csv")
write.csv(to.fix, "to.fix.csv")
## Load in the finalised data
data <- read.csv(here("data", "cleaned_unique_combo.csv"))
## Load in the finalised data
data <- read.csv(here("data", "cleaned_unique_combo.csv"))
## Load in the finalised data
data <- read.csv(here("data", "cleaned_unique_combo.csv"))
#  Let's just orient the data length wise as we need it in this format first.
data_long <- data %>% pivot_longer(cols = c(es.reproduction, es.longevity, v.reproduction, v.longevity), names_to = "outcome", values_to = "es") %>% data.frame()
#  Let's just orient the data length wise as we need it in this format first.
data_long <- data %>% pivot_longer(cols = c(es.reproduction, es.longevity, v.reproduction, v.longevity), names_to = "outcome", values_to = "es") %>% data.frame()
#  Let's just orient the data length wise as we need it in this format first.
data_long <- data %>% pivot_longer(cols = c(es.reproduction, es.longevity, v.reproduction, v.longevity), names_to = "outcome", values_to = "es") %>% data.frame()
data_long <- data %>% pivot_longer(cols = c(es_reproduction, es_longevity, v_reproduction, v_longevity), names_to = "outcome", values_to = "es") %>% data.frame()
# Not quite where we need it, so lets filter out v and then cbind together
data_long_es <- data_long %>% filter(outcome %in% c("es_reproduction", "es_longevity"))
data_long_v <- data_long %>% filter(outcome %in% c("v_reproduction", "v_longevity"))
# All information should now be ordered correctly and the data frames the same dimensions. We can check
dim(data_long_es)
dim(data_long_v)
# Now, bind these together
data_long_final <- cbind(data_long_es, v = data_long_v$es)
# Create unique ID for clustered effects
data_long_final$trial <- with(data_long_final, interaction(Experiment.code, diff, Species.latin))
# Now, let's check that this data is set up correctly. If we group by Experiment.code, diff and outcome then we should have a maximum of 1 effect size for each study/diff in each outcome category
check <- data_long_final %>% group_by(trial, outcome) %>% summarise(n=n()) %>% filter(n !=1)
View(check)
# Create unique ID for clustered effects
data_long_final$trial <- with(data_long_final, interaction(Experiment.code, diff))
# Now, let's check that this data is set up correctly. If we group by Experiment.code, diff and outcome then we should have a maximum of 1 effect size for each study/diff in each outcome category
check <- data_long_final %>% group_by(trial, outcome) %>% summarise(n=n()) %>% filter(n !=1)
(check$trial)
# The Experiment code identifiers that are relevant are:
unique(check$trial)
View(data)
View(data)
View(data)
View(data)
# The Experiment code identifiers that are relevant are:
sort(unique(check$trial))
sort(unique(check$trial))
order(unique(check$trial))
class(unique(check$trial))
as.character(unique(check$trial))
duplicate.exp.code <- as.character(unique(check$trial))
sort(duplicate.exp.code)
setwd("~/GitHub/Thermal_Fertility_Meta-Analysis/EDA/Fixing raw data issues")
write.csv(as.vector(sort(duplicate.exp.code)), "duplicated.expcodes.csv")
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
View(effectdata)
which(effectdata$Paper == "HUM316")
which(effectdata$Paper.code == "HUM316")
effectdata[which(effectdata$Paper.code == "HUM316"),]
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
rdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- subset(rdata, select = -Effect.size.code)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- subset(alllong, select = -Effect.size.code)
df <- merge(rdata, alllong, all=TRUE)
View(df)
write.csv(df, here("Data", "Combined_effectsizes.csv"))
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
write.csv(df_cleaned, "Data/cleaned_unique_combo.csv")
setwd("~/GitHub/Thermal_Fertility_Meta-Analysis")
setwd("~/GitHub/Thermal_Fertility_Meta-Analysis")
write.csv(df, here("Data", "Combined_effectsizes.csv"))
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
write.csv(df_cleaned, "Data/cleaned_unique_combo.csv")
View(df_cleaned)
## Load in the finalised data
data <- read.csv(here("data", "cleaned_unique_combo.csv"))
data_long <- data %>% pivot_longer(cols = c(es_reproduction, es_longevity, v_reproduction, v_longevity), names_to = "outcome", values_to = "es") %>% data.frame()
# Not quite where we need it, so lets filter out v and then cbind together
data_long_es <- data_long %>% filter(outcome %in% c("es_reproduction", "es_longevity"))
data_long_v <- data_long %>% filter(outcome %in% c("v_reproduction", "v_longevity"))
# All information should now be ordered correctly and the data frames the same dimensions. We can check
dim(data_long_es)
dim(data_long_v)
# Now, bind these together
data_long_final <- cbind(data_long_es, v = data_long_v$es)
# Create unique ID for clustered effects
data_long_final$trial <- with(data_long_final, interaction(Experiment.code, diff))
# Now, let's check that this data is set up correctly. If we group by Experiment.code, diff and outcome then we should have a maximum of 1 effect size for each study/diff in each outcome category
check <- data_long_final %>% group_by(trial, outcome) %>% summarise(n=n()) %>% filter(n !=1)
# The Experiment code identifiers that are relevant are:
unique(check$trial)
View(df)
?merge
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
setwd("~/GitHub/Thermal_Fertility_Meta-Analysis")
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
pacman::p_load(tidyverse, here, dplyr, tidyr)
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
View(effectdata)
which(effectdata$Sex == "Both")
effectdata$Sex[which(effectdata$Sex == "Both")]
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise TEST.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
rdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- subset(rdata, select = -Effect.size.code)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- subset(alllong, select = -Effect.size.code)
df <- merge(rdata, alllong, all=TRUE)
View(df)
library(readr)
Combined_effectsizes <- read_csv("Data/Combined_effectsizes.csv")
View(Combined_effectsizes)
write.csv(df, here("Data", "Combined_effectsizes.csv"))
df_cleaned <- df[!is.na(df$es_reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es_longevity), ]
View(df_cleaned)
View(Combined_effectsizes)
View(df)
library(readr)
cleaned_unique_combo <- read_csv("Data/cleaned_unique_combo.csv")
View(cleaned_unique_combo)
write.csv(df_cleaned, "Data/cleaned_unique_combo.csv")
setwd("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Trees")
#install.packages("pacman")
pacman::p_load(tidyverse, here, metafor, ape, phytools)
# source functions
source(here("R", "func.R"))
## Load in the finalised data
data <- read.csv(here("data", "cleaned_unique_combo.csv"))
data_long <- data %>% pivot_longer(cols = c(es_reproduction, es_longevity, v_reproduction, v_longevity), names_to = "outcome", values_to = "es") %>% data.frame()
# Not quite where we need it, so lets filter out v and then cbind together
data_long_es <- data_long %>% filter(outcome %in% c("es_reproduction", "es_longevity"))
data_long_v <- data_long %>% filter(outcome %in% c("v_reproduction", "v_longevity"))
# All information should now be ordered correctly and the data frames the same dimensions. We can check
dim(data_long_es)
dim(data_long_v)
# Now, bind these together
data_long_final <- cbind(data_long_es, v = data_long_v$es)
# Create unique ID for clustered effects
data_long_final$trial <- with(data_long_final, interaction(Experiment.code, diff))
# Now, let's check that this data is set up correctly. If we group by Experiment.code, diff and outcome then we should have a maximum of 1 effect size for each study/diff in each outcome category
check <- data_long_final %>% group_by(trial, outcome) %>% summarise(n=n()) %>% filter(n !=1)
# The Experiment code identifiers that are relevant are:
unique(check$trial) # 0
V <- metafor::vcalc(vi=v, cluster = trial, type = outcome, data = data_long_final, rho = 0.5, nearpd = TRUE)
# Check that this is set up correctly. Note that there are warnings about non-positive definite matrix. The matrix should be automatically.
V[1:6, 1:6]
View(data_long_final)
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
rdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
data <- rbind(rdata, alllong)
View(data)
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
repdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata <- rbind(repdata, alllong)
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
repdata <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata <- rbind(repdata, alllong)
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
View(rdata)
### setting covariance marix ###
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
library(metafor)
library(ggplot2)
library(ape)
library(rotl)
library(multcomp)
library(dplyr)
library(ggtree)
# To install the orchaRd package:
#install.packages("pacman")
#pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
#devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
library(clubSandwich)
library(rmarkdown)
### setting covariance marix ###
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
View(rdata)
## Random factors: obs, study_code. Fixed Factors: Trait
meta_trait <- rma.mv(es, VCV_shared, mod=~Trait.category,
random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
summary(meta4)
summary(meta4_trait)
summary(meta_trait)
uniquedata <- read.csv("Data/cleaned_unique_combo.csv")
expcodes <- unique(uniquedata$Experiment.code)
expcodes
test <- subset(rdata, Experiment.code = expcode)
test <- subset(rdata, Experiment.code = as.vector(expcode))
test <- subset(rdata, Experiment.code %in% expcode)
expcodes <- as.vector(unique(uniquedata$Experiment.code))
test <- subset(rdata, Experiment.code %in% expcode)
test <- subset(rdata, Experiment.code %in% expcodes)
nlevels(Paper.code)
nlevels(rdata$Paper.code)
nlevels(rdata$Paper.code)
nlevels(factor(uniquedata$Paper.code))
nlevels(factor(rdata$Paper.code))
View(test)
View(uniquedata)
levels(factor(rdata$Paper.code))
levels(factor(rdata$Paper.code))[1:20]
levels(factor(uniquedata$Paper.code))[1:20]
nlevels(factor(test$Paper.code))
VCV_shared <- impute_covariance_matrix(vi=test$v, cluster = test$shared_control, r=0.5)
meta_trait_test <- rma.mv(es, VCV_shared, mod=~Trait.category,
random= list(~ 1|study_code, ~1|obs), data= test, method= "REML")
summay(meta_trait_test)
summary(meta_trait_test)
## Load in the finalised data
data <- read.csv(here("data", "cleaned_unique_combo.csv"))
data_long <- data %>% pivot_longer(cols = c(es_reproduction, es_longevity, v_reproduction, v_longevity), names_to = "outcome", values_to = "es") %>% data.frame()
# Not quite where we need it, so lets filter out v and then cbind together
data_long_es <- data_long %>% filter(outcome %in% c("es_reproduction", "es_longevity"))
data_long_v <- data_long %>% filter(outcome %in% c("v_reproduction", "v_longevity"))
# All information should now be ordered correctly and the data frames the same dimensions. We can check
dim(data_long_es)
dim(data_long_v)
# Now, bind these together
data_long_final <- cbind(data_long_es, v = data_long_v$es)
# Create unique ID for clustered effects
data_long_final$trial <- with(data_long_final, interaction(Experiment.code, diff))
# Now, let's check that this data is set up correctly. If we group by Experiment.code, diff and outcome then we should have a maximum of 1 effect size for each study/diff in each outcome category
check <- data_long_final %>% group_by(trial, outcome) %>% summarise(n=n()) %>% filter(n !=1)
V <- metafor::vcalc(vi=v, cluster = trial, type = outcome, data = data_long_final, rho = 0.5, nearpd = TRUE)
## Random factors: obs, study_code. Fixed Factors: Trait and treatment temp
meta_trait_test <- rma.mv(es, VCV_shared, mod=~Trait.category*treattemp,
random= list(~ 1|study_code, ~1|obs), data= test, method= "REML")
# Now that we have the MLMA model we can start to estimate different fixed effects and ask if these fixed effects that impact ES for longevity and reproduction differ between the two.
mv_mlma_2 <- rma.mv(es ~ outcome*treattemp - 1, V = V,    # This should compare whether the linear effect of temperature differs between the two outcomes when we allow for intercept, but without intercept (as is here) it will test whether there is a linear effect of temperature on each outcome separately and estimate that effect
random = list(~outcome - 1 | trial,        # This would be equivalent to an obs level random effect bc trial is unique to each two effects
~outcome - 1 | Paper.code),  # This should estimate a study level random effect for each outcome.
struc = "UN", data = data_long_final, test = "t", dfs = "contain")
V <- metafor::vcalc(vi=v, cluster = trial, type = outcome, data = data_long_final, rho = 0.5, nearpd = TRUE)
# Now that we have the MLMA model we can start to estimate different fixed effects and ask if these fixed effects that impact ES for longevity and reproduction differ between the two.
mv_mlma_2 <- rma.mv(es ~ outcome*treattemp - 1, V = V,    # This should compare whether the linear effect of temperature differs between the two outcomes when we allow for intercept, but without intercept (as is here) it will test whether there is a linear effect of temperature on each outcome separately and estimate that effect
random = list(~outcome - 1 | trial,        # This would be equivalent to an obs level random effect bc trial is unique to each two effects
~outcome - 1 | Paper.code),  # This should estimate a study level random effect for each outcome.
struc = "UN", data = data_long_final, test = "t", dfs = "contain")
View(meta_trait_test)
summary(meta_trait_test)
summary(mv_mlma_2)
VCV_full <- impute_covariance_matrix(vi=rdata$v, cluster = test$shared_control, r=0.5)
VCV_full <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
meta_trait_full <- rma.mv(es, VCV_full, mod=~Trait.category*treattemp,
random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_full)
save.image("~/GitHub/Thermal_Fertility_Meta-Analysis/Output/meta_fixed_effect_traits.RData")
