#| warning: false
#| include: false
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
survdata_warm <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Warm" )
survdata_cool <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Cool" )
allsurv <- rbind(survdata_warm, survdata_cool)
### select data for analysis
rdata <- allsurv
rdata <- subset(rdata, Paper.code != "HUM251")
########### change species names in survival data ####################################
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify correct classifications from map
classes <- read.csv(here("Data", "Species_Classifications.csv"))
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for random factor
# Precision
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_surv_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE)
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix
# use a randomization approach to deal with polytomies.
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html
saveRDS(rdata, here("Output", "Output data", "survival", "data_full_survival.rds"))
###################
## import tree from map, determine which species are in the survival dataset
notin <- setdiff(tree1$tip.label, rdata$Species.latin)
indata <- setdiff(tree1$tip.label, notin)
## prune tree
prune_tree <- drop.tip(tree_grafen, notin)
phylo_matrix <- vcv(prune_tree, cor=TRUE, model="Brownian")
## number of indata should equal # of unique rdata species.
missing_species <- setdiff(unique(rdata$Species.latin), indata)
print(paste("Missing species from tree:", toString(missing_species)))
##### create data frame and plot tree ###################
plot_data <- c()
plot_data$species_latin <- indata
plot_data$class <- rdata$Class[match(indata, rdata$Species.latin)]
plot_data <- as.data.frame(unique(plot_data))
colnames(plot_data) <- c("species_latin", "class")
plot_data$class[which(plot_data$class == "Arachnid")] <- "Arachnida"
plot_data$class[which(plot_data$class == "Insect")] <- "Insecta"
ggtree(prune_tree, layout = "circular", lwd = 0.1) %<+% plot_data +
geom_tiplab(size=1.2, offset=0.01) +
aes(col = class)
#| echo: false
#| warning: false
#| include: false
#| eval: true
#|
# Simple model (no random effects)
if(rerun){
meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1)}
#| echo: false
#| warning: false
#| include: false
#| eval: true
# Adding four random factors
if(rerun){
meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
saveRDS(meta2, here("Output", "models", "survival", "mv_surv_2.rds"))
} else {
meta2 <- readRDS(here("Output", "models", "survival", "mv_surv_2.rds"))
}
#| echo: false
#| warning: false
#| include: false
#| eval: true
# Assumes a correlation of 0.5 between effect sizes from the same experiment
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
# Add new variance matrix for shared_control into the mixed-effects meta-analysis model
if(rerun){
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
saveRDS(meta3, here("Output", "models", "survival", "mv_surv_3.rds"))
} else {
meta3 <-  readRDS(here("Output", "models", "survival", "mv_surv_3.rds"))
}
#| echo: true
#| warning: false
#| include: true
#| eval: true
summary(meta3)
i2_ml(meta3, method=c("ratio"))
#| echo: true
#| warning: false
#| include: false
#| eval: true
#|
if(rerun){
## without phylogeny or species
meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
saveRDS(meta4, here("Output", "models", "survival", "mv_surv_4.rds"))
## without phylogeny
meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta5, here("Output", "models", "survival", "mv_surv_5.rds"))
## without phylogeny, species or study_code
meta7 <- rma.mv(es, VCV_shared, random= list(~1|obs), data= rdata, method= "REML")
saveRDS(meta7, here("Output", "models", "survival", "mv_surv_7.rds"))
} else {
meta4 <- readRDS(here("Output", "models", "survival", "mv_surv_4.rds"))
meta5 <- readRDS(here("Output", "models", "survival",  "mv_surv_5.rds"))
meta7 <- readRDS(here("Output", "models", "survival", "mv_surv_7.rds"))
}
#| echo: true
#| warning: false
#| include: true
#| eval: true
#|
if(rerun){
# warm/cool
meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm, here("Output", "models", "survival", "mv_surv_warm.rds"))
# warm/cool -1
meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm_nointer, here("Output", "models", "survival", "mv_surv_warm-1.rds"))
# ref temp
meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_ref, here("Output", "models", "survival", "mv_surv_ref.rds"))
# treat temp centered
meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treattemp, here("Output", "models", "survival", "mv_surv_ctemp.rds"))
# treat temp^2 centered
meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML", test="t")
saveRDS(meta_trait_treat2, here("Output", "models", "survival", "mv_surv_ctemp2.rds"))
r2_ml(meta_trait_treat2)
# treat temp^3 centered
meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat3, here("Output", "models", "survival", "mv_surv_ctemp3.rds"))
# diff temp
meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_diff, here("Output", "models", "survival", "mv_surv_diff.rds"))
### binned treatment max temperatures.
rdata$bin.temp <- c(NA)
rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40"
rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40"
rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35"
rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30"
rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
rdata$bin.temp[which(rdata$treattemp <15)] <- "<15"
rdata$bin.temp <- factor(rdata$bin.temp)
levels(rdata$bin.temp)
table(rdata$bin.temp)
# binned temps
meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,
random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_bintemp, here("Output", "models", "survival", "mv_surv_bintemp.rds"))
} else {
meta_trait_warm  <- readRDS(here("Output", "models", "survival", "mv_surv_warm.rds"))
meta_trait_warm_nointer  <- readRDS(here("Output", "models", "survival", "mv_surv_warm-1.rds"))
meta_trait_ref <- readRDS(here("Output", "models", "survival", "mv_surv_ref.rds"))
meta_trait_treattemp  <- readRDS(here("Output", "models", "survival", "mv_surv_ctemp.rds"))
meta_trait_treat2  <- readRDS(here("Output", "models",  "survival", "mv_surv_ctemp2.rds"))
meta_trait_treat3  <- readRDS(here("Output", "models",  "survival", "mv_surv_ctemp3.rds"))
meta_trait_diff <- readRDS(here("Output", "models", "survival", "mv_surv_diff.rds"))
meta_trait_bintemp <-  readRDS(here("Output", "models", "survival", "mv_surv_bintemp.rds"))
}
#| echo: false
#| warning: false
#| include: true
#| eval: true
summary(meta_trait_treat2)
#| label: fig-treat2
#| fig-cap: Bubble plot of effect size of survival when controlling for temperature.
preds.rep <- predict(meta_trait_treat2, addx=TRUE)
rep_data <- rdata
rep_data$pred <- preds.rep$pred
rep_data$pred.lb <- preds.rep$pi.lb
rep_data$pred.ub <- preds.rep$pi.ub
rep_data$c.lb <- preds.rep$ci.lb
rep_data$c.ub <- preds.rep$ci.ub
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,6)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in survival")
# Save as pdf (6x8)
summary(meta_trait_bintemp)
orchard_plot(meta_trait_bintemp, mod = "bin.temp", xlab = "Effect size", transfm = "none",
cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40"))
rdata_exc205 <- subset(rdata, Paper.code != "OSM205")
new_vcv <- impute_covariance_matrix(vi=rdata_exc205$v, cluster = rdata_exc205$shared_control, r=0.5)
meta_trait_treattemp_sa <- rma.mv(es, new_vcv,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_treattemp_sa)
meta_trait_warm_sa <- rma.mv(es, new_vcv,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_warm_sa)
meta_trait_diff_sa <- rma.mv(es, new_vcv,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_diff_sa)
meta_trait_treat2_sa <- rma.mv(es, new_vcv,  mod= ~ poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_treat2_sa)
p <- bubble_plot(meta_trait_treat2_sa, mod = "treattemp", group="study_code")
#| echo: true
#| warning: false
#| include: false
#| eval: true
#install.packages("pacman")
#devtools::install_github("daniel1noble/metaAidR", force=TRUE)
pacman::p_load(tidyverse, here, ggplot2, ggtree, rotl, multcomp, dplyr, clubSandwich, tidyr,  metafor, ape, phytools, corrplot, metaAidR, orchaRd, latex2exp, flextable)
# source functions
source(here("R", "func.R"))
options(digits = 6)
#| echo: true
#| warning: false
#| include: false
#| eval: true
## rerun all models?
rerun <- TRUE
#| echo: false
#| warning: false
#| include: false
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
survdata_warm <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Warm" )
survdata_cool <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Cool" )
allsurv <- rbind(survdata_warm, survdata_cool)
### select data for analysis
rdata <- allsurv
rdata <- subset(rdata, Paper.code != "HUM251")
########### change species names in survival data ####################################
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify correct classifications from map
classes <- read.csv(here("Data", "Species_Classifications.csv"))
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for random factor
# Precision
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_surv_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE)
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix
# use a randomization approach to deal with polytomies.
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html
saveRDS(rdata, here("Output", "Output data", "survival", "data_full_survival.rds"))
###################
## import tree from map, determine which species are in the survival dataset
notin <- setdiff(tree1$tip.label, rdata$Species.latin)
indata <- setdiff(tree1$tip.label, notin)
## prune tree
prune_tree <- drop.tip(tree_grafen, notin)
phylo_matrix <- vcv(prune_tree, cor=TRUE, model="Brownian")
## number of indata should equal # of unique rdata species.
missing_species <- setdiff(unique(rdata$Species.latin), indata)
print(paste("Missing species from tree:", toString(missing_species)))
##### create data frame and plot tree ###################
plot_data <- c()
plot_data$species_latin <- indata
plot_data$class <- rdata$Class[match(indata, rdata$Species.latin)]
plot_data <- as.data.frame(unique(plot_data))
colnames(plot_data) <- c("species_latin", "class")
plot_data$class[which(plot_data$class == "Arachnid")] <- "Arachnida"
plot_data$class[which(plot_data$class == "Insect")] <- "Insecta"
ggtree(prune_tree, layout = "circular", lwd = 0.1) %<+% plot_data +
geom_tiplab(size=1.2, offset=0.01) +
aes(col = class)
#| echo: false
#| warning: false
#| include: false
#| eval: true
#|
# Simple model (no random effects)
if(rerun){
meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1)}
#| echo: false
#| warning: false
#| include: false
#| eval: true
# Adding four random factors
if(rerun){
meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
saveRDS(meta2, here("Output", "models", "survival", "mv_surv_2.rds"))
} else {
meta2 <- readRDS(here("Output", "models", "survival", "mv_surv_2.rds"))
}
#| echo: false
#| warning: false
#| include: false
#| eval: true
# Assumes a correlation of 0.5 between effect sizes from the same experiment
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
# Add new variance matrix for shared_control into the mixed-effects meta-analysis model
if(rerun){
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
saveRDS(meta3, here("Output", "models", "survival", "mv_surv_3.rds"))
} else {
meta3 <-  readRDS(here("Output", "models", "survival", "mv_surv_3.rds"))
}
#| echo: true
#| warning: false
#| include: true
#| eval: true
summary(meta3)
i2_ml(meta3, method=c("ratio"))
#| echo: true
#| warning: false
#| include: false
#| eval: true
#|
if(rerun){
## without phylogeny or species
meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
saveRDS(meta4, here("Output", "models", "survival", "mv_surv_4.rds"))
## without phylogeny
meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta5, here("Output", "models", "survival", "mv_surv_5.rds"))
## without phylogeny, species or study_code
meta7 <- rma.mv(es, VCV_shared, random= list(~1|obs), data= rdata, method= "REML")
saveRDS(meta7, here("Output", "models", "survival", "mv_surv_7.rds"))
} else {
meta4 <- readRDS(here("Output", "models", "survival", "mv_surv_4.rds"))
meta5 <- readRDS(here("Output", "models", "survival",  "mv_surv_5.rds"))
meta7 <- readRDS(here("Output", "models", "survival", "mv_surv_7.rds"))
}
#| echo: true
#| warning: false
#| include: true
#| eval: true
#|
if(rerun){
# warm/cool
meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm, here("Output", "models", "survival", "mv_surv_warm.rds"))
# warm/cool -1
meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm_nointer, here("Output", "models", "survival", "mv_surv_warm-1.rds"))
# ref temp
meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_ref, here("Output", "models", "survival", "mv_surv_ref.rds"))
# treat temp centered
meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treattemp, here("Output", "models", "survival", "mv_surv_ctemp.rds"))
# treat temp^2 centered
meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML", test="t")
saveRDS(meta_trait_treat2, here("Output", "models", "survival", "mv_surv_ctemp2.rds"))
r2_ml(meta_trait_treat2)
# treat temp^3 centered
meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat3, here("Output", "models", "survival", "mv_surv_ctemp3.rds"))
# diff temp
meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_diff, here("Output", "models", "survival", "mv_surv_diff.rds"))
### binned treatment max temperatures.
rdata$bin.temp <- c(NA)
rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40"
rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40"
rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35"
rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30"
rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
rdata$bin.temp[which(rdata$treattemp <15)] <- "<15"
rdata$bin.temp <- factor(rdata$bin.temp)
levels(rdata$bin.temp)
table(rdata$bin.temp)
# binned temps
meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,
random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_bintemp, here("Output", "models", "survival", "mv_surv_bintemp.rds"))
} else {
meta_trait_warm  <- readRDS(here("Output", "models", "survival", "mv_surv_warm.rds"))
meta_trait_warm_nointer  <- readRDS(here("Output", "models", "survival", "mv_surv_warm-1.rds"))
meta_trait_ref <- readRDS(here("Output", "models", "survival", "mv_surv_ref.rds"))
meta_trait_treattemp  <- readRDS(here("Output", "models", "survival", "mv_surv_ctemp.rds"))
meta_trait_treat2  <- readRDS(here("Output", "models",  "survival", "mv_surv_ctemp2.rds"))
meta_trait_treat3  <- readRDS(here("Output", "models",  "survival", "mv_surv_ctemp3.rds"))
meta_trait_diff <- readRDS(here("Output", "models", "survival", "mv_surv_diff.rds"))
meta_trait_bintemp <-  readRDS(here("Output", "models", "survival", "mv_surv_bintemp.rds"))
}
#| echo: false
#| warning: false
#| include: true
#| eval: true
summary(meta_trait_treat2)
#| label: fig-treat2
#| fig-cap: Bubble plot of effect size of survival when controlling for temperature.
preds.rep <- predict(meta_trait_treat2, addx=TRUE)
rep_data <- rdata
rep_data$pred <- preds.rep$pred
rep_data$pred.lb <- preds.rep$pi.lb
rep_data$pred.ub <- preds.rep$pi.ub
rep_data$c.lb <- preds.rep$ci.lb
rep_data$c.ub <- preds.rep$ci.ub
ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
geom_line() +
geom_line(aes(y=pred.lb), linetype="dotted") +
geom_line(aes(y=pred.ub), linetype="dotted") +
geom_hline(yintercept=0) +
geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white",
stroke=0.2, alpha=0.5, show.legend = FALSE) +
scale_size(range = c(1, 5)) +
theme_bw() +
coord_cartesian(ylim=c(-12,6)) +
scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
labs(x = "Experimental temperature (°C)",
y = "Standardised change in survival")
# Save as pdf (6x8)
summary(meta_trait_bintemp)
orchard_plot(meta_trait_bintemp, mod = "bin.temp", xlab = "Effect size", transfm = "none",
cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40"))
rdata_exc205 <- subset(rdata, Paper.code != "OSM205")
new_vcv <- impute_covariance_matrix(vi=rdata_exc205$v, cluster = rdata_exc205$shared_control, r=0.5)
meta_trait_treattemp_sa <- rma.mv(es, new_vcv,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_treattemp_sa)
meta_trait_warm_sa <- rma.mv(es, new_vcv,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_warm_sa)
meta_trait_diff_sa <- rma.mv(es, new_vcv,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_diff_sa)
meta_trait_treat2_sa <- rma.mv(es, new_vcv,  mod= ~ poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_treat2_sa)
p <- bubble_plot(meta_trait_treat2_sa, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
meta_trait_bintemp_sa <- rma.mv(es, new_vcv,  mod= ~bin.temp-1,  random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_bintemp_sa)
plot <- orchard_plot(meta_trait_bintemp_sa, mod = "bin.temp", xlab = "Effect size", transfm = "none",
cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40"))
plot + coord_cartesian(ylim=c(-5,5))
minq <- quantile(rdata$es, 0.025)
maxq <- quantile(rdata$es, 0.975)
sdata <- subset(rdata, es > minq & es < maxq)
print(minq)
print(maxq)
# recreate vcv_shared matrix
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
meta_sa_treat2 <- rma.mv(es, VCV_shared_sa,  mod= ~ poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= sdata, method= "REML")
summary(meta_sa_treat2)
p <- bubble_plot(meta_sa_treat2, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
meta_sa_treat <- rma.mv(es, VCV_shared_sa,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= sdata, method= "REML")
summary(meta_sa_treat)
p <- bubble_plot(meta_sa_treat, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
table(sdata$bin.temp)
meta_sa_bintemp <- rma.mv(es, VCV_shared_sa,  mod= ~bin.temp-1,  random= list(~ 1|study_code,  ~1|obs), data= sdata, test = "t", dfs = "contain", method= "REML")
summary(meta_sa_bintemp)
plot <- orchard_plot(meta_sa_bintemp, mod = "bin.temp", xlab = "Effect size", transfm = "none",
cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40"))
plot+ coord_cartesian(ylim=c(-8,8))
meta_year <- rma.mv(es, new_vcv,  mod= ~Publication.year,  random= list(~ 1|study_code,  ~1|obs), data= rdata_exc205, test = "t", dfs = "contain", method= "REML")
summary(meta_year)
q <- bubble_plot(meta_year, mod = "Publication.year", group="study_code")
q+ coord_cartesian(ylim=c(-20,10))
