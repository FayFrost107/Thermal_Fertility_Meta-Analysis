color = "Life stage",  # Set the title of the color legend
fill = "Life stage",
linetype = "Life stage")   # Set the title of the fill legend (for ribbons)
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = pred, col = Life.stage.of.animal, linetype = Life.stage.of.animal)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Life.stage.of.animal), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage",  # Set the title of the color legend
fill = "Life stage",
linetype = "Life stage")   # Set the title of the fill legend (for ribbons)
sumary(meta_treat_ls)
summary(meta_treat_ls)
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange", linetype = "dashed"))+
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = "orange")) +
geom_line()
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange", linetype = "dashed"))+
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = "orange")) +
geom_point()
p <- bubble_plot(subset(sex_rep_data, Sex.exposed == "Female"), mod = "c_treattemp", group="study_code")
subset(sex_rep_data, Sex.exposed == "Female")
p <- bubble_plot(subset(sex_rep_data, Sex.exposed == "Female"), mod = "c_treattemp", group="study_code")
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange", linetype = "dashed"))+
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = "orange")) +
geom_point()
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange"))+
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = "orange")) +
geom_point()
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange"))+
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = "orange")) +
geom_point(x = c_treattemp, y = es, col = "orange")
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange"))+
geom_point(x = c_treattemp, y = es, col = "orange")
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es, col = "orange"))+
geom_point()
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es))+
geom_point(col = "orange")
labs(title = "Temperature effect on reproduciton for females",
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es))+
geom_point(col = "orange")+
labs(title = "Temperature effect on reproduciton for females",
x = "Temperature devaition from 25C",
y = "Effect size")
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es))+
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es))+
geom_point(col = "orange")+
labs(title = "Temperature effect on reproduciton for females",
x = "Temperature devaition from 25C")
ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es))+
geom_point(col = "orange")+
labs(title = "Temperature effect on reproduciton for females",
x = "Temperature devaition from 25C", y = "Effect size")
p <- ggplot(data = subset(sex_rep_data, Sex.exposed == "Female"), aes(x = c_treattemp, y = es))+
geom_point(col = "orange")+
labs(title = "Temperature effect on reproduciton for females",
x = "Temperature devaition from 25C", y = "Effect size")
p + ggplot(data = subset(sex_rep_data, Sex.exposed == "Both"), aes(x = c_treattemp, y = es))+
geom_point(col = "purple")
p + geom_point(data = subset(sex_rep_data, Sex.exposed == "Both"), aes(x = c_treattemp, y = es))+
geom_point(col = "purple")
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed, linetype = Sex.exposed)) +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
scale_color_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point()+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed, alpha=0.5)) +
geom_point()+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed, alpha=0.5)) +
geom_point()+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed",
alpha = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point()+
scale_color_manual(values = c("purple", "orange"),  alpha=0.5) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed",
alpha = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed, alpha=0.5)) +
geom_point()+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduciton",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim=c(-10,1)+)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim=c(-10,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim=c(-20,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim=c(-30,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim=c(-30,5))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage")   # Set the title of the fill legend (for ribbons)
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim = c(-10,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage")   # Set the title of the fill legend (for ribbons)
ls_adult <- subset(ls_data, Life.stage.of.animal == "Adult")
VCV_shared_ls_adult <- impute_covariance_matrix(vi=ls_adult$v, cluster = ls_data$shared_control, r=0.5)
VCV_shared_ls_adult <- impute_covariance_matrix(vi=ls_adult$v, cluster = ls_adult$shared_control, r=0.5)
meta_treat_ls_adult <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=2, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= ls_adult, method= "REML")
meta_treat_ls_adult <- rma.mv(es, VCV_shared_ls_adult,  mod= ~poly(c_treattemp, degree=2, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= ls_adult, method= "REML")
summary(meta_treat_ls_adult
)
summary(meta_treat_ls)
summary(meta_treat_ls_nointer)
View(ls_adult)
## ,=model only adult data to get model for bubble plot.
meta_treat_ls_adult <- rma.mv(es, VCV_shared_ls_adult,  mod= ~ -1 + poly(c_treattemp, degree=2, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= ls_adult, method= "REML")
summary(meta_treat_ls_adult)
## ,=model only adult data to get model for bubble plot.
meta_treat_ls_adult <- rma.mv(es, VCV_shared_ls_adult,  mod= ~ poly(c_treattemp, degree=2, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= ls_adult, method= "REML")
summary(meta_treat_ls_adult)
summary(meta_treat_ls)
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal, size = v)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim = c(-10,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage")   # Set the title of the fill legend (for ribbons)
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal, size = (1/v)) +
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal, size = v) +
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal, size = v)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim = c(-10,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage")   # Set the title of the fill legend (for ribbons)
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal, size = v)) +
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal, size = v)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim = c(-10,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage")   # Set the title of the fill legend (for ribbons)
### observed data
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
coord_cartesian(ylim = c(-10,1))+
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Life stage")   # Set the title of the fill legend (for ribbons)
meta4 <- readRDS(here("Output", "models", "reproduction", "mv_rep_4.rds"))
meta5 <- readRDS(here("Output", "models", "reproduction",  "mv_rep_5.rds"))
meta7 <- readRDS(here("Output", "models", "reproduction", "mv_rep_7.rds"))
i2_ml(meta4)
i2_ml(meta5)
i2_ml(meta5)[1]
#| label: tbl-re
#| tbl-cap: Estimated I2 and differenc ein AIC score for each combination of random effects models.
table <- data.frame(Parameters = c("I2 Total", "I2 Study_ID", "I2 Obs ID"),
Est.I2 = i2_ml(meta5))
#| label: tbl-re
#| tbl-cap: Estimated I2 and differenc ein AIC score for each combination of random effects models.
table <- data.frame(Parameters = c("I2 Total", "I2 Study_ID", "I2 Obs ID"),
Est.I2 = i2_ml(meta4))
View(table)
#| label: tbl-re
#| tbl-cap: Estimated I2 and differenc ein AIC score for each combination of random effects models.
table <- data.frame(Parameters = c("I2 Total", "I2 Study_ID", "I2 Obs ID"),
Est. I2 = i2_ml(meta4))
#| label: tbl-re
#| tbl-cap: Estimated I2 and differenc ein AIC score for each combination of random effects models.
table <- data.frame(Parameters = c("I2 Total", "I2 Study_ID", "I2 Obs ID"),
Est_I2 = i2_ml(meta4))
flextable(table)
#| label: tbl-re
#| tbl-cap: Estimated I2 and differenc ein AIC score for each combination of random effects models.
table <- data.frame(Parameters = c("I2 Total", "I2 Study_ID", "I2 Obs ID"),
Est_I2 = round(i2_ml(meta4, 2)))
flextable(table)
#| label: tbl-re
#| tbl-cap: Estimated I2 and differenc ein AIC score for each combination of random effects models.
table <- data.frame(Parameters = c("I2 Total", "I2 Study_ID", "I2 Obs ID"),
Est_I2 = round(i2_ml(meta4),2))
flextable(table)
flextable(table)
meta_trait_treat2  <- readRDS(here("Output", "models", "mv_rep_ctemp2.rds"))
i2(meta_trait_treat2)
i2_ml(meta_trait_treat2)
rerun=FALSE
#| echo: false
#| warning: false
#| include: false
## Sex exposed
# We could lump categories so that we have cases where males are included (Both, Male), versus cases with just females (Female, Parthenogenetic),
# with Unsure removed. I would predict that the 'Both' category would show the biggest drop for reproduction, but there will be no difference for lifespan
if(rerun){
new_data <- rdata
new_data$Sex.exposed[which(new_data$Sex.exposed == "Male")] <- "Both"
new_data$Sex.exposed[which(new_data$Sex.exposed == "Parthenogenetic")] <- "Female"
new_data <- subset(new_data, Sex.exposed != "Unsure")
VCV_shared_sex <- impute_covariance_matrix(vi=new_data$v, cluster = new_data$shared_control, r=0.5)
meta_treat_sex <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Sex.exposed,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
meta_treat_sex_nointer <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Sex.exposed-1,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
saveRDS(meta_treat_sex, here("Output", "models", "reproduction", "meta_treat_rep_sex.rds"))
saveRDS(meta_treat_sex_nointer, here("Output", "models", "reproduction", "meta_treat_rep_sex_nointer.rds"))
saveRDS(new_data, here("Output", "Output data",  "data_rep_sex.rds"))
## Life-stage
# We could lump categories so that we have cases where only adults were exposed (Adult),
# versus cases where immature stages were exposed (Juvenile, Larvae, Pupae, Mix)- perhaps after excluding 'Egg' and 'Embryo' because these categories are a bit weird
ls_data <- rdata
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Juvenile")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Larvae")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Mix")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Pupae")] <- "Immature"
ls_data <- subset(ls_data, Life.stage.of.animal != "Egg")
ls_data <- subset(ls_data, Life.stage.of.animal != "Embryo")
VCV_shared_life <- impute_covariance_matrix(vi=ls_data$v, cluster = ls_data$shared_control, r=0.5)
meta_treat_ls <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Life.stage.of.animal,
random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML")
meta_treat_ls_nointer <- rma.mv(es, VCV_shared_life,  mod= ~ -1 + poly(c_treattemp, degree=2, raw=TRUE)*Life.stage.of.animal,
random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML")
saveRDS(meta_treat_ls, here("Output", "models", "reproduction", "meta_treat_rep_ls.rds"))
saveRDS(meta_treat_ls_nointer, here("Output", "models", "reproduction", "meta_treat_rep_ls_nointer.rds"))
saveRDS(ls_data, here("Output", "Output data", "data_rep_ls.rds"))
} else {
meta_treat_sex <- readRDS(here("Output", "models", "reproduction", "meta_treat_rep_sex.rds"))
meta_treat_sex_nointer <- readRDS(here("Output", "models", "reproduction", "meta_treat_rep_sex_nointer.rds"))
new_data <- readRDS(here("Output", "Output data", "data_rep_sex.rds"))
meta_treat_ls <- readRDS(here("Output", "models", "reproduction", "meta_treat_rep_ls.rds"))
meta_treat_ls_nointer <- readRDS(here("Output", "models", "reproduction", "meta_treat_rep_ls_nointer.rds"))
ls_data <- readRDS(here("Output", "Output data", "data_rep_ls.rds"))
}
#| label: tbl-sex
#| tbl-cap: Non-linear effects of temperature and sex exposed on mean effect size of reproduction
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Both","Quadratic Treatment Temperature (centered) - Both", "Both (mean)", "Females only (mean)", "Treatment Temperature (centered) - Females only","Quadratic Treatment Temperature (centered) - Females only"),
Est. = round(meta_treat_sex_nointer$b, 4),
`L 95% CI` = round(meta_treat_sex_nointer$ci.lb, 4),
`U 95% CI` = round(meta_treat_sex_nointer$ci.ub, 4),
`p-value` = sapply(round(meta_treat_sex_nointer$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
#| label: tbl-sex
#| tbl-cap: Non-linear effects of temperature and sex exposed on mean effect size of reproduction
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Both","Quadratic Treatment Temperature (centered) - Both", "Both (mean)", "Females only (mean)", "Treatment Temperature (centered) - Females only","Quadratic Treatment Temperature (centered) - Females only"),
Est. = round(meta_treat_sex_nointer$b, 4),
`L 95% CI` = round(meta_treat_sex_nointer$ci.lb, 4),
`U 95% CI` = round(meta_treat_sex_nointer$ci.ub, 4),
`p-value` = sapply(round(meta_treat_sex_nointer$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
#| label: fig-figsex
#| fig-cap: Predicited models of sex exposed and temeprature effects on reproduction.
preds.rep.sex <- predict(meta_treat_sex, addx=TRUE)
sex_rep_data <- new_data
sex_rep_data$pred <- preds.rep.sex$pred
sex_rep_data$pred.lb <- preds.rep.sex$pi.lb
sex_rep_data$pred.ub <- preds.rep.sex$pi.ub
sex_rep_data$c.lb <- preds.rep.sex$ci.lb
sex_rep_data$c.ub <- preds.rep.sex$ci.ub
library(ggplot2)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = pred, col = Sex.exposed, linetype = Sex.exposed)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Sex.exposed), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed",  # Set the title of the color legend
fill = "Sex exposed",
linetype = "Sex exposed")   # Set the title of the fill legend (for ribbons)
ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
geom_point( alpha=0.5)+
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +
theme_bw() +
labs(title = "Temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed")   # Set the title of the fill legend (for ribbons)
flextable(table)
#| label: tbl-sex
#| tbl-cap: Non-linear effects of temperature and sex exposed on mean effect size of reproduction
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Both","Quadratic Treatment Temperature (centered) - Both", "Both (mean)", "Females only (mean)", "Treatment Temperature (centered) - Females only","Quadratic Treatment Temperature (centered) - Females only"),
Est. = round(meta_treat_sex_nointer$b, 4),
`L 95% CI` = round(meta_treat_sex_nointer$ci.lb, 4),
`U 95% CI` = round(meta_treat_sex_nointer$ci.ub, 4),
`p-value` = sapply(round(meta_treat_sex_nointer$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
summary(meta_treat_sex_nointer)
summary(meta_treat_ls_nointer)
p <- bubble_plot(meta_treat_sex, mod = "c_treattemp", group="study_code")
bubble_plot(meta_treat_sex, mod = "c_treattemp", group="study_code")
bubble_plot(meta_treat_sex, mod = "Sex.exposed", group="study_code")
meta_year <- readRDS(here("Output", "models", "reproduction", "meta_rep_year.rds"))
bubble_plot(meta_year)
bubble_plot(meta_year, mod="Year")
q <- bubble_plot(meta_year, mod = "Publication.year", group="study_code")
q+ coord_cartesian(ylim=c(-20,10))
sumary(meta_year)
summary(meta_year)
meta_year$pval
q <- bubble_plot(meta_year, mod = "Publication.year", group="study_code") +
labs(x = "Year of Publication")
q+ coord_cartesian(ylim=c(-20,10))
meta_year_nointer <- rma.mv(es, VCV_shared,  mod= ~ -1 Publication.year,
meta_year_nointer <- rma.mv(es, VCV_shared,  mod= ~ -1 + Publication.year,
random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
#| echo: false
#| warning: false
#| include: false
### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))
### select data for analysis
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- allrep
### Species names which need changing for phylogeny.
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea ashmeadi")]              <- "Gonatocerus ashmeadi"
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea triguttata")]   <- "Gonatocerus triguttatus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <-  "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Daphnia australis")]            <-  "Daphniopsis australis"
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_rep_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE)
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix
# use a randomization approach to deal with polytomies.
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
meta_year_nointer <- rma.mv(es, VCV_shared,  mod= ~ -1 + Publication.year,
random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
meta_year_nointer
