combo_data[i,]$Paper.code
View(combo_data)
combo_data$es[i] <- NA
View(combo_data)
combo_data$es[i] <- 2
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevtiy[is.identical_l]
View(combo_data)
combo_data$es.reproduction[i] <- NA
combo_data$v.reproduction[i] <- NA
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevtiy[is.identical_l]
View(combo_data)
table(is.identical_l)
combo_data <- unique_rows
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevtiy[is.identical_l]
}
View(combo_data)
table(is.identical_l)
table(is.identical_r)
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
i
alllong$es_longevtiy[is.identical_l]
View(combo_data)
combo_data <- unique_rows
View(combo_data)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- allrep
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- alllong[,-1]
alllong <- subset(alllong, select = -Effect.size.code)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- rdata[,-1]
rdata <- subset(rdata, select = -Effect.size.code)
allrows <- rbind(rdata[,1:35], alllong[,1:35])
unique_rows <- allrows[!duplicated(allrows), ]
combo_data <- unique_rows
wide_dat <- read.csv(here("Data", "Combined_effectsizes.csv"))
#--------------#
# 1. Packages  #
#--------------#
install.packages("pacman")
pacman::p_load(tidyverse, here, dplyr, tidyr)
install.packages("pacman")
install.packages("pacman")
wide_dat <- read.csv(here("Data", "Combined_effectsizes.csv"))
long_dat <- wide_dat %>%
pivot_longer(cols = c(es_reproduction,  es_longevtiy), names_to = "es")   %>%
data.frame()
View(wide_dat)
View(long_dat)
View(wide_dat)
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- allrep
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- alllong[,-1]
alllong <- subset(alllong, select = -Effect.size.code)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- rdata[,-1]
rdata <- subset(rdata, select = -Effect.size.code)
allrows <- rbind(rdata[,1:35], alllong[,1:35])
unique_rows <- allrows[!duplicated(allrows), ]
combo_data <- unique_rows
i=1
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
table(is.identical_l)
table(is.identical_r)
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
View(combo_data)
all(is.identical_r)
table(is.identical_r)
combo_data <- unique_rows
if(all(is.identical_r) == FALSE){
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
} else {
combo_data$es.reproduction[i] <- NA
combo_data$v.reproduction[i] <-  NA
}
View(combo_data)
if(all(is.identical_l) == FALSE){
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
} else {
combo_data$es.longevity[i] <- NA
combo_data$v.longevity[i] <-  NA
}
View(combo_data)
if(all(is.identical_l) == FALSE){
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
} else {
combo_data$es.longevity[i] <- NA
combo_data$v.longevity[i] <-  NA
}
all(is.identical_l)
table(is.identical_l)
table(is.identical_r)
all(is.identical_r)
all(is.identical_r) == FALSE
all(is.identical_l) == FALSE
all(is.identical_l)
table(is.identical_l)
all(is.identical_l) == FALSE
all(is.identical_r) == FALSE
all(is.identical_r)
table(is.identical_r)
is.identical_r
test <- as.vector(is.identical_l)
all(is.identical_l)
table(is.identical_l)
test <- as.vector(is.identical_r)
table(is.identical_r)
all(is.identical_r)
all(is.identical_r) == FALSE
class(is.identical_l)
class(is.identical_l[1])
all(is.identical_r == FALSE)
all(is.identical_l == FALSE)
combo_data <- unique_rows
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(all(is.identical_r == FALSE)){  ## are all index false i.e there are no rep values
combo_data$es.reproduction[i] <- NA
combo_data$v.reproduction[i] <-  NA
} else {
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
}
if(all(is.identical_l == FALSE)){ ## are all index false i.e there are no long values
combo_data$es.longevity[i] <- NA
combo_data$v.longevity[i] <-  NA
} else {
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
}
View(combo_data)
combo_data$es.reproduction[i] <- NA
combo_data$v.reproduction[i] <-  NA
View(combo_data)
rdata$es_reproduction[is.identical_l]
rdata$es_reproduction[is.identical_r]
combo_data <- unique_rows
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(all(is.identical_r == FALSE)){  ## are all index false i.e there are no rep values
combo_data$es.reproduction[i] <- NA
combo_data$v.reproduction[i] <-  NA
} else {
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
}
if(all(is.identical_l == FALSE)){ ## are all index false i.e there are no long values
combo_data$es.longevity[i] <- NA
combo_data$v.longevity[i] <-  NA
} else {
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
}
}
View(combo_data)
is.identical_l
table(#)
is.identical_l)
table(is.identical_l)
table(is.identical_r)
rdata$es_reproduction[is.identical_r]
test <- c(NA)
test[1] <- rdata$es_reproduction[is.identical_r]
any(is.identical_l == TRUE)
any(is.identical_r == TRUE)
combo_data <- unique_rows
combo_data$es.reproduction <- NA
combo_data$v.reproduction <- NA
combo_data$es.longevity <- NA
combo_data$v.longevity <- NA
for(i in 1:50)){
for(i in 1:50){
cat("Calculating row", i, "/2062", "\n")
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(any(is.identical_r == TRUE)){  ## if there is an true index then there are rep values
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
}
if(any(is.identical_l == TRUE)){ ## are all index false i.e there are no long values
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
}
}
View(combo_data)
combo_data <- unique_rows
combo_data$es.reproduction <- NA
combo_data$v.reproduction <- NA
combo_data$es.longevity <- NA
combo_data$v.longevity <- NA
for(i in 1:200){
cat("Calculating row", i, "/2062", "\n")
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(any(is.identical_r == TRUE)){  ## if there is an true index then there are rep values
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
}
if(any(is.identical_l == TRUE)){ ## if there is an true index then there are long values
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
}
}
View(combo_data)
is.identical_l
any(is.identical_l == TRUE)
any(is.identical_r == TRUE)
test <- unique(allrows[1:35])
View(unique_rows)
View(unique_rows)
unique_rows <- unique(allrows[1:35])
combo_data <- unique_rows
combo_data$es.reproduction <- NA
combo_data$v.reproduction <- NA
combo_data$es.longevity <- NA
combo_data$v.longevity <- NA
i=350
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(any(is.identical_r == TRUE)){  ## if there is an true index then there are rep values
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
}
if(any(is.identical_l == TRUE)){ ## if there is an true index then there are long values
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
}
View(combo_data)
combo_data[350]
combo_data[350,]
combo_data <- allrows
combo_data$es.reproduction <- NA
combo_data$v.reproduction <- NA
combo_data$es.longevity <- NA
combo_data$v.longevity <- NA
View(combo_data)
unique(duplicated(allrows))
duplicated(allrows)
i=100
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], allrows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], allrows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(any(is.identical_r == TRUE)){  ## if there is an true index then there are rep values
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
}
if(any(is.identical_l == TRUE)){ ## if there is an true index then there are long values
combo_data$es.longevity[i] <- alllong$es_longevity[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevity[is.identical_l]
}
View(combo_data)
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- allrep
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- alllong[,-1]
alllong <- subset(alllong, select = -Effect.size.code)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- rdata[,-1]
rdata <- subset(rdata, select = -Effect.size.code)
allrows <- rbind(rdata[,1:35], alllong[,1:35])
combo_data <- allrows
combo_data$es.reproduction <- NA
combo_data$v.reproduction <- NA
combo_data$es.longevity <- NA
combo_data$v.longevity <- NA
for (i in 1:nrow(combo_data)) {
cat("Calculating row", i, "/2084", "\n")
is_matching_r <- rep(FALSE, nrow(rdata))
is_matching_l <- rep(FALSE, nrow(alllong))
for (j in 1:nrow(rdata)) {
if (all(allrows[i, 1:35] == rdata[j, 1:35])) {
is_matching_r[j] <- TRUE
break  # Break out of the loop once a match is found
}
}
for (j in 1:nrow(alllong)) {
if (all(allrows[i, 1:35] == alllong[j, 1:35])) {
is_matching_l[j] <- TRUE
break  # Break out of the loop once a match is found
}
}
if (any(is_matching_r)) {
# Extract values from rdata and assign to combo_data
combo_data$es.reproduction[i] <- rdata$es_reproduction[is_matching_r]
combo_data$v.reproduction[i] <- rdata$v_reproduction[is_matching_r]
}
if (any(is_matching_l)) {
# Extract values from alllong and assign to combo_data
combo_data$es.longevity[i] <- alllong$es_longevity[is_matching_l]
combo_data$v.longevity[i] <- alllong$v_longevity[is_matching_l]
}
}
all(allrows[1, 1:35] == rdata[1, 1:35])
all(allrows[1, 1:35] == rdata[2, 1:35])
View(allrows)
View(rdata)
all(allrows[1, 1:35] == rdata[1, 1:35])
allrows[1, 1:35] == rdata[1, 1:35]
allrows[1, 1:35] == rdata[1, 1:35]
all(allrows[1, 1:35] == rdata[1, 1:35])
all(allrows[1, 1:35] == rdata[1, 1:35], na.rm=T)
combo_data <- allrows
combo_data$es.reproduction <- NA
combo_data$v.reproduction <- NA
combo_data$es.longevity <- NA
combo_data$v.longevity <- NA
for (i in 1:nrow(combo_data)) {
cat("Calculating row", i, "/2084", "\n")
is_matching_r <- rep(FALSE, nrow(rdata))
is_matching_l <- rep(FALSE, nrow(alllong))
for (j in 1:nrow(rdata)) {
if (all(allrows[i, 1:35] == rdata[j, 1:35], na.rm=T)) {
is_matching_r[j] <- TRUE
break  # Break out of the loop once a match is found
}
}
for (j in 1:nrow(alllong)) {
if (all(allrows[i, 1:35] == alllong[j, 1:35], na.rm=T)) {
is_matching_l[j] <- TRUE
break  # Break out of the loop once a match is found
}
}
if (any(is_matching_r)) {
# Extract values from rdata and assign to combo_data
combo_data$es.reproduction[i] <- rdata$es_reproduction[is_matching_r]
combo_data$v.reproduction[i] <- rdata$v_reproduction[is_matching_r]
}
if (any(is_matching_l)) {
# Extract values from alllong and assign to combo_data
combo_data$es.longevity[i] <- alllong$es_longevity[is_matching_l]
combo_data$v.longevity[i] <- alllong$v_longevity[is_matching_l]
}
}
View(allrows)
View(alllong)
View(alllong)
View(combo_data)
write.csv(combo_data, "Data/duplicate_combo_data.csv")
u_combo <- unique(combo_data)
View(u_combo)
write.csv(u_combo, "Data/unique_combo_data.csv")
df_cleaned <- u_combo[!is.na(u_combo$es.reproduction), ]
View(u_combo)
df_cleaned <- u_combo[!is.na(u_combo$es.longevity), ]
View(u_combo)
df_cleaned <- u_combo[!is.na(u_combo$es.reproduction), ]
df_cleaned <- df_cleaned[!is.na(df_cleaned$es.longevity), ]
View(df_cleaned)
nrow(df_cleaned)
write.csv(df_cleaned, "cleaned_unique_combo.csv")
write.csv(df_cleaned, "Data/cleaned_unique_combo.csv")
