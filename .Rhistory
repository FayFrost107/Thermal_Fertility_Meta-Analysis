ggplot(data = sex_rep_data, aes(x = c_treattemp, y = pred, col = Sex.exposed, linetype = Sex.exposed)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Sex.exposed), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Predicted temperature effect on reproduction",
x = "Temperature devaition from 25C",
y = "Effect size",
color = "Sex exposed",  # Set the title of the color legend
fill = "Sex exposed",
linetype = "Sex exposed")   # Set the title of the fill legend (for ribbons)
#| echo: false
#| warning: false
#| include: false
if(rerun){
minq <- quantile(ls_data$es, 0.05)
maxq <- quantile(ls_data$es, 0.95)
sdata <- subset(ls_data, es > minq & es < maxq)
saveRDS(sdata, here("Output", "Output data", "reproduction", "sensitivity_data_rep_ls.rds"))
## Treatment temperature as a quadratic effect (sesnsitivity analysis)
# re-cmpute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
# re-run quadratic model
meta_sa_ls_nointer <- rma.mv(es, VCV_shared_sa,  mod= ~ -1 + poly(c_treattemp, degree=2, raw=TRUE) * Life.stage.of.animal,
random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")
saveRDS(meta_sa_ls_nointer, here("Output", "models", "reproduction", "meta_sa_rep_ls.rds"))
} else {
meta_sa_ls <- readRDS(here("Output", "models", "reproduction", "meta_sa_rep_ls.rds"))
sa_rep_lsdata <- readRDS(here("Output", "Output data", "reproduction", "sensitivity_data_rep_ls.rds"))
}
#| label: tbl-sals
#| tbl-cap: Non-linear effects of temperature and life stageo animal on mean effect size of reproduction after removing the 10% most extreme effect sizes.
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Adult","Quadratic Treatment Temperature (centered) - Adult", "Adult (mean)", "Immature (mean)", "Treatment Temperature (centered) - Immature","Quadratic Treatment Temperature (centered) - Immature"),
Est. = round(meta_sa_ls$b, 4),
`L 95% CI` = round(meta_sa_ls$ci.lb, 4),
`U 95% CI` = round(meta_sa_ls$ci.ub, 4),
`p-value` = sapply(round(meta_sa_ls$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
#| label: fig-figlssa
#| fig-cap: Predicited models of sex exposed and temeprature effects on reproduction.
preds.rep.ls <- predict(meta_sa_ls, addx=TRUE)
ls_rep_data <- sa_rep_lsdata
ls_rep_data$pred <- preds.rep.ls$pred
ls_rep_data$pred.lb <- preds.rep.ls$pi.lb
ls_rep_data$pred.ub <- preds.rep.ls$pi.ub
ls_rep_data$c.lb <- preds.rep.ls$ci.lb
ls_rep_data$c.ub <- preds.rep.ls$ci.ub
library(ggplot2)
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = pred, col = Life.stage.of.animal, linetype = Life.stage.of.animal)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Life.stage.of.animal), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
coord_cartesian(ylim = c(-10,1))+
labs(title = "Predicted temperature effect on reproduction",
x = "Observed temperature devaition from 25C",
y = "Effect size",
color = "Life stage",  # Set the title of the color legend
fill = "Life stage",
linetype = "Life stage")   # Set the title of the fill legend (for ribbons)
#| echo: false
#| warning: false
#| include: false
if(rerun){
expose.data <- subset(rdata, Exposure.duration != "< 24 hours")
#minq <- quantile(expose.data$es, 0.05)
#maxq <- quantile(expose.data$es, 0.95)
#sdata <- subset(expose.data, es > minq & es < maxq)
sdata <- expose.data
saveRDS(sdata, here("Output", "Output data", "reproduction", "sensitivity_data_rep_exposure.rds"))
## Treatment temperature as a cubic effect (sesnsitivity analysis)
# re-cmpute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
# re-run cubic model
meta_sa_exposure <- rma.mv(es, VCV_shared_sa,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random=                                list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")
saveRDS(meta_sa_exposure, here("Output", "models", "reproduction", "meta_sa_rep_exposure.rds"))
} else {
meta_sa_exposure <- readRDS(here("Output", "models", "reproduction", "meta_sa_rep_exposure.rds"))
sa_exposure <- readRDS(here("Output", "Output data", "reproduction", "sensitivity_data_rep_exposure.rds"))
}
#| label: fig-short.exposureremoved
#| fig-cap: Bubble plot of effect size of longevity when controlling for temperature with < 24 hour exposure observations removed.
p <- bubble_plot(meta_sa_exposure, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10)) + labs(x = "Temperature deviation from 25C")
#| label: tbl-sensitivityexposure
#| tbl-cap: Non-linear effects of temperature on mean effect size of reproduction with < 24 hour exposure observations removed
table <- data.frame(Parameters = c("Reproduction (mean)", "Linear Treatment Temperature (centered) - Reproduction","Quadratic Treatment Temperature (centered) - Reproduction"),
Est. = round(meta_sa_exposure$b, 4),
`L 95% CI` = round(meta_sa_exposure$ci.lb, 4),
`U 95% CI` = round(meta_sa_exposure$ci.ub, 4),
`p-value` = sapply(round(meta_sa_exposure$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
if(rerun){
# treat temp^4 centered
meta_trait_treat4 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=4, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat4, here("Output", "models", "reproduction", "mv_rep_ctemp4.rds"))
# treat temp^5 centered
meta_trait_treat5 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=5, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat5, here("Output", "models", "reproduction", "mv_rep_ctemp5.rds"))
# treat temp^6 centered (fails to convergeafter degree 5)
meta_trait_treat6 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=6, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat6, here("Output", "models", "reproduction", "mv_rep_ctemp6.rds"))
} else {
meta_trait_treat4  <- readRDS(here("Output", "models",  "reproduction", "mv_rep_ctemp4.rds"))
meta_trait_treat5  <- readRDS(here("Output", "models",  "reproduction", "mv_rep_ctemp5.rds"))
}
preds.2 <- predict(meta_trait_treat2, addx=TRUE)
preds.3 <- predict(meta_trait_treat3, addx=TRUE)
preds.4 <- predict(meta_trait_treat4, addx=TRUE)
preds.5 <- predict(meta_trait_treat5, addx=TRUE)
ctemp_data <- rdata
ctemp_data$preds.2 <- preds.2$pred
ctemp_data$preds.3 <- preds.3$pred
ctemp_data$preds.4 <- preds.4$pred
ctemp_data$preds.5 <- preds.5$pred
library(ggplot2)
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(ctemp_data, aes(x = c_treattemp)) +
geom_point(aes(y = es, size = v), color="black", fill="white", alpha=1/5, size=2) +
geom_line(aes(y = preds.2, color = "2", linetype= "2"), size = 1.5) +
geom_line(aes(y = preds.3, color = "3", linetype= "3"), size = 1.5) +
geom_line(aes(y = preds.4, color = "4", linetype= "4"), size = 1.5) +
geom_line(aes(y = preds.5, color = "5", linetype= "5"), size = 1.5) +
labs(title = "Predicted effect size curves for reproduction using different polynomials",
x = "Temperature deviation from 25C",
y = "Effect size") +
theme_minimal() +
coord_cartesian(ylim = c(-10, 10)) +
scale_color_manual(values = c("2" = cbp2[2], "3" = cbp2[3], "4" = cbp2[4], "5" = cbp2[5]),
name = "Polynomial Degree") +
scale_linetype_manual(values = c("solid", "dashed", "dotted", "dotdash"), name = "Polynomial Degree")
table(ls_data$Sex.exposed)
library(tidyr)
library(dplyr)
# get effectsize data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
sub <- subset(effectdata, warm.cool != "Reference")
# How many papers in total
nlevels(as.factor(sub$Paper.code))
## percentage effect sizes of each class
table(sub$Class)/nrow(sub) * 100
insect <- subset(sub, Class == "Insecta")
arach <- subset(sub, Class == "Arachnida")
crus <- subset(sub, Class == "Crustacea")
rot <- subset(sub, Class == "Rotifera")
ann <- subset(sub, Class == "Annelida")
nlevels(as.factor(insect$Species.latin))
nlevels(as.factor(arach$Species.latin))
nlevels(as.factor(crus$Species.latin))
nlevels(as.factor(rot$Species.latin))
nlevels(as.factor(ann$Species.latin))
# How many papers does each species occur in
unique_combinations <- sub %>%
distinct(Paper.code, Species.latin)
# Count the number of unique studies for each species
species_counts <- unique_combinations %>%
group_by(Species.latin) %>%
summarize(UniqueStudies = n())
# number of species
length(unique(unique_combinations$Species.latin))
# Terrestiral versus aquatic
unique_habitat <- sub %>%
distinct(Species.latin, Habitat)
# Count the number of unique studies for each species
habitat_counts <- unique_habitat %>%
group_by(Habitat) %>%
summarize(UniqueStudies = n())
habitat_counts
unique_habitat2 <- sub %>%
distinct(Species.latin, Habitat2)
# Count the number of unique studies for each species
habitat2_counts <- unique_habitat2 %>%
group_by(Habitat2) %>%
summarize(UniqueStudies = n())
habitat2_counts
### Fertiliarsation mode
# internal/external
unique_fert <- sub %>%
distinct(Species.latin, Fertilisation.mode)
# Count the number of unique studies for each species
fert_counts <- unique_fert %>%
group_by(Fertilisation.mode) %>%
summarize(UniqueStudies = n())
fert_counts
### reproduction mode
# sex/asexual
unique_sex <- sub %>%
distinct(Species.latin, reprodctuive.mode)
# Count the number of unique studies for each species
sex_counts <- unique_sex %>%
group_by(reprodctuive.mode) %>%
summarize(UniqueStudies = n())
sex_counts
### lab per studies
# lab study
unique_lab <- sub %>%
distinct(Experiment.code, Lab.or.field)
# Count the number of lab studies for each study
lab_counts <- unique_lab %>%
group_by(Lab.or.field) %>%
summarize(UniqueStudies = n())
lab_counts
# exposure
unique_exp <- sub %>%
distinct(Experiment.code, Exposure.duration)
# Count the number of exposure times for each study
exp_counts <- unique_exp %>%
group_by(Exposure.duration) %>%
summarize(UniqueStudies = n())
exp_counts
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
# life stage
unique_ls <- sub %>%
distinct(Experiment.code, Life.stage.of.animal)
# Count the number of life stages  for each study
ls_counts <- unique_ls %>%
group_by(Life.stage.of.animal) %>%
summarize(UniqueStudies = n())
ls_counts
table(sub$Sex.exposed)
unique_sex.exp
unique_sex
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex.exposed)
unique_sex.exp
View(sub)
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex)
unique_sex.exp
nlevels(as.factor(sub$Paper.code))
nlevels(as.factor(sub$Experiment.code)
)
nlevels(as.factor(sub$Effect.size.code))
unique_sex.exp
duplicated(unique_sex.exp$Experiment.code)
which(duplicated(unique_sex.exp$Experiment.code) == TRUE)
unique_sex.exp[which(duplicated(unique_sex.exp$Experiment.code) == TRUE)]
unique_sex.exp$Experiment.code[which(duplicated(unique_sex.exp$Experiment.code) == TRUE)]
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
# sex exposed
unique_sex.exp
unique_sex.exp$Experiment.code[which(duplicated(unique_sex.exp$Experiment.code) == TRUE)]
# sex exposed
test <- sub %>%
distinct(Experiment.code, Shared.Longevity.)
test_counts <- test %>%
group_by(Shared.Longevity.) %>%
summarize(UniqueStudies = n())
View(test_counts)
445+32+49
# sex exposed
unique_sex.exp <- sub %>%
distinct(Effect.size.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
unique_sex.exp$Effect.size.code[which(duplicated(unique_sex.exp$Effect.size.code) == TRUE)]
duplicated(unique_sex.exp$Effect.size.code))
duplicated(unique_sex.exp$Effect.size.code)
unique_sex.exp$Effect.size.code
unique_sex.exp
sex.exp_counts
# life stage
unique_ls <- sub %>%
distinct(Effect.size.code, Life.stage.of.animal)
# Count the number of life stages  for each study
ls_counts <- unique_ls %>%
group_by(Life.stage.of.animal) %>%
summarize(UniqueStudies = n())
ls_counts
unique_ls
# life stage
unique_ls <- sub %>%
distinct(Experiment.code, Life.stage.of.animal)
# Count the number of life stages  for each study
ls_counts <- unique_ls %>%
group_by(Life.stage.of.animal) %>%
summarize(UniqueStudies = n())
ls_counts
196+6+20+2+278
196+302
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
# experiment codes that are wrong (have been used for multiple experiments)
unique_sex.exp$Experiment.code[which(duplicated(unique_sex.exp$Experiment.code) == TRUE)]
unique_sex.exp
sex.exp_counts
unique_sex.exp <- sub %>%
distinct(Effect.size.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
sumamry(meta_treat_sex)
summary(meta_treat_sex)
summary(meta_treat_sex_nointer)
meta_treat_sex_nointer
meta_treat_sex
table(new_data$Sex.exposed)
table(new_data$Shared.Longevity.)
# sex exposed
unique_sex.exp <- new_data %>%
distinct(Experiment.code, Shared.#)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
# sex exposed
unique_sex.exp <- new_data %>%
distinct(Experiment.code, Shared.Longevity.)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Shared.Longevity.) %>%
summarize(UniqueStudies = n())
sex.exp_counts
359+1+32+43
273+319
592_503
592-503
504+89
25.11.03
25-11.03
25+14.58
-263/12
-263/112
25-2.35
papers <- read_csv("Data/Raw Data/Survival project all data Included Papers.csv")
inc_papers <- subset(papers, Decision == "Include")
paper.list <- as.factor(inc_papers$`Paper code`)
Survival_data<- read_csv("Data/Raw Data/Survival project all data RAW.csv")
used.papers <- as.factor(Survival_data$`Paper code`)
sort(paper.list[which(paper.list %in% used.papers == FALSE)])
## make subset of the papers that aren't included but say they are
notin_papers <- inc_papers[inc_papers$`Paper code` %in% paper.list[which(paper.list %in% used.papers == FALSE)],]
View(Survival_data)
View(papers)
View(papers)
442-391
## rewrite datafile
write.csv(papers, "Data/Raw Data/Survival project all data Included Papers.csv")
# get effectsize data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
sub <- subset(effectdata, warm.cool != "Reference")
# How many papers in total
nlevels(as.factor(sub$Paper.code))
## percentage effect sizes of each class
table(sub$Class)/nrow(sub) * 100
insect <- subset(sub, Class == "Insecta")
arach <- subset(sub, Class == "Arachnida")
crus <- subset(sub, Class == "Crustacea")
rot <- subset(sub, Class == "Rotifera")
ann <- subset(sub, Class == "Annelida")
nlevels(as.factor(insect$Species.latin))
nlevels(as.factor(arach$Species.latin))
nlevels(as.factor(crus$Species.latin))
nlevels(as.factor(rot$Species.latin))
nlevels(as.factor(ann$Species.latin))
# How many papers does each species occur in
unique_combinations <- sub %>%
distinct(Paper.code, Species.latin)
# Count the number of unique studies for each species
species_counts <- unique_combinations %>%
group_by(Species.latin) %>%
summarize(UniqueStudies = n())
# number of species
length(unique(unique_combinations$Species.latin))
# Terrestiral versus aquatic
unique_habitat <- sub %>%
distinct(Species.latin, Habitat)
# Count the number of unique studies for each species
habitat_counts <- unique_habitat %>%
group_by(Habitat) %>%
summarize(UniqueStudies = n())
habitat_counts
unique_habitat2 <- sub %>%
distinct(Species.latin, Habitat2)
# Count the number of unique studies for each species
habitat2_counts <- unique_habitat2 %>%
group_by(Habitat2) %>%
summarize(UniqueStudies = n())
habitat2_counts
### Fertiliarsation mode
# internal/external
unique_fert <- sub %>%
distinct(Species.latin, Fertilisation.mode)
# Count the number of unique studies for each species
fert_counts <- unique_fert %>%
group_by(Fertilisation.mode) %>%
summarize(UniqueStudies = n())
fert_counts
### reproduction mode
# sex/asexual
unique_sex <- sub %>%
distinct(Species.latin, reprodctuive.mode)
# Count the number of unique studies for each species
sex_counts <- unique_sex %>%
group_by(reprodctuive.mode) %>%
summarize(UniqueStudies = n())
sex_counts
### lab per studies
# lab study
unique_lab <- sub %>%
distinct(Experiment.code, Lab.or.field)
# Count the number of lab studies for each study
lab_counts <- unique_lab %>%
group_by(Lab.or.field) %>%
summarize(UniqueStudies = n())
lab_counts
# exposure
unique_exp <- sub %>%
distinct(Experiment.code, Exposure.duration)
# Count the number of exposure times for each study
exp_counts <- unique_exp %>%
group_by(Exposure.duration) %>%
summarize(UniqueStudies = n())
exp_counts
# sex exposed
unique_sex.exp <- sub %>%
distinct(Experiment.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
# sex exposed
unique_sex.exp <- sub %>%
distinct(Effect.size.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
View(effectdata)
table(effectdata$Shared.Longevity.)
489+289+7+139+2
table(effectdata$Sex)
sex.exp_counts
sex.exp_counts/926
489/926
289/926
(139+289)/926
489+289+7+139+2
489+289+7+139+2489/926
489/926
repdata <- subset(sub, Trait.category == "Reproduction")
unique_sex.exp <- repdata %>%
distinct(Effect.size.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
283+99+3+69+1
283/455
99/455
(69+99)/455
londata <- subset(sub, Trait.category == "Longevity")
# sex exposed
unique_sex.exp <- londata %>%
distinct(Effect.size.code, Sex.exposed)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex.exposed) %>%
summarize(UniqueStudies = n())
sex.exp_counts
184/(184+181+1+68+1)
# sex exposed
unique_sex.exp <- londata %>%
distinct(Effect.size.code, Sex)
# Count the number of sex exposed for each study
sex.exp_counts <- unique_sex.exp %>%
group_by(Sex) %>%
summarize(UniqueStudies = n())
sex.exp_counts
381+54
381/435
