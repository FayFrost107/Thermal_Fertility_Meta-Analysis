summary(meta_treat_habitat)
table(rdata$Class)
table(rdata$Habitat)
table(rdata$Sex.exposed)
table(rdata$Fertilisation.mode)
table(rdata$Agricultural.importance)
table(rdata$Lab.or.field)
table(rdata$Exposure.duration)
table(rdata$Life.stage.of.animal)
render("Rmarkdown/exploring_fixed_effects.rmd")
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
getwd()
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
list.files()
effectdata <- read.csv("./Data/Survival project all pairwise.es.csv")
effectdata <- read.csv("../Data/Survival project all pairwise.es.csv")
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
### select data for analysis
rdata <- alllong
rdata <- subset(rdata, Paper.code != "HUM251")
rdata <- rdata %>% mutate(c_treattemp = treattemp - 25)
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
render("Rmarkdown/exploring_fixed_effects.rmd")
render("Rmarkdown/exploring_fixed_effects.rmd")
render("Rmarkdown/exploring_fixed_effects.rmd")
load("~/GitHub/Thermal_Fertility_Meta-Analysis/Output/longevity_meta_analysis_output.RData")
table(rdata$Habitat)
table(rdata$Sex.exposed)
new_data <- rdata
new_data$Sex.exposed[which(new_data$Sex.exposed == "Male")] <- "Both"
new_data$Sex.exposed[which(new_data$Sex.exposed == "Parthenogenetic")] <- "Female"
table(rdata$Sex.exposed)
table(new_data$Sex.exposed)
new_data <- subset(newdata, Sex.exposed != "Unsure")
new_data <- subset(new_data, Sex.exposed != "Unsure")
table(new_data$Sex.exposed)
VCV_shared_sex <- impute_covariance_matrix(vi=new_data$v, cluster = new_data$shared_control, r=0.5)
library(metafor)
library(ggplot2)
library(ape)
library(rotl)
library(multcomp)
library(dplyr)
library(ggtree)
# To install the orchaRd package:
#install.packages("pacman")
#pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
#devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
library(clubSandwich)
library(rmarkdown)
VCV_shared_sex <- impute_covariance_matrix(vi=new_data$v, cluster = new_data$shared_control, r=0.5)
meta_treat_habitat <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp * Sex.exposed, degree=3, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
meta_treat_habitat <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=3, raw=TRUE)*Sex.exposed,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
meta_treat_habitat <- meta_treat_sex
meta_treat_sex <- meta_treat_sex
meta_treat_sex <- meta_treat_habitat
rm(meta_treat_habitat)
summary(meta_treat_sex)
meta_treat_sex_u <- rma.mv(es, VCV_shared_sex,  mod= c_treattemp*Sex.exposed,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
meta_treat_sex_u <- rma.mv(es, VCV_shared_sex,  mod=~c_treattemp*Sex.exposed,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
summary(meta-treat_sex_u)
summary(meta_treat_sex_u)
ls_data <- rdata
table(ls_data$Life.stage.of.animal)
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Juvenile")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Larvae")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Mix")] <- "Immature"
table(ls_data$Life.stage.of.animal)
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Pupae")] <- "Immature"
table(ls_data$Life.stage.of.animal)
ls_data <- subset(ls_data, Life.stage.of.animal != "Egg")
ls_data <- subset(ls_data, Life.stage.of.animal != "Embryo")
table(ls_data$Life.stage.of.animal)
VCV_shared_life <- impute_covariance_matrix(vi=ls_data$v, cluster = ls_data$shared_control, r=0.5)
VCV_shared_life <- impute_covariance_matrix(vi=ls_data$v, cluster = ls_data$shared_control, r=0.5)
meta_treat_ls <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=3, raw=TRUE)*Life.stage.of.animal,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
meta_treat_ls <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=3, raw=TRUE)*Life.stage.of.animal,
random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML")
summary(meta_treat_ls)
save.image("~/GitHub/Thermal_Fertility_Meta-Analysis/Output/longevity_meta_analysis_output.RData")
load("~/GitHub/Thermal_Fertility_Meta-Analysis/Output/reproduction_meta_analysis_output.RData")
new_data <- rdata
new_data$Sex.exposed[which(new_data$Sex.exposed == "Male")] <- "Both"
new_data$Sex.exposed[which(new_data$Sex.exposed == "Parthenogenetic")] <- "Female"
new_data <- subset(new_data, Sex.exposed != "Unsure")
VCV_shared_sex <- impute_covariance_matrix(vi=new_data$v, cluster = new_data$shared_control, r=0.5)
meta_treat_sex <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Sex.exposed,
random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
summary(meta_treat_sex)
ls_data <- rdata
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Juvenile")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Larvae")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Mix")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Pupae")] <- "Immature"
ls_data <- subset(ls_data, Life.stage.of.animal != "Egg")
ls_data <- subset(ls_data, Life.stage.of.animal != "Embryo")
VCV_shared_life <- impute_covariance_matrix(vi=ls_data$v, cluster = ls_data$shared_control, r=0.5)
meta_treat_ls <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=3, raw=TRUE)*Life.stage.of.animal,
random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML")
summary(meta_treat_ls)
table(rdata$Agricultural.importance)
### pest
pest_data <- subset(rdata, Agricultural.importance = "Pest")
### pest
pest_data <- subset(rdata, Agricultural.importance == "Pest")
VCV_shared_pest <- impute_covariance_matrix(vi=pest_data$v, cluster = pest_data$shared_control, r=0.5)
meta_pest <- rma.mv(es, VCV_shared_pest,  mod= ~poly(c_treattemp, degree=3, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= pest_data, method= "REML")
summary(meta-pest)
summary(meta_pest)
meta_pest <- rma.mv(es, VCV_shared_pest,  mod= ~poly(c_treattemp, degree=2, raw=TRUE),
random= list(~ 1|study_code,  ~1|obs), data= pest_data, method= "REML")
summary(meta_pest)
save.image("~/GitHub/Thermal_Fertility_Meta-Analysis/Output/reproduction_meta_analysis_output.RData")
mv_mlma_3 <- readRDS(here("output", "models", "mv_mlma_3.rds"))
#install.packages("pacman")
#devtools::install_github("daniel1noble/metaAidR", force=TRUE)
pacman::p_load(tidyverse, here, metafor, ape, phytools, corrplot, metaAidR)
# source functions
source(here("R", "func.R"))
mv_mlma_3 <- readRDS(here("output", "models", "mv_mlma_3.rds"))
summary(mv_mlma_3)
mv_mlma_4 <- readRDS(here("output", "models", "mv_mlma_4.rds"))
summary(mv_mlma_4)
load("~/GitHub/Thermal_Fertility_Meta-Analysis/Output/longevity_meta_analysis_output.RData")
# First, create some new data for moderators, this will create a sequence for c_treattemp based on the min and max values.
# if we had other moderators then we would need to be sure that they are named exactly as in the model and added here. #
# Of course, we also do not need to have a full sequence, we could just pick certain values (e.g., 25, 30 or 40) and make predcitions of the mean at thos temps.
sampledata <- as.matrix(data.frame(c_treattemp = seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length.out = 100)))
summary(meta_trait_treat3)
# Then make predictions using the model of interest.
preds <- data.frame(predict(meta_trait_treat3, newmods = sampledata, digits = 2, addx=TRUE))
head9sapledata
head(sampledata)
min(rdata$c_treattemp)
max(rdata$c_treattemp)
# Then make predictions using the model of interest.
preds <- data.frame(predict(meta_trait_treat3, newmods = sampledata, digits = 2, addx=TRUE))
# Then make predictions using the model of interest.
preds <- data.frame(predict(meta_trait_treattemp, newmods = sampledata, digits = 2, addx=TRUE))
summary(meta_trait_treattemp)
summary(meta_trait_treat3)
# Then make predictions using the model of interest.
preds <- data.frame(predict(meta_trait_treat3, newmods = sampledata, digits = 2, addx=TRUE))
?precit
?predict
# Step 1: Create a sequence of values for c_treattemp
new_c_treattemp <- seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length = 1000)
# Step 2: Use the predict function to get predicted effect sizes
predicted_values <- predict(meta_trait_treat3, newmods = data.frame(c_treattemp = new_c_treattemp))
# Step 1: Create a sequence of values for c_treattemp
new_c_treattemp <- as.atrix9data.frame(seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length = 1000)))
# Step 1: Create a sequence of values for c_treattemp
new_c_treattemp <- as.matrix(data.frame(seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length = 1000)))
new_c_treattemp
head(new_c_treattemp)
# Step 1: Create a sequence of values for c_treattemp
new_c_treattemp <- as.matrix(data.frame(seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length.out = 1000)))
head(new_c_treattemp)
# Step 2: Use the predict function to get predicted effect sizes
predicted_values <- predict(meta_trait_treat3, newmods = data.frame(c_treattemp = new_c_treattemp))
# Step 2: Use the predict function to get predicted effect sizes
predicted_values <- predict(meta_trait_treat3, newmods = c_treattemp = new_c_treattemp)
# Then make predictions using the model of interest.
newdata <- as.matrix(data.frame(c_treattemp = seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length.out = 100)))
# Then make predictions using the model of interest.
sampledata <- as.matrix(data.frame(c_treattemp = seq(min(rdata$c_treattemp), max(rdata$c_treattemp), length.out = 100)))
preds <- data.frame(predict(meta_trait_treat3, newmods = sampledata, digits = 2, addx=TRUE))
preds
# You can plot the results if you want to visualize the relationship between c_treattemp and effect sizes.
plot(sampledata, preds$pred, type = "l", xlab = "c_treattemp", ylab = "Predicted Effect Size")
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
table(effectdata$Paper.code)
length(unique(effectdata$Paper.code))
subset(effectdata, warm.cool != "Reference")
sub <- subset(effectdata, warm.cool != "Reference")
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
longdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
longdata_warm <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
1389+1879+85
1389+1379+85
length(unique(effectdata$Class))
table(unique(effectdata$Class))
table(effectdata$Class)
32+520+17+120+12+3003+74+8
table(sub$Class)
28+397+11+73+8+2280+52+4
sub <- subset(effectdata, warm.cool != "Reproduction")
sub <- subset(effectdata, warm.cool != "Reference")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
sub$Species.latin[which(sub$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
sub$Species.latin[which(sub$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
sub$Species.latin[which(sub$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
sub$Species.latin[which(sub$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
sub$Species.latin[which(sub$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
sub$Species.latin[which(sub$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
sub$Species.latin[which(sub$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
sub$Species.latin[which(sub$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
sub$Species.latin[which(sub$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
sub$Species.latin[which(sub$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
sub$Species.latin[which(sub$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
sub$Species.latin[which(sub$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
sub$Species.latin[which(sub$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
sub$Species.latin[which(sub$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
sub$Species.latin[which(sub$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
sub$Species.latin[which(sub$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
sub$Species.latin[which(sub$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
sub$Species.latin[which(sub$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
sub$Species.latin[which(sub$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
sub$Class <- classes$class[match(sub$Species.latin, classes$species_latin)]
table(sub$Class)
table(sub$Class)/2853
table(sub$Class)/2853*100
View(effectdata)
length(unique(effectdata$Species.latin))
insect <- subset(sub, Class = "Insect")
insect <- subset(sub, Class = "Insecta")
sub$Class
insect <- subset(sub, Class == "Insecta")
length(uniqe(insect$Species.latin))
length(unique(insect$Species.latin))
239/309
arach <- subset(sub, Class == "Arachnidaa")
arach <- subset(sub, Class == "Arachnida")
length(unique(arach$Species.latin))
crus <- subset(sub, Class == "Crustacean")
crus <- subset(sub, Class == "Crustacea")
length(unique(crus$Species.latin))
rot <- subset(sub, Class == "Rotifera")
length(unique(rot$Species.latin))
ann <- subset(sub, Class == "Annelida")
length(unique(ann$Species.latin))
sort(table(sub$Species.latin))
View(sub)
sub %>% distinct(Paper.code, Species.latin)
library(dplyr)
sub %>% distinct(Paper.code, Species.latin)
# How many papers does each species occur in
unique_combinations <- sub %>%
distinct(Paper.code, species.latin)
# How many papers does each species occur in
unique_combinations <- sub %>%
distinct(Paper.code, Species.latin)
# Count the number of unique studies for each species
species_counts <- unique_combinations %>%
group_by(Species.latin) %>%
summarize(UniqueStudies = n())
View(species_counts)
table(sub$Habitat)
unique_habitat <- sub %>%
distinct(Paper.code, Habitat)
# Count the number of unique studies for each species
habitat_counts <- unique_habitat %>%
group_by(Habitat) %>%
summarize(UniqueStudies = n())
View(unique_habitat)
unique_habitat <- sub %>%
distinct(Species.latin, Habitat)
# Count the number of unique studies for each species
habitat_counts <- unique_habitat %>%
group_by(Habitat) %>%
summarize(UniqueStudies = n())
table(habitat_counts)
281+30
unique(habitat_counts)
239+47+17+6
View(unique_habitat)
unique(unique_habitat$Species.latin)
duplicated(unique_habitat$Species.latin)
which(duplicated(unique_habitat$Species.latin))
unique_habitat$Species.latin[which(duplicated(unique_habitat$Species.latin)),]
unique_habitat$Species.latin[which(duplicated(unique_habitat$Species.latin))]
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
sub <- subset(effectdata, warm.cool != "Reference")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
sub$Species.latin[which(sub$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
sub$Species.latin[which(sub$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
sub$Species.latin[which(sub$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
sub$Species.latin[which(sub$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
sub$Species.latin[which(sub$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
sub$Species.latin[which(sub$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
sub$Species.latin[which(sub$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
sub$Species.latin[which(sub$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
sub$Species.latin[which(sub$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
sub$Species.latin[which(sub$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
sub$Species.latin[which(sub$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
sub$Species.latin[which(sub$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
sub$Species.latin[which(sub$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
sub$Species.latin[which(sub$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
sub$Species.latin[which(sub$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
sub$Species.latin[which(sub$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
sub$Species.latin[which(sub$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
sub$Species.latin[which(sub$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
sub$Species.latin[which(sub$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
sub$Class <- classes$class[match(sub$Species.latin, classes$species_latin)]
## number of each class
table(sub$Class)
insect <- subset(sub, Class == "Insecta")
arach <- subset(sub, Class == "Arachnida")
crus <- subset(sub, Class == "Crustacea")
rot <- subset(sub, Class == "Rotifera")
ann <- subset(sub, Class == "Annelida")
# How many papers does each species occur in
unique_combinations <- sub %>%
distinct(Paper.code, Species.latin)
# Count the number of unique studies for each species
species_counts <- unique_combinations %>%
group_by(Species.latin) %>%
summarize(UniqueStudies = n())
# Terrestiral versus aquatic
unique_habitat <- sub %>%
distinct(Species.latin, Habitat)
# Count the number of unique studies for each species
habitat_counts <- unique_habitat %>%
group_by(Habitat) %>%
summarize(UniqueStudies = n())
table(unique_habitat$Habitat)
View(sub)
# Terrestiral versus aquatic
unique_fert <- sub %>%
distinct(Species.latin, Fertilisation.mode)
# Count the number of unique studies for each species
fert_counts <- unique_fert %>%
group_by(Fertilisation.mode) %>%
summarize(UniqueStudies = n())
View(fert_counts)
table(unique_fert)
table(fert_counts)
unique_fert
fert_counts
duplicated(unique_fert$Species.latin)
unique_fert$Species.latin[duplicated(unique_fert$Species.latin)]
View(unique_fert)
View(sub)
# lab study
unique_lab <- sub %>%
distinct(Species.latin, Lab.or.field)
# Count the number of unique studies for each species
lab_counts <- unique_lab %>%
group_by(Lab.or.field) %>%
summarize(UniqueStudies = n())
table(unique_lab)
table(lab_counts)
table(unique_lab$Lab.or.field)
table(unique_fert$Fertilisation.mode)
duplicated(unique_lab$Species.latin)
unique_lab$Species.latin[duplicated(unique_lab$Species.latin)]
# lab study
unique_lab <- sub %>%
distinct(Paper.code, Lab.or.field)
# Count the number of lab studies for each study
lab_counts <- unique_lab %>%
group_by(Lab.or.field) %>%
summarize(UniqueStudies = n())
table(unique_lab$Lab.or.field)
# lab study
unique_lab <- sub %>%
distinct(Experiment.code, Lab.or.field)
# Count the number of lab studies for each study
lab_counts <- unique_lab %>%
group_by(Lab.or.field) %>%
summarize(UniqueStudies = n())
table(unique_lab$Lab.or.field)
length(sub$Experiment.code)
length(unique(sub$Experiment.code))
# exposure
unique_exp <- sub %>%
distinct(Experiment.code, Exposure.duration)
# Count the number of exposure times for each study
exp_counts <- unique_exp %>%
group_by(Exposure.duration) %>%
summarize(UniqueStudies = n())
table(exp_counts)
table(unique_exp$Exposure.duration)
487+19
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
### select data for analysis
rdata <- alllong
rdata <- subset(rdata, Paper.code != "HUM251")
rdata <- rdata %>% mutate(c_treattemp = treattemp - 25)
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
table(rdata$Class)
table(rdata$Fertilisation.mode)
View(rdata)
table(rdata$Agricultural.importance)
rdata$Class[which(rdata$Species.latin == "Daphiopsis australis")]
rdata$Class[which(rdata$Species.latin == "Daphniopsis australis")]
library(readr)
Survival_project_all_data_xlsx_Other_effect_sizes <- read_csv("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Project Data/Other Sheets/Survival project all data.xlsx - Other effect sizes.csv")
View(Survival_project_all_data_xlsx_Other_effect_sizes)
other <- Survival_project_all_data_xlsx_Other_effect_sizes
head(other)
length(unique(other$`Paper code`))
View(Survival_project_all_data_xlsx_Other_effect_sizes)
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
sub <- subset(effectdata, warm.cool != "Reference")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
sub$Species.latin[which(sub$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
sub$Species.latin[which(sub$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
sub$Species.latin[which(sub$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
sub$Species.latin[which(sub$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
sub$Species.latin[which(sub$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
sub$Species.latin[which(sub$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
sub$Species.latin[which(sub$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
sub$Species.latin[which(sub$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
sub$Species.latin[which(sub$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
sub$Species.latin[which(sub$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
sub$Species.latin[which(sub$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
sub$Species.latin[which(sub$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
sub$Species.latin[which(sub$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
sub$Species.latin[which(sub$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
sub$Species.latin[which(sub$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
sub$Species.latin[which(sub$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
sub$Species.latin[which(sub$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
sub$Species.latin[which(sub$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
sub$Species.latin[which(sub$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
sub$Class <- classes$class[match(sub$Species.latin, classes$species_latin)]
View(effectdata)
## number of each class
table(sub$Class)
# get effectsize data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
sub <- subset(effectdata, warm.cool != "Reference")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
sub$Species.latin[which(sub$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
sub$Species.latin[which(sub$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
sub$Species.latin[which(sub$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
sub$Species.latin[which(sub$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
sub$Species.latin[which(sub$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
sub$Species.latin[which(sub$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
sub$Species.latin[which(sub$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
sub$Species.latin[which(sub$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
sub$Species.latin[which(sub$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
sub$Species.latin[which(sub$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
sub$Species.latin[which(sub$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
sub$Species.latin[which(sub$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
sub$Species.latin[which(sub$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
sub$Species.latin[which(sub$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
sub$Species.latin[which(sub$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
sub$Species.latin[which(sub$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
sub$Species.latin[which(sub$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
sub$Species.latin[which(sub$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
sub$Species.latin[which(sub$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
sub$Class <- classes$class[match(sub$Species.latin, classes$species_latin)]
## number of each class
table(sub$Class)
# How many papers does each species occur in
unique_combinations <- sub %>%
distinct(Paper.code, Species.latin)
# Count the number of unique studies for each species
species_counts <- unique_combinations %>%
group_by(Species.latin) %>%
summarize(UniqueStudies = n())
table(unique_combinations)
table(species_counts)
unique_combinations
table(sub$Class)
table(unique_combinations)
table(species_counts)
View(unique_combinations)
length(unique_combinations$Species.latin)
length(unique(unique_combinations$Species.latin))
table(sub$Class)
