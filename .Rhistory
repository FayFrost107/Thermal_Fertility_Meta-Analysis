Survival
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
setwd("~/GitHub/Thermal_Fertility_Meta-Analysis")
long_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
long_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
setwd("~/GitHub/Thermal_Fertility_Meta-Analysis")
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
long_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
long_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
all_data <- rbind(repdata_warm, repdata_cool, long_warm, long_cool)
### select data for analysis
rdata <- all_data
rdata <- subset(rdata, Paper.code != "HUM251")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
test <- cbind(rdata$Paper.code, rdata$Experiment.code, rdata$Effect.size.code, rdata$diff)
head(test)
test <- as.data.frame(cbind(rdata$Paper.code, rdata$Experiment.code, rdata$Effect.size.code, rdata$diff))
View(test)
unique(test)
u.test <- unique(test)
setdiff(test, u.test)
?setdiff
setdiff(test$V1, u.test$V1)
duplicate(test)
rdata[duplicated(rdata) | duplicated(rdata, fromLast = TRUE), ]
test[duplicated(test) | duplicated(test, fromLast = TRUE), ]
View(all_data)
test <- as.data.frame(cbind(rdata$Paper.code, rdata$Experiment.code, rdata$Effect.size.code, rdata$Trait.category, rdata$diff))
test[duplicated(test) | duplicated(test, fromLast = TRUE), ]
escalc(measure = "SMD", m2i=47.7, sd2i=50.28, n2i=30, m1i=24.3, sd1i=49.02, n1i=30)[1]
escalc(measure = "SMD", m2i=47.7, sd2i=50.28, n2i=30, m1i=24.3, sd1i=49.02, n1i=30)
library(metafor)
escalc(measure = "SMD", m2i=47.7, sd2i=50.28, n2i=30, m1i=24.3, sd1i=49.02, n1i=30)
escalc(measure = "SMD", m2i=16.2, sd2i=34.12, n2i=30, m1i=107.1, sd1i=82.43, n1i=30)
escalc(measure = "SMD", m2i=316.6, sd2i=146.08, n2i=30, m1i=18.5, sd1i=29341, n1i=30)
escalc(measure = "SMD", m2i=316.6, sd2i=146.08, n2i=30, m1i=18.5, sd1i=29.41, n1i=30)
escalc(measure = "SMD", m2i=13.6, sd2i=7.28, n2i=30, m1i=7.7, sd1i=6.79, n1i=30)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
long_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
long_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
all_data <- rbind(repdata_warm, repdata_cool, long_warm, long_cool)
### select data for analysis
rdata <- all_data
rdata <- subset(rdata, Paper.code != "HUM251")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
test <- as.data.frame(cbind(rdata$Paper.code, rdata$Experiment.code, rdata$Effect.size.code, rdata$Trait.category, rdata$diff))
test[duplicated(test) | duplicated(test, fromLast = TRUE), ]
escalc(measure = "SMD", m2i=25.17, sd2i=5.11, n2i=60, m1i=14.33, sd1i=2.79, n1i=60)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
long_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
long_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
all_data <- rbind(repdata_warm, repdata_cool, long_warm, long_cool)
### select data for analysis
rdata <- all_data
rdata <- subset(rdata, Paper.code != "HUM251")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
test <- as.data.frame(cbind(rdata$Paper.code, rdata$Experiment.code, rdata$Effect.size.code, rdata$Trait.category, rdata$diff))
test[duplicated(test) | duplicated(test, fromLast = TRUE), ]
library(tidyr)
df <- all_data
df_wide <- df %>%
pivot_wider(names_from = study_type, values_from = value_column_name)
df_wide <- df %>%
pivot_wider(names_from = Effect.size.code, values_from = value_column_name)
df_wide <- df %>%
pivot_wider(names_from = Trait.category, values_from = Effect.size.code)
df_wide <- df %>%
pivot_wider(names_from = Trait.category, values_from = Paper.code)
df_wide <- df %>%
pivot_wider(names_from = Trait.category, values_from = diff)
View(all_data)
colnames(df)
df_wide <- df %>%
pivot_wider(names_from = Trait.category)
# First, filter and rename the columns for longevity and reproduction
df_longevity <- df[df$Trait.category == "longevity", ]
# First, filter and rename the columns for longevity and reproduction
df_longevity <- df[df$Trait.category == "Longevity", ]
df_longevity <- df_longevity[, -which(names(df_longevity) == "Trait.category")]
names(df_longevity)[names(df_longevity) == "Value"] <- "longevity"
names(df_longevity)[names(df_longevity) == "Value"] <- "Longevity"
df_reproduction <- df[df$Trait.category == "Reproduction", ]
names(df_reproduction)[names(df_reproduction) == "Value"] <- "Reproduction"
# First, filter and rename the columns for longevity and reproduction
df_longevity <- df[df$Trait.category == "Longevity", ]
df_longevity <- df_longevity[, -which(names(df_longevity) == "Trait.category")]
names(df_longevity)[names(df_longevity) == "Value"] <- "Longevity"
df_reproduction <- df[df$Trait.category == "Reproduction", ]
df_reproduction <- df_reproduction[, -which(names(df_reproduction) == "Trait.category")]
names(df_reproduction)[names(df_reproduction) == "Value"] <- "Reproduction"
# Use pivot_wider to reshape the data into wide format
wide_df <- pivot_wider(df_longevity, id_cols = setdiff(names(df_longevity), c("Longevity", "Reproduction")),
names_from = "Trait", values_from = "Longevity")
# Use pivot_wider to reshape the data into wide format
wide_df <- pivot_wider(df_longevity, id_cols = setdiff(names(df_longevity), c("Longevity", "Reproduction")),
names_from = "Trait.category", values_from = "Longevity")
View(df_longevity)
names(df)
?pivot_wider
pivot_wider(df, names_from = Trait.category, values_from = c("es", "v"))
wide_df <- pivot_wider(df, names_from = Trait.category, values_from = c("es", "v"))
View(wide_df)
View(all_data)
df <- alldata
wide_df <- pivot_wider(df, names_from = Trait.category, values_from = c("es", "v"))
View(df_wide)
df <- all_data
wide_df <- pivot_wider(df, names_from = Trait.category, values_from = c("es", "v"))
View(all_data)
wide_df <- pivot_wider(df, names_from = Experiment_code, values_from = c("es", "v"))
wide_df <- pivot_wider(df, names_from = Experiment.code, values_from = c("es", "v"))
View(df_wide)
View(test)
