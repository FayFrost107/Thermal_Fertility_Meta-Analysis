df <- merge(rdata, alllong, all=TRUE)
df <- subset(df, select = -(Trait.category))
df <- subset(df, select = -(Trait))
df <- df[,-1]
df <- subset(df, select = -Effect.size.code)
study_cols <- df[,1:35]
unique_rows <- study_cols[!duplicated(study_cols), ]
View(unique_rows)
# Find the row in df2 that matches df1
matching_row <- unique_rows[apply(unique_rows[, 1:35] == df, 1, all), ]
# Initialize an empty dataframe for df3
df3 <- data.frame()
unique_rows[1,]
which(df[,1:35] == unique_rows[1,])
which(df[1,1:35] == unique_rows[1,])
which(apply(df == unique_rows, 1, all))
which(apply(df[,1:35] == unique_rows, 1, all))
which(apply(df[1,1:35] == unique_rows[1,], 1, all))
which(apply(df[1:35] == unique_rows[1,], 1, all))
which(apply(unique_rows == df[,1:35], 1, all))
# Create a function to check for identical values in specified columns
compare_rows <- function(row1, row2, cols) {
return(all(row1[cols] == row2[cols]))
}
# Specify the columns to compare (1 to 35)
compare_cols <- 1:35
# Initialize an empty list to store matching row indices in df1 for each row in unique_rows
matching_indices <- list()
# Loop through each row in unique_rows and find matching rows in df1
for (i in 1:nrow(unique_rows)) {
current_row <- unique_rows[i, ]
matches <- which(apply(df1[, compare_cols], 1, function(x) compare_rows(current_row, x, compare_cols)))
matching_indices[[i]] <- matches
}
# Loop through each row in unique_rows and find matching rows in df1
for (i in 1:nrow(unique_rows)) {
current_row <- unique_rows[i, ]
matches <- which(apply(df[, compare_cols], 1, function(x) compare_rows(current_row, x, compare_cols)))
matching_indices[[i]] <- matches
}
all(unique_rows[1, 1:35] == df[, 1:35])
unique_rows[1]
unique_rows[1,]
which(df[,1:35] == unique_rows[1,])
# Assuming df is your data frame and unique_rows is the other data frame
first_row_unique <- unique_rows[1, ]  # Extract the first row of unique_rows
# Repeat the first row of unique_rows to match the number of rows in df
first_row_unique_repeated <- as.data.frame(replicate(nrow(df), first_row_unique))
# Now you can compare the two data frames
result <- df[, 1:35] == first_row_unique_repeatedmns.
# Now you can compare the two data frames
result <- df[, 1:35] == first_row_unique_repeated
replicate(nrow(df), first_row_unique)
# Repeat the first row of unique_rows to match the number of rows in df
first_row_unique_repeated <- as.data.frame(replicate(nrow(df), first_row_unique))
# Repeat the first row of unique_rows to match the number of rows in df
first_row_unique_repeated <- as.data.frame(replicate(first_row_unique, nrow(df)))
#--------------#
# 1. Setup     #
#--------------#
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- allrep
rdata <- subset(rdata, Paper.code != "HUM251")
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
alllong <- subset(alllong, Paper.code != "HUM251")
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
alllong$es_longevtiy <- alllong$es
alllong$v_longevtiy <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
library(dplyr)
library(tidyr)
df <- merge(rdata, alllong, all=TRUE)
df <- subset(df, select = -(Trait.category))
df <- subset(df, select = -(Trait))
df <- df[,-1]
df <- subset(df, select = -Effect.size.code)
study_cols <- df[,1:35]
unique_rows <- study_cols[!duplicated(study_cols), ]
# Assuming df is your data frame and unique_rows is the other data frame
first_row_unique <- unique_rows[1, ]  # Extract the first row of unique_rows
# Compare each row of df[, 1:35] to the first row of unique_rows
result <- apply(df[, 1:35], 1, function(row) all(row == first_row_unique))
df[result]
df[result,]
result
table(result)
# Assuming df is your data frame and unique_rows is the other data frame
first_row_unique <- df[1, 1:35 ]  # Extract the first row of unique_rows
# Compare each row of df[, 1:35] to the first row of unique_rows
result <- apply(unique_rows, 1, function(row) all(row == first_row_unique))
table(result)
unique_rows[1,]
df{1,}
df[1,]
df[1,1:35]
is(df[1,1:35] == unique_rows[1,])
which(df[1,1:35] == unique_rows[1,])
all(df[1,1:35 ] == unique_rows[1,])
all(df[1,] == unique_rows[1,])
all(df[1,1:35] == unique_rows[1,])
all(study_cols[1,] == unique_rows[1,])
study_cols[1,]
unique_rows[1,]
identical(study_cols[1,], unique_rows[1,])
identical(study_cols[1:5,], unique_rows[1,])
identical(df[1, 1:35], unique_rows[1,])
test <- c(TRUE, FALSE, TRUE)
df[test, 1]
df[test, 3]
df[test, 2]
test
df[rep(TRUE, 2000), 2]
test <- c(rep(TRUE, 2000), rep(FALSE, 604))
test <- c(rep(TRUE, 2000), rep(FALSE, 804))
df[test, 3]
test <- c(rep(TRUE, 4), rep(FALSE, 2800))
df[test, 3]
df[test, 2]
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
i=1
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
is.indentical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
is.identical
table(is.identical)
df$es_reproduction[is.identical]
df$v_reproduction[is.identical]
df$v_longevity[is.identical]
View(df)
View(unique_rows)
i=25
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
table(is.identical)
df$v_longevity[is.identical]
df$v_reproduction[is.identical]
View(df)
df$Paper.code[is.identical]
View(unique_rows)
unique_rows[25, 2]
is.identical <- c()
i=25
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
is.identical
table(is.identical)
df$Paper.code[is.identical]
unique_rows[1,]
unique_rows[i,]
df[25,]
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
is.identical
which(is.identical == "TRUE")
df[2778, ]
unique_rows[25, ]
identical(df[25, 1:35], unique_rows[25,])
identical(df[2778, 1:35], unique_rows[25,])
unique_rows[25,]
df[2778,]
?identical
identical(df[2778, 1:35], unique_rows[25,])
df[2778, 1:35]
unique_rows[25,]
identical(df[25, 1:35], unique_rows[25,])
unique_rows[25,]
df[25, 1:35]
df[26, 1:35]
unique_rows[26,]
unique_rows[24,]
df[25, 1:35]
identical(df[25, 1:35], unique_rows[24,])
rbind(df[25, 1:35], unique_rows[24,])
combo_df <- c()
combo_df <- c()
for(i in  1:nrow(unique_rows)){
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
combo_df[i] <- cbind(unique_rows[i], df$es_reproduction[is.identical], df$v_reproduction[is.identical], df$es_longevity[is.identical], df$v_longevtiy[is.identical])
}
i=1
unique_rows[1]
combo_df <- c()
for(i in  1:nrow(unique_rows)){
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
combo_df[i,] <- cbind(unique_rows[i,], df$es_reproduction[is.identical], df$v_reproduction[is.identical], df$es_longevity[is.identical], df$v_longevtiy[is.identical])
}
i=1
combo_df <- c()
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
combo_df[i,] <- cbind(unique_rows[i,], df$es_reproduction[is.identical], df$v_reproduction[is.identical], df$es_longevity[is.identical], df$v_longevtiy[is.identical])
unique_rows[i,]
df$es_reproduction[is.identical]
df$v_reproduction[is.identical
]
df$es_longevity[is.identical]
i=100
is.identical <- c()
for(j in 1:nrow(df)){
result <- identical(df[j, 1:35], unique_rows[i,])
is.identical <- c(result, is.identical)
}
is.identical
table(is.identical)
df[1360]
df[1360,]
df[1361,]
rbind(df[1360], df[1361,])
rbind(df[1360,], df[1361,])
unique_rows[1360,]
unique_rows[1360,]
df_r <- subset(df, select = -es_longevtiy)
df_r <- subset(df_r, select = -v_longevtiy)
df_l <- subset(df, select = -es_reproduction)
df_l <- subset(df_l, select = -v_reproduction)
View(df_l)
View(df_r)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- subset(allrep, Paper.code != "HUM251")
?subset
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
alllong$es_longevtiy <- alllong$es
alllong$v_longevtiy <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
View(alllong)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- alllong[,-1]
alllong <- subset(alllong, select = -(Trait))
alllong <- subset(alllong, select = -Effect.size.code)
View(alllong)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- rdata[,-1]
rdata <- subset(rdata, select = -Effect.size.code)
View(rdata)
View(rdata)
allrows <- rbind(rdata, alllong)
allrows <- rbind(rdata[,1:35], alllong[,1:35])
allrows[!duplicated(allrows), ]
unique_rows <- allrows[!duplicated(allrows), ]
rdata$es_reproduction[FALSE]
rdata$es_reproduction[c(FALSE)]
combo_data <- c()
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(df)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
combo_data[i,] <- cbind(unique_rows[i, ],
rdata$es_reproduction[is.indentical_r], rdata$v_reproduction[is.indentical_r],
alllong$es_longevity[is.indentical_l], alllong$es_longevity[is.indentical_l] )
}
combo_data <- c()
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
combo_data[i,] <- cbind(unique_rows[i, ],
rdata$es_reproduction[is.indentical_r], rdata$v_reproduction[is.indentical_r],
alllong$es_longevity[is.indentical_l], alllong$es_longevity[is.indentical_l] )
}
combo_data <- c()
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
combo_data[i,] <- cbind(unique_rows[i, ],
rdata$es_reproduction[is.identical_r], rdata$v_reproduction[is.identical_r],
alllong$es_longevity[is.identical_l], alllong$es_longevity[is.identical_l] )
}
table(is.identical_l)
table(is.identical_r)
is.identical_l == FALSE
all(is.identical_l == FALSE)
all(is.identical_l == TRUE)
table(is.identical_r)
all(is.identical_r == TRUE)
combo_data <- c()
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(all(is.identical_r == FALSE)){
combo_data[i,] <- cbind(unique_rows[i, ],
NA, NA,
alllong$es_longevity[is.identical_l], alllong$es_longevity[is.identical_l])
}
if(all(is.identical_l == FALSE)){
combo_data[i,] <- cbind(unique_rows[i, ],
rdata$es_reproduction[is.identical_r], rdata$es_reproduction[is.identical_r],
NA, NA)
}
}
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
if(all(is.identical_r == FALSE)){
combo_data[i,] <- cbind(unique_rows[i, ],
NA, NA,
alllong$es_longevity[is.identical_l], alllong$es_longevity[is.identical_l])
}
if(all(is.identical_l == FALSE)){
combo_data[i,] <- cbind(unique_rows[i, ],
rdata$es_reproduction[is.identical_r], rdata$es_reproduction[is.identical_r],
NA, NA)
}
all(is.identical_l == FALSE
)
all(is.identical_r == FALSE)
combo_data[i, ] <- unique_rows[i,]
i=1
combo_data[i, ] <- unique_rows[i,]
combo_data <- data()
combo_data <- data.frame()
combo_data[i, ] <- unique_rows[i,]
unique_rows[i,]
combo_data[i, ] <- unique_rows[i,]
View(combo_data)
combo_data <- c(NA)
combo_data[i, ] <- unique_rows[i,]
combo_data[i] <- unique_rows[i,]
combo_data <- unique_rows
combo_data[i,]$es.reproduction <- NA
combo_data[i,]$Paper.code
View(combo_data)
combo_data$es[i] <- NA
View(combo_data)
combo_data$es[i] <- 2
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevtiy[is.identical_l]
View(combo_data)
combo_data$es.reproduction[i] <- NA
combo_data$v.reproduction[i] <- NA
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevtiy[is.identical_l]
View(combo_data)
table(is.identical_l)
combo_data <- unique_rows
for(i in 1:nrow(unique_rows)){
is.identical_r <- c()
is.identical_l <- c()
for(j in 1:nrow(rdata)){
result_r <- identical(rdata[j, 1:35], unique_rows[i,])
is.identical_r <- c(result_r, is.identical_r)
}
for(j in 1:nrow(alllong)){
result_l <- identical(alllong[j, 1:35], unique_rows[i,])
is.identical_l <- c(result_l, is.identical_l)
}
combo_data$es.reproduction[i] <- rdata$es_reproduction[is.identical_r]
combo_data$v.reproduction[i] <-  rdata$v_reproduction[is.identical_r]
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
combo_data$v.longevity[i] <-  alllong$v_longevtiy[is.identical_l]
}
View(combo_data)
table(is.identical_l)
table(is.identical_r)
combo_data$es.longevity[i] <- alllong$es_longevtiy[is.identical_l]
i
alllong$es_longevtiy[is.identical_l]
View(combo_data)
combo_data <- unique_rows
View(combo_data)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
effectdata <-  subset(effectdata, Paper.code != "HUM251")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
rdata <- allrep
### Read in effect size data
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata$es_reproduction <- rdata$es
rdata$v_reproduction <- rdata$v
rdata <- subset(rdata, select = -es)
rdata <- subset(rdata, select = -v)
alllong$es_longevity <- alllong$es
alllong$v_longevity <- alllong$v
alllong <- subset(alllong, select = -es)
alllong <- subset(alllong, select = -v)
alllong <- subset(alllong, select = -(Trait.category))
alllong <- subset(alllong, select = -(Trait))
alllong <- alllong[,-1]
alllong <- subset(alllong, select = -Effect.size.code)
rdata <- subset(rdata, select = -(Trait.category))
rdata <- subset(rdata, select = -(Trait))
rdata <- rdata[,-1]
rdata <- subset(rdata, select = -Effect.size.code)
allrows <- rbind(rdata[,1:35], alllong[,1:35])
unique_rows <- allrows[!duplicated(allrows), ]
combo_data <- unique_rows
