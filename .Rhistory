sdata <- readRDS(here("output", "Output data", "mlma_sa_data.rds"))
}
#| echo: false
#| warning: false
#| include: true
#| eval: true
sort(setdiff(data_long_final$trial, sdata$trial))
if(rerun){
data_warm <- subset(data_long_final, warm.cool == "Warm")
data_cool <- subset(data_long_final, warm.cool == "Cool")
## make V matrix for warm
V_warm <- make_VCV_matrix(data = data_warm, cluster = "trial",  V = "v", rho = 0.5)
V2_warm <- metaAidR::make_VCV_matrix(data = data_warm, matrix = V_warm, cluster = "shared_control",  V = "v", rho = 0.5)
corpcor::is.positive.definite(V2_warm) # FALSE
V2_warm <- Matrix::nearPD(V2_warm)$mat
corpcor::is.positive.definite(V2_warm) # TRUE
## make V matrix for cool
V_cool <- make_VCV_matrix(data = data_cool, cluster = "trial",  V = "v", rho = 0.5)
V2_cool <- metaAidR::make_VCV_matrix(data = data_cool, matrix = V_cool, cluster = "shared_control",  V = "v", rho = 0.5)
corpcor::is.positive.definite(V2_cool) # FALSE
V2_cool <- Matrix::nearPD(V2_cool)$mat
corpcor::is.positive.definite(V2_cool) # TRUE
### Linear models
## used for contrasts
mv_mlma_split.warm <- rma.mv(es ~ outcome*c_treattemp, V = V2_warm,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = data_warm, test = "t", dfs = "contain")
## used for tvalues, pvalues and constrasts
mv_mlma_split.warm.inter <- rma.mv(es ~ -1 + outcome*c_treattemp, V = V2_warm,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = data_warm, test = "t", dfs = "contain")
## reported table for actual estimates
mv_mlma_split.warm.report <- rma.mv(es ~ -1 + outcome + outcome:c_treattemp, V = V2_warm,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = data_warm, test = "t", dfs = "contain")
mv_mlma_split.cool <- rma.mv(es ~ outcome*c_treattemp, V = V2_cool,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = data_cool, test = "t", dfs = "contain")
cis_phi_warm <- as.data.frame(confint(mv_mlma_split.warm, phi = 1))
cis_rho_warm <- as.data.frame(confint(mv_mlma_split.warm, rho = 1))
cis_warm <- rbind(cis_phi_warm, cis_rho_warm)
cis_phi_cool <- as.data.frame(confint(mv_mlma_split.cool, phi = 1))
cis_rho_cool <- as.data.frame(confint(mv_mlma_split.cool, rho = 1))
cis_cool <- rbind(cis_phi_cool, cis_rho_cool)
write.csv(cis_cool, here("output", "tables", "mv_mlma_split.cool_cis.csv"))
write.csv(cis_warm, here("output", "tables", "mv_mlma_split.warm_cis.csv"))
### Quadratic models
mv_mlma_split.warm_quad <- rma.mv(es ~ outcome*poly(c_treattemp, degree=2, raw=TRUE), V = V2_warm,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = data_warm, test = "t", dfs = "contain")
# for contrasts
mv_mlma_split.cool_quad <- rma.mv(es ~ outcome*poly(c_treattemp, degree=2, raw=TRUE), V = V2_cool,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = data_cool, test = "t", dfs = "contain")
# For tvalues and pvalues of absolute values of intercepts
mv_mlma_split.cool_quad.inter <- rma.mv(es ~ -1 + outcome*poly(c_treattemp, degree=2, raw=TRUE), V = V2_cool,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = data_cool, test = "t", dfs = "contain")
# for reported table (absolute values), for absolute values of nonlinear terms
mv_mlma_split.cool_quad.report <- rma.mv(es ~ -1 + outcome:poly(c_treattemp, degree=2, raw=TRUE), V = V2_cool,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = data_cool, test = "t", dfs = "contain")
cis_phi_warm.q <- as.data.frame(confint(mv_mlma_split.warm_quad, phi = 1))
cis_rho_warm.q <- as.data.frame(confint(mv_mlma_split.warm_quad, rho = 1))
cis_warm.q <- rbind(cis_phi_warm.q, cis_rho_warm.q)
cis_phi_cool.q <- as.data.frame(confint(mv_mlma_split.cool_quad, phi = 1))
cis_rho_cool.q <- as.data.frame(confint(mv_mlma_split.cool_quad, rho = 1))
cis_cool.q <- rbind(cis_phi_cool.q, cis_rho_cool.q)
write.csv(cis_cool.q, here("output", "tables", "mv_mlma_split.cool_cis_quad.csv"))
write.csv(cis_warm.q, here("output", "tables", "mv_mlma_split.warm_cis_quad.csv"))
### Cubic models
mv_mlma_split.warm_cubic <- rma.mv(es ~ outcome*poly(c_treattemp, degree=3, raw=TRUE), V = V2_warm,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = data_warm, test = "t", dfs = "contain")
mv_mlma_split.cool_cubic <- rma.mv(es ~ outcome*poly(c_treattemp, degree=3, raw=TRUE), V = V2_cool,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = data_cool, test = "t", dfs = "contain")
cis_phi_warm.c <- as.data.frame(confint(mv_mlma_split.warm_cubic, phi = 1))
cis_rho_warm.c <- as.data.frame(confint(mv_mlma_split.warm_cubic, rho = 1))
cis_warm.c <- rbind(cis_phi_warm.c, cis_rho_warm.c)
cis_phi_cool.c <- as.data.frame(confint(mv_mlma_split.cool_cubic, phi = 1))
cis_rho_cool.c <- as.data.frame(confint(mv_mlma_split.cool_cubic, rho = 1))
cis_cool.c <- rbind(cis_phi_cool.c, cis_rho_cool.c)
write.csv(cis_cool.c, here("output", "tables", "mv_mlma_split.cool_cis_cubic.csv"))
write.csv(cis_warm.c, here("output", "tables", "mv_mlma_split.warm_cis_cubic.csv"))
### higher order
mv_mlma_split.warm_4 <- rma.mv(es ~ outcome*poly(c_treattemp, degree=4, raw=TRUE), V = V2_warm,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = data_warm, test = "t", dfs = "contain")
mv_mlma_split.cool_4 <- rma.mv(es ~ outcome*poly(c_treattemp, degree=4, raw=TRUE), V = V2_cool,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = data_cool, test = "t", dfs = "contain")
cis_phi_warm.4 <- as.data.frame(confint(mv_mlma_split.warm_4, phi = 1))
cis_rho_warm.4 <- as.data.frame(confint(mv_mlma_split.warm_4, rho = 1))
cis_warm.4 <- rbind(cis_phi_warm.4, cis_rho_warm.4)
cis_phi_cool.4 <- as.data.frame(confint(mv_mlma_split.cool_4, phi = 1))
cis_rho_cool.4 <- as.data.frame(confint(mv_mlma_split.cool_4, rho = 1))
cis_cool.4 <- rbind(cis_phi_cool.4, cis_rho_cool.4)
write.csv(cis_cool.4, here("output", "tables", "mv_mlma_split.cool_cis_4.csv"))
write.csv(cis_warm.4, here("output", "tables", "mv_mlma_split.warm_cis_4.csv"))
saveRDS(mv_mlma_split.warm, here("output", "models", "mv_mlma_split.warm.rds"))
saveRDS(mv_mlma_split.warm.inter, here("output", "models", "mv_mlma_split.warm.inter.rds"))
saveRDS(mv_mlma_split.warm.report, here("output", "models", "mv_mlma_split.warm.report.rds"))
saveRDS(mv_mlma_split.cool, here("output", "models", "mv_mlma_split.cool.rds"))
saveRDS(mv_mlma_split.cool_quad.inter, here("output", "models", "mv_mlma_split.cool_quad.inter.rds"))
saveRDS(mv_mlma_split.cool_quad.report, here("output", "models", "mv_mlma_split.cool_quad.report.rds"))
saveRDS(mv_mlma_split.warm_quad, here("output", "models", "mv_mlma_split.warm_quad.rds"))
saveRDS(mv_mlma_split.cool_quad, here("output", "models", "mv_mlma_split.cool_quad.rds"))
saveRDS(mv_mlma_split.warm_cubic, here("output", "models", "mv_mlma_split.warm_cubic.rds"))
saveRDS(mv_mlma_split.cool_cubic, here("output", "models", "mv_mlma_split.cool_cubic.rds"))
saveRDS(mv_mlma_split.warm_4, here("output", "models", "mv_mlma_split.warm_4.rds"))
saveRDS(mv_mlma_split.cool_4, here("output", "models", "mv_mlma_split.cool_4.rds"))
} else {
#read in models
mv_mlma_split.warm <- readRDS(here("output", "models", "mv_mlma_split.warm.rds"))
mv_mlma_split.warm.inter <- readRDS(here("output", "models", "mv_mlma_split.warm.inter.rds"))
mv_mlma_split.warm.report <- readRDS(here("output", "models", "mv_mlma_split.warm.report.rds")) ## reported table
mv_mlma_split.cool <- readRDS(here("output", "models", "mv_mlma_split.cool.rds"))
mv_mlma_split.cool_quad.inter <- readRDS(here("output", "models", "mv_mlma_split.cool_quad.inter.rds"))
mv_mlma_split.warm_quad <- readRDS(here("output", "models", "mv_mlma_split.warm_quad.rds"))
mv_mlma_split.cool_quad <- readRDS(here("output", "models", "mv_mlma_split.cool_quad.rds"))
mv_mlma_split.cool_quad.report <- readRDS(here("output", "models", "mv_mlma_split.cool_quad.report.rds"))
mv_mlma_split.warm_cubic <- readRDS(here("output", "models", "mv_mlma_split.warm_cubic.rds"))
mv_mlma_split.cool_cubic <- readRDS(here("output", "models", "mv_mlma_split.cool_cubic.rds"))
mv_mlma_split.warm_4 <- readRDS(here("output", "models", "mv_mlma_split.warm_4.rds"))
mv_mlma_split.cool_4 <- readRDS(here("output", "models", "mv_mlma_split.cool_4.rds"))
# read confidence intervals
cis_warm <- read.csv(here("output", "tables", "mv_mlma_split.warm_cis.csv"))
cis_cool <- read.csv(here("output", "tables", "mv_mlma_split.cool_cis.csv"))
cis_warm.q <- read.csv(here("output", "tables", "mv_mlma_split.warm_cis_quad.csv"))
cis_cool.q <- read.csv(here("output", "tables", "mv_mlma_split.cool_cis_quad.csv"))
cis_cool.c <- read.csv(here("output", "tables", "mv_mlma_split.cool_cis_cubic.csv"))
cis_warm.c <- read.csv(here("output", "tables", "mv_mlma_split.warm_cis_cubic.csv"))
cis_cool.4 <- read.csv(here("output", "tables", "mv_mlma_split.cool_cis_4.csv"))
cis_warm.4 <- read.csv(here("output", "tables", "mv_mlma_split.warm_cis_4.csv"))
}
#| label: tbl-warm-lin
#| tbl-cap: Linear effects of temperature on mean effect size for longevity and reproduction when treatment temperatures are warmer than reference temperatures.
table <- data.frame(Parameters = c("Longevity (mean)", "Reproduction (mean)", "Linear Treatment Temperature (centered) - Longevity", "Linear Treatment Temperature (centered) - Reproduction"),
Est. = round(mv_mlma_split.warm.report$b, 4),
`L 95% CI` = round(mv_mlma_split.warm.report$ci.lb, 4),
`U 95% CI` = round(mv_mlma_split.warm.report$ci.ub, 4),
`df` = round(mv_mlma_split.warm.report$ddf,2),
`p-value` = sapply(round(mv_mlma_split.warm.report$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
#| label: tbl-cool-quad
#| tbl-cap: Quadratic effects of temperature on mean effect size for longevity and reproduction when treatment temperatures are cooler than reference temperatures.
table <- data.frame(Parameters = c("Longevity (mean)", "Reproduction (mean)",
"Linear Treatment Temperature (centered) - Longevity", "Linear Treatment Temperature (centered) - Reproduction",
"Quadratic Treatment Temperature (centered) - Longevity",   "Quadratic Treatment Temperature (centered) - Reproduction"),
Est. = round(c(mv_mlma_split.cool_quad.inter$b[1:2],mv_mlma_split.cool_quad.report$b[1:4]), 4),
`L 95% CI` = round(c(mv_mlma_split.cool_quad.inter$ci.lb[1:2],mv_mlma_split.cool_quad.report$ci.lb[1:4]), 4),
`U 95% CI` = round(c(mv_mlma_split.cool_quad.inter$ci.ub[1:2],mv_mlma_split.cool_quad.report$ci.ub[1:4]), 4),
`df` = round(c(mv_mlma_split.cool_quad.inter$ddf[1:2],mv_mlma_split.cool_quad.report$ddf[1:4]),2),
`p-value` = sapply(round(c(mv_mlma_split.cool_quad.inter$pval[1:2],mv_mlma_split.cool_quad.report$pval[1:4]),4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
data_warm2 <- subset(data, warm.cool == "Warm")
data_cool2 <- subset(data, warm.cool == "Cool")
#| fig-cap: Zoomed Between study correlation for reproduction and longevity- warm
data_warm2  %>%  group_by(Experiment.code)  %>% reframe(es_repro = mean(es_reproduction), es_long = mean(es_longevity), mean_v = (v_reproduction + v_longevity)/2) %>% ggplot(aes(x = es_repro, y = es_long, size = mean_v)) +
geom_point(alpha = 1/10) + labs(x = "SMD (Reproduction)", y = "SMD (Longevity)", size =  "Sampling Variance") +
theme_bw() +
coord_cartesian(xlim=c(-5,2.5), ylim = c(-5,2.5)) +
labs(title = "Between-study correlation- warm")
#| fig-cap: Zoomed Between study correlation for reproduction and longevity- cool
data_cool2  %>%  group_by(Experiment.code)  %>% reframe(es_repro = mean(es_reproduction), es_long = mean(es_longevity), mean_v = (v_reproduction + v_longevity)/2) %>% ggplot(aes(x = es_repro, y = es_long, size = mean_v)) +
geom_point(alpha = 1/10) + labs(x = "SMD (Reproduction)", y = "SMD (Longevity)", size =  "Sampling Variance") +
theme_bw() +
coord_cartesian(xlim=c(-5,5), ylim = c(-5,5))+
labs(title = "Between-study correlation- cool")
data_warm <- subset(data_long_final, warm.cool == "Warm")
data_cool <- subset(data_long_final, warm.cool == "Cool")
# Warm
preds.mlma.warm <- predict(mv_mlma_split.warm, addx=TRUE)
mlma_warm_data <- data_warm
mlma_warm_data$pred <- preds.mlma.warm$pred
mlma_warm_data$pred.lb <- preds.mlma.warm$pi.lb
mlma_warm_data$pred.ub <- preds.mlma.warm$pi.ub
mlma_warm_data$c.lb <- preds.mlma.warm$ci.lb
mlma_warm_data$c.ub <- preds.mlma.warm$ci.ub
ggplot(data = mlma_warm_data, aes(x = c_treattemp, y = pred, col = outcome, linetype = outcome)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = outcome), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_fill_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_linetype_manual(values = c("solid", "dashed"), labels = c("Longevity", "Reproduciton"), name="Trait") +
theme_bw() +
labs(title = "Predicted temperature effect- warm",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Trait",
fill = "Trait",
linetype = "Trait")
# Cool
preds.mlma.cool <- predict(mv_mlma_split.cool, addx=TRUE)
mlma_cool_data <- data_cool
mlma_cool_data$pred <- preds.mlma.cool$pred
mlma_cool_data$pred.lb <- preds.mlma.cool$pi.lb
mlma_cool_data$pred.ub <- preds.mlma.cool$pi.ub
mlma_cool_data$c.lb <- preds.mlma.cool$ci.lb
mlma_cool_data$c.ub <- preds.mlma.cool$ci.ub
ggplot(data = mlma_cool_data, aes(x = c_treattemp, y = pred, col = outcome, linetype = outcome)) +
geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = outcome), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_fill_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_linetype_manual(values = c("solid", "dashed"), labels = c("Longevity", "Reproduciton"), name="Trait") +
theme_bw() +
labs(title = "Predicted temperature effect- cool",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Trait",
fill = "Trait",
linetype = "Trait")
# Warm
preds.mlma.warm.2 <- predict(mv_mlma_split.warm_quad, addx=TRUE)
mlma_warm_data$pred.2 <- preds.mlma.warm.2$pred
mlma_warm_data$pred.lb.2 <- preds.mlma.warm.2$pi.lb
mlma_warm_data$pred.ub.2 <- preds.mlma.warm.2$pi.ub
mlma_warm_data$c.lb.2 <- preds.mlma.warm.2$ci.lb
mlma_warm_data$c.ub.2 <- preds.mlma.warm.2$ci.ub
ggplot(data = mlma_warm_data, aes(x = c_treattemp, y = pred.2, col = outcome, linetype = outcome)) +
geom_ribbon(aes(ymin = c.lb.2, ymax = c.ub.2, fill = outcome), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_fill_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_linetype_manual(values = c("solid", "dashed"), labels = c("Longevity", "Reproduciton"), name="Trait") +
theme_bw() +
labs(title = "Predicted temperature effect- warm",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Trait",
fill = "Trait",
linetype = "Trait")
# Cool
preds.mlma.cool.2 <- predict(mv_mlma_split.cool_quad, addx=TRUE)
mlma_cool_data$pred.2 <- preds.mlma.cool.2$pred
mlma_cool_data$pred.lb.2 <- preds.mlma.cool.2$pi.lb
mlma_cool_data$pred.ub.2 <- preds.mlma.cool.2$pi.ub
mlma_cool_data$c.lb.2 <- preds.mlma.cool.2$ci.lb
mlma_cool_data$c.ub.2 <- preds.mlma.cool.2$ci.ub
ggplot(data = mlma_cool_data, aes(x = c_treattemp, y = pred.2, col = outcome, linetype = outcome)) +
geom_ribbon(aes(ymin = c.lb.2, ymax = c.ub.2, fill = outcome), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_fill_manual(values = c("red", "blue"), name = "Trait", labels = c("Longevity", "Reproduciton")) +
scale_linetype_manual(values = c("solid", "dashed"), labels = c("Longevity", "Reproduciton"), name="Trait") +
theme_bw() +
labs(title = "Predicted temperature effect- cool",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Trait",
fill = "Trait",
linetype = "Trait")
# Warm
preds.mlma.warm.3 <- predict(mv_mlma_split.warm_cubic, addx=TRUE)
mlma_warm_data$pred.3 <- preds.mlma.warm.3$pred
mlma_warm_data$pred.lb.3 <- preds.mlma.warm.3$pi.lb
mlma_warm_data$pred.ub.3 <- preds.mlma.warm.3$pi.ub
mlma_warm_data$c.lb.3 <- preds.mlma.warm.3$ci.lb
mlma_warm_data$c.ub.3 <- preds.mlma.warm.3$ci.ub
ggplot(data = mlma_warm_data, aes(x = c_treattemp, y = pred.3, col = outcome, linetype = outcome)) +
geom_ribbon(aes(ymin = c.lb.3, ymax = c.ub.3, fill = outcome), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("purple", "orange")) +
scale_fill_manual(values = c("purple", "orange")) +
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Predicted temperature effect- warm",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "outcome",
fill = "outcome",
linetype = "outcome")
# Cool
preds.mlma.cool.3 <- predict(mv_mlma_split.cool_cubic, addx=TRUE)
mlma_cool_data$pred.3 <- preds.mlma.cool.3$pred
mlma_cool_data$pred.lb.3 <- preds.mlma.cool.3$pi.lb
mlma_cool_data$pred.ub.3 <- preds.mlma.cool.3$pi.ub
mlma_cool_data$c.lb.3 <- preds.mlma.cool.3$ci.lb
mlma_cool_data$c.ub.3 <- preds.mlma.cool.3$ci.ub
ggplot(data = mlma_cool_data, aes(x = c_treattemp, y = pred.3, col = outcome, linetype = outcome)) +
geom_ribbon(aes(ymin = c.lb.3, ymax = c.ub.3, fill = outcome), alpha = 0.15) +
geom_line() +
scale_color_manual(values = c("purple", "orange")) +
scale_fill_manual(values = c("purple", "orange")) +
scale_linetype_manual(values = c("solid", "dashed")) +
theme_bw() +
labs(title = "Predicted temperature effect- cool",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "outcome",
fill = "outcome",
linetype = "outcome")
#| echo: false
#| warning: false
#| include: false
rerun3=FALSE
if(rerun3){
minq <- quantile(data_warm$es, 0.05)
maxq <- quantile(data_warm$es, 0.95)
sdata <- subset(data_warm, es > minq & es < maxq)
## make V matrix for sensitivity data
V_2 <- make_VCV_matrix(data = sdata, cluster = "trial",  V = "v", rho = 0.5)
V2 <- metaAidR::make_VCV_matrix(data = sdata, matrix = V_2, cluster = "shared_control",  V = "v", rho = 0.5)
# Check of PD
corpcor::is.positive.definite(V2) # FALSE
# Can bend it to make it PD
V2 <- Matrix::nearPD(V2)$mat
# Check of PD
corpcor::is.positive.definite(V2) # TRUE
mlma_sa_warm <-  rma.mv(es ~ outcome*c_treattemp, V = V2,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = sdata, test = "t", dfs = "contain")
mlma_sa_warm.report <- rma.mv(es ~ -1 + outcome + outcome:c_treattemp, V = V2,
random = list(~outcome - 1 | trial, ~outcome - 1 | Paper.code),
struc = "UN", data = sdata, test = "t", dfs = "contain")
saveRDS(mlma_sa_warm, here("output", "models", "mlma_sa_warm.rds"))
saveRDS(mlma_sa_warm.report, here("output", "models", "mlma_sa_warm.report.rds"))
saveRDS(sdata, here("output", "Output data", "mlma_sa_warm.data.rds"))
cis_phi_warm.sa <- as.data.frame(confint(mlma_sa_warm, phi = 1))
cis_rho_warm.sa <- as.data.frame(confint(mlma_sa_warm, rho = 1))
cis_warm.sa <- rbind(cis_phi_warm.sa, cis_rho_warm.sa)
write.csv(cis_warm.sa, here("output", "tables", "mlma_sa.warm_cis.csv"))
} else {
mlma_sa_warm <- readRDS(here("output", "models", "mlma_sa_warm.rds"))
mlma_sa_warmdata <- readRDS(here("output", "Output data", "mlma_sa_warm.data.rds"))
mlma_sa_warm.report <-  readRDS(here("output", "models", "mlma_sa_warm.report.rds"))
cis_warm.sa <- read.csv(here("output", "tables", "mlma_sa.warm_cis.csv"))
}
#| label: tbl-warm-lin-sa
#| tbl-cap: Linear effects of temperature on mean effect size for longevity and reproduction when treatment temperatures are warmer than reference temperatures (sensitivity analysis with 10% outliers removed).
table <- data.frame(Parameters = c("Longevity (mean)", "Reproduction (mean)", "Linear Treatment Temperature (centered) - Longevity", "Linear Treatment Temperature (centered) - Reproduction"),
Est. = round(mlma_sa_warm.report$b, 4),
`L 95% CI` = round(mlma_sa_warm.report$ci.lb, 4),
`U 95% CI` = round(mlma_sa_warm.report$ci.ub, 4),
`df` = round(mlma_sa_warm.report$ddf,2),
`p-value` = sapply(round(mlma_sa_warm.report$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
#| echo: false
#| warning: false
#| include: false
rerun3=FALSE
if(rerun3){
minq <- quantile(data_cool$es, 0.05)
maxq <- quantile(data_cool$es, 0.95)
sdata <- subset(data_cool, es > minq & es < maxq)
## make V matrix for sensitivity data
V_2 <- make_VCV_matrix(data = sdata, cluster = "trial",  V = "v", rho = 0.5)
V2 <- metaAidR::make_VCV_matrix(data = sdata, matrix = V_2, cluster = "shared_control",  V = "v", rho = 0.5)
# Check of PD
corpcor::is.positive.definite(V2) # FALSE
# Can bend it to make it PD
V2 <- Matrix::nearPD(V2)$mat
# Check of PD
corpcor::is.positive.definite(V2) # TRUE
## Sensitivity analysis. Cool. Quadratic model.
mlma_sa_cool <-  rma.mv(es ~ -1 + outcome:poly(c_treattemp, degree=2, raw=TRUE), V = V2,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = sdata, test = "t", dfs = "contain")
# For tvalues and pvalues of absolute values of intercepts
mlma_sa_cool.inter <- rma.mv(es ~ -1 + outcome*poly(c_treattemp, degree=2, raw=TRUE), V = V2,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = sdata, test = "t", dfs = "contain")
# for reported table (absolute values), for absolute values of nonlinear terms
mlma_sa_cool.report <- rma.mv(es ~ -1 + outcome:poly(c_treattemp, degree=2, raw=TRUE), V = V2,
random = list(~outcome - 1 | trial,  ~outcome - 1 | Paper.code),
struc = "UN", data = sdata, test = "t", dfs = "contain")
saveRDS(mlma_sa_cool, here("output", "models", "mlma_sa_cool.rds"))
saveRDS(mlma_sa_cool.inter, here("output", "models", "mlma_sa_cool.inter.rds"))
saveRDS(mlma_sa_cool.report, here("output", "models", "mlma_sa_cool.report.rds"))
saveRDS(sdata, here("output", "Output data", "mlma_sa_cool.data.rds"))
cis_phi_cool.sa <- as.data.frame(confint(mlma_sa_cool, phi = 1))
cis_rho_cool.sa <- as.data.frame(confint(mlma_sa_cool, rho = 1))
cis_cool.sa <- rbind(cis_phi_cool.sa, cis_rho_cool.sa)
write.csv(cis_cool.sa, here("output", "tables", "mlma_sa.cool_cis.csv"))
} else {
mlma_sa_cool <- readRDS(here("output", "models", "mlma_sa_cool.rds"))
mlma_sa_cool.report <- readRDS(here("output", "models", "mlma_sa_cool.report.rds"))
mlma_sa_cool.report <- readRDS(here("output", "models", "mlma_sa_cool.inter.rds"))
mlma_sa_cooldata <- readRDS(here("output", "Output data", "mlma_sa_cool.data.rds"))
cis_cool.sa <- read.csv(here("output", "tables", "mlma_sa.cool_cis.csv"))
}
#| label: tbl-cool-quad-sa
#| tbl-cap: quadratic effects of temperature on mean effect size for longevity and reproduction when treatment temperatures are cooler than reference temperatures (sensitivity analysis with 10% outliers removed).
table <- data.frame(Parameters = c("Longevity (mean)", "Reproduction (mean)",
"Linear Treatment Temperature (centered) - Longevity", "Linear Treatment Temperature (centered) - Reproduction",
"Quadratic Treatment Temperature (centered) - Longevity",   "Quadratic Treatment Temperature (centered) - Reproduction"),
Est. = round(c(mlma_sa_cool.inter$b[1:2], mlma_sa_cool.report$b[1:4]), 4),
`L 95% CI` = round(c(mlma_sa_cool.inter$ci.lb[1:2], mlma_sa_cool.report$ci.lb[1:4]), 4),
`U 95% CI` = round(c(mlma_sa_cool.inter$ci.ub[1:2], mlma_sa_cool.report$ci.ub[1:4]), 4),
`df` = round(c(mlma_sa_cool.inter$ddf[1:2], mlma_sa_cool.report$ddf[1:4]),2),
`p-value` = sapply(round(c(mlma_sa_cool.inter$pval[1:2], mlma_sa_cool.report$pval[1:4]),4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
# predicitons for higher order polys (>3)
# warm 4
preds.mlma.warm.4 <- predict(mv_mlma_split.warm_4, addx=TRUE)
mlma_warm_data$pred.4 <- preds.mlma.warm.4$pred
mlma_warm_data$pred.lb.4 <- preds.mlma.warm.4$pi.lb
mlma_warm_data$pred.ub.4 <- preds.mlma.warm.4$pi.ub
mlma_warm_data$c.lb.4 <- preds.mlma.warm.4$ci.lb
mlma_warm_data$c.ub.4 <- preds.mlma.warm.4$ci.ub
#cool 4
preds.mlma.cool.4 <- predict(mv_mlma_split.cool_4, addx=TRUE)
mlma_cool_data$pred.4 <- preds.mlma.cool.4$pred
mlma_cool_data$pred.lb.4 <- preds.mlma.cool.4$pi.lb
mlma_cool_data$pred.ub.4 <- preds.mlma.cool.4$pi.ub
mlma_cool_data$c.lb.4 <- preds.mlma.cool.4$ci.lb
mlma_cool_data$c.ub.4 <- preds.mlma.cool.4$ci.ub
# colour pallette
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
## warm (all lines)
ggplot(data = mlma_warm_data, aes(x = c_treattemp)) +
geom_line(aes(y = pred.3, linetype = outcome, color = "Cubic"), size = 1.2) +
geom_line(aes(y = pred.2, linetype = outcome, color = "Quadratic"), size = 1.2) +
geom_line(aes(y = pred, linetype = outcome, color = "Linear"), size = 1.2) +
scale_linetype_manual(values = c("solid", "dotted")) +
scale_color_manual(values = c(cbp2[2], cbp2[3], cbp2[4])) +
theme_bw() +
labs(title = "Predicted temperature effect - warm",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Polynomial degree",
fill = "Outcome",
linetype = "Outcome") +
guides(color = guide_legend(title = "Polynomial degree", ncol = 2))
## cool (all lines)
ggplot(data = mlma_cool_data, aes(x = c_treattemp)) +
geom_line(aes(y = pred.3, linetype = outcome, color = "Cubic"), size = 1.2) +
geom_line(aes(y = pred.2, linetype = outcome, color = "Quadratic"), size = 1.2) +
geom_line(aes(y = pred, linetype = outcome, color = "Linear"), size = 1.2) +
scale_linetype_manual(values = c("solid", "dotted")) +
scale_color_manual(values = c(cbp2[2], cbp2[3], cbp2[4])) +
theme_bw() +
labs(title = "Predicted temperature effect - warm",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Polynomial degree",
fill = "Outcome",
linetype = "Outcome") +
guides(color = guide_legend(title = "Polynomial degree", ncol = 2))
# to add observations  geom_point(aes(y = es, shape = outcome), color = cbp2[1],  size = 1.2) +
### bit messy if you have both outcomes and points on single plot. Maybe split by outcome.
## warm rep
mlma_warm_rep <- subset(mlma_warm_data, outcome == "es_reproduction")
ggplot(data = mlma_warm_rep, aes(x = c_treattemp)) +
geom_point(aes(y = es), color = cbp2[1],  size = 1.2) +
geom_line(aes(y = pred.4, color = "Degree 4"), size = 1.2) +
geom_line(aes(y = pred.3, color = "Cubic"), size = 1.2) +
geom_line(aes(y = pred.2,  color = "Quadratic"), size = 1.2) +
geom_line(aes(y = pred, color = "Linear"), size = 1.2) +
scale_color_manual(values = c(cbp2[2], cbp2[3], cbp2[4], cbp2[5])) +
theme_bw() +
labs(title = "Predicted temperature effect - warm reproduction",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Polynomial degree",
fill = "Outcome") +
coord_cartesian(ylim=c(-10,10))+
guides(color = guide_legend(title = "Polynomial degree", ncol = 2))
## warm long
mlma_warm_long <- subset(mlma_warm_data, outcome == "es_longevity")
ggplot(data = mlma_warm_long, aes(x = c_treattemp)) +
geom_point(aes(y = es), color = cbp2[1],  size = 1.2) +
geom_line(aes(y = pred.4, color = "Degree 4"), size = 1.2) +
geom_line(aes(y = pred.3, color = "Cubic"), size = 1.2) +
geom_line(aes(y = pred.2,  color = "Quadratic"), size = 1.2) +
geom_line(aes(y = pred, color = "Linear"), size = 1.2) +
scale_color_manual(values = c(cbp2[2], cbp2[3], cbp2[4], cbp2[5])) +
theme_bw() +
labs(title = "Predicted temperature effect - warm longevity",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Polynomial degree",
fill = "Outcome") +
coord_cartesian(ylim=c(-10,10))+
guides(color = guide_legend(title = "Polynomial degree", ncol = 2))
## cool rep
mlma_cool_rep <- subset(mlma_cool_data, outcome == "es_reproduction")
ggplot(data = mlma_cool_rep, aes(x = c_treattemp)) +
geom_point(aes(y = es), color = cbp2[1],  size = 1.2) +
geom_line(aes(y = pred.4, color = "Degree 4"), size = 1.2) +
geom_line(aes(y = pred.3, color = "Cubic"), size = 1.2) +
geom_line(aes(y = pred.2,  color = "Quadratic"), size = 1.2) +
geom_line(aes(y = pred, color = "Linear"), size = 1.2) +
scale_color_manual(values = c(cbp2[2], cbp2[3], cbp2[4], cbp2[5])) +
theme_bw() +
labs(title = "Predicted temperature effect - cool reproduction",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Polynomial degree",
fill = "Outcome") +
coord_cartesian(ylim=c(-10,10))+
guides(color = guide_legend(title = "Polynomial degree", ncol = 2))
## warm long
mlma_cool_long <- subset(mlma_cool_data, outcome == "es_longevity")
ggplot(data = mlma_cool_long, aes(x = c_treattemp)) +
geom_point(aes(y = es), color = cbp2[1],  size = 1.2) +
geom_line(aes(y = pred.4, color = "Degree 4"), size = 1.2) +
geom_line(aes(y = pred.3, color = "Cubic"), size = 1.2) +
geom_line(aes(y = pred.2,  color = "Quadratic"), size = 1.2) +
geom_line(aes(y = pred, color = "Linear"), size = 1.2) +
scale_color_manual(values = c(cbp2[2], cbp2[3], cbp2[4], cbp2[5])) +
theme_bw() +
labs(title = "Predicted temperature effect - cool longevity",
x = "Temperature deviation from 25C",
y = "Effect size",
color = "Polynomial degree",
fill = "Outcome") +
coord_cartesian(ylim=c(-10,10))+
guides(color = guide_legend(title = "Polynomial degree", ncol = 2))
