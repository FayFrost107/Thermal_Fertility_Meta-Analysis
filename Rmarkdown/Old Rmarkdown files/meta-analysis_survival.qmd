---
title: "Results for survival Meta-Analysis"
author: "Fay Frost, Daniel Noble, & Liam Dougherty"
format: docx
execute:
  freeze: auto  # re-render only when source changes
cache: false
echo: false
warning: false
error: false
include: true
crossref:
  fig-title: 'Figure'
fig-labels: arabic
title-delim: "-"
fig-prefix: "Figure"
tbl-prefix: "Table"
---

# 1. Preamble
```{r, packages}
#| echo: true
#| warning: false
#| include: false
#| eval: true
#install.packages("pacman")
#devtools::install_github("daniel1noble/metaAidR", force=TRUE)
pacman::p_load(tidyverse, here, ggplot2, ggtree, rotl, multcomp, dplyr, clubSandwich, tidyr,  metafor, ape, phytools, corrplot, metaAidR, orchaRd, latex2exp, flextable)
# source functions
source(here("R", "func.R"))
options(digits = 6)
```

```{r, rerun}
#| echo: true
#| warning: false
#| include: false
#| eval: true

## rerun all models?
rerun <- TRUE
```

# 2. Setup
We first read in our data and select all of the effect sizes related to survival. We create new columns in our dataframe which will serve as random factors in our multi-level meta analysis models. The following initialises four new columns, namely "obs", "study_code", "Species.phylo" and "species". Lastly, we create a column name "precision" which is equal to the inverse standard error.   

The final stage in the setup is to import a phylogentic tree of the data. 



```{r, load data}
#| echo: false
#| warning: false
#| include: false

### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))


survdata_warm <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Warm" )
survdata_cool <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Cool" )

allsurv <- rbind(survdata_warm, survdata_cool)

### select data for analysis
rdata <- allsurv

rdata <- subset(rdata, Paper.code != "HUM251")


########### change species names in survival data ####################################

rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma" 

### specify correct classifications from map
classes <- read.csv(here("Data", "Species_Classifications.csv"))
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]

### Create random factors into data frame 
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code 
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for random factor 

# Precision
precision <- sqrt(1/rdata$v)                         # inverse standard error 
rdata[,"precision"] <- precision
str(rdata)

nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies

#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_surv_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE) 
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix

# use a randomization approach to deal with polytomies. 
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html

saveRDS(rdata, here("Output", "Output data", "survival", "data_full_survival.rds"))
```


\newpage

```{r, eval=TRUE, echo=TRUE}
###################

## import tree from map, determine which species are in the survival dataset
notin <- setdiff(tree1$tip.label, rdata$Species.latin)
indata <- setdiff(tree1$tip.label, notin)

## prune tree
prune_tree <- drop.tip(tree_grafen, notin)
phylo_matrix <- vcv(prune_tree, cor=TRUE, model="Brownian")

## number of indata should equal # of unique rdata species. 
missing_species <- setdiff(unique(rdata$Species.latin), indata)
print(paste("Missing species from tree:", toString(missing_species)))

##### create data frame and plot tree ###################
plot_data <- c()
plot_data$species_latin <- indata
plot_data$class <- rdata$Class[match(indata, rdata$Species.latin)]
plot_data <- as.data.frame(unique(plot_data))
colnames(plot_data) <- c("species_latin", "class")

plot_data$class[which(plot_data$class == "Arachnid")] <- "Arachnida"
plot_data$class[which(plot_data$class == "Insect")] <- "Insecta"

```


```{r, eval=TRUE, echo=TRUE}
ggtree(prune_tree, layout = "circular", lwd = 0.1) %<+% plot_data +
  geom_tiplab(size=1.2, offset=0.01) +
  aes(col = class) 
```
# 3. Results 


```{r}
#| echo: false
#| warning: false
#| include: false
#| eval: true
#| 
# Simple model (no random effects)
if(rerun){
meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1)}
```

```{r}
#| echo: false
#| warning: false
#| include: false
#| eval: true


# Adding four random factors
if(rerun){
meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs), 
                R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
  saveRDS(meta2, here("Output", "models", "survival", "mv_surv_2.rds"))
} else { 
   meta2 <- readRDS(here("Output", "models", "survival", "mv_surv_2.rds"))
  }
```

## Accounting for non-independence of data points from the same experiment

The data has a nested structure. Each study (study_code) may have a number of experiments (effect.size.code) which share a common control temperature. Each effect size has its own unique code, obs. Effect sizes from the same experiment which share a control temperature are thought to be non-independent. The following code create a covariance matrix "VCV_shared" which assumes a correlation of 0.5 between effect sizes from the same experiment. We include this structure in our proceeding models.

```{r}
#| echo: false
#| warning: false
#| include: false
#| eval: true

# Assumes a correlation of 0.5 between effect sizes from the same experiment 
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)


# Add new variance matrix for shared_control into the mixed-effects meta-analysis model
if(rerun){
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs), 
                R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
 saveRDS(meta3, here("Output", "models", "survival", "mv_surv_3.rds"))
} else { 
  meta3 <-  readRDS(here("Output", "models", "survival", "mv_surv_3.rds"))
  }
```




## Random effects models

### Intercept only model

At 25C the mean effect size for survival was (non-significant) negative (est = `r meta3$b`, 95% CI: `r meta3$ci.lb` to `r meta3$ci.ub`, *p*-value = `r p_value(meta3$pval)`, k= `r meta3$k`). Overall heterogeneity was very high (I2[Total] = `r i2_ml(meta3, method=c("ratio"))[1]`%), with almost all of this being attributable to between-study differences (I2[study]=`r i2_ml(meta3, method=c("ratio"))[4]`%) or observational-level differences (I2[obs]=`r i2_ml(meta3, method=c("ratio"))[5]`%). A negligible amount of heterogeneity was explained by species (I2[species]= `r i2_ml(meta3, method=c("ratio"))[3]`%) or phylogenetic history (I2[Phylogeny]= `r i2_ml(meta3, method=c("ratio"))[2]`%).

```{r}
#| echo: true
#| warning: false
#| include: true
#| eval: true
summary(meta3)
i2_ml(meta3, method=c("ratio"))
```


 
```{r, meta4-7}
#| echo: true
#| warning: false
#| include: false
#| eval: true
#| 

if(rerun){
## without phylogeny or species
meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
saveRDS(meta4, here("Output", "models", "survival", "mv_surv_4.rds"))

## without phylogeny 
meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta5, here("Output", "models", "survival", "mv_surv_5.rds"))

## without phylogeny, species or study_code 
meta7 <- rma.mv(es, VCV_shared, random= list(~1|obs), data= rdata, method= "REML")
saveRDS(meta7, here("Output", "models", "survival", "mv_surv_7.rds"))
} else {
  meta4 <- readRDS(here("Output", "models", "survival", "mv_surv_4.rds"))
  meta5 <- readRDS(here("Output", "models", "survival",  "mv_surv_5.rds"))
  meta7 <- readRDS(here("Output", "models", "survival", "mv_surv_7.rds"))
}


```

### Random effects combinations
We then fit the models with different combinations of random effects. The best fitting model according to AIC used only study_ID and observation_ID as random effects with `r round(i2_ml(meta4)[2],2)`% and  `r round(i2_ml(meta4)[3],2)`% estimated heterogeneity respectively. We used this random effects model as a base for our meta-regression models. 


### Meta-Regressions 

### How does temperature affect survival?

Starting with the best fitting random-effect model from Section 3, "meta4" we now include single factors as a fixed effect. We initially explore the fixed factors

* **reftemp**: The experiment's control (reference) temperature.

* **c_treattemp**: The treatment temperature centered around 25 degrees i.e. treattemp - 25, which we expect to have a non-linear relationship to survival.

* **warm.cool** : A categorical variable indicating whether treatment is warmer or cooler than the reference temperature 

* **diff**: The difference between the reference and treatment temperature.

```{r}
#| echo: true
#| warning: false
#| include: true
#| eval: true
#| 

if(rerun){
# warm/cool
meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm, here("Output", "models", "survival", "mv_surv_warm.rds"))

# warm/cool -1
meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_warm_nointer, here("Output", "models", "survival", "mv_surv_warm-1.rds"))


# ref temp
meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_ref, here("Output", "models", "survival", "mv_surv_ref.rds"))


# treat temp centered
meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treattemp, here("Output", "models", "survival", "mv_surv_ctemp.rds"))


# treat temp^2 centered
meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML", test="t")
saveRDS(meta_trait_treat2, here("Output", "models", "survival", "mv_surv_ctemp2.rds"))
r2_ml(meta_trait_treat2)

# treat temp^3 centered
meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat3, here("Output", "models", "survival", "mv_surv_ctemp3.rds"))


# diff temp
meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_diff, here("Output", "models", "survival", "mv_surv_diff.rds"))


### binned treatment max temperatures.
rdata$bin.temp <- c(NA)

rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40" 
rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40" 
rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35" 
rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30" 
rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
rdata$bin.temp[which(rdata$treattemp <15)] <- "<15" 

rdata$bin.temp <- factor(rdata$bin.temp)

levels(rdata$bin.temp)
table(rdata$bin.temp)

# binned temps
meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,  
                             random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")

saveRDS(meta_trait_bintemp, here("Output", "models", "survival", "mv_surv_bintemp.rds"))

} else {
meta_trait_warm  <- readRDS(here("Output", "models", "survival", "mv_surv_warm.rds"))
meta_trait_warm_nointer  <- readRDS(here("Output", "models", "survival", "mv_surv_warm-1.rds"))
meta_trait_ref <- readRDS(here("Output", "models", "survival", "mv_surv_ref.rds"))
meta_trait_treattemp  <- readRDS(here("Output", "models", "survival", "mv_surv_ctemp.rds"))
meta_trait_treat2  <- readRDS(here("Output", "models",  "survival", "mv_surv_ctemp2.rds"))
meta_trait_treat3  <- readRDS(here("Output", "models",  "survival", "mv_surv_ctemp3.rds"))
meta_trait_diff <- readRDS(here("Output", "models", "survival", "mv_surv_diff.rds"))
meta_trait_bintemp <-  readRDS(here("Output", "models", "survival", "mv_surv_bintemp.rds"))
}

```

```{r}
#| echo: false
#| warning: false
#| include: true
#| eval: true

summary(meta_trait_treat2)

```

```{r, fig-treat2}
#| label: fig-treat2
#| fig-cap: Bubble plot of effect size of survival when controlling for temperature. 

preds.rep <- predict(meta_trait_treat2, addx=TRUE)
rep_data <- rdata

rep_data$pred <- preds.rep$pred  
rep_data$pred.lb <- preds.rep$pi.lb
rep_data$pred.ub <- preds.rep$pi.ub
rep_data$c.lb <- preds.rep$ci.lb
rep_data$c.ub <- preds.rep$ci.ub

ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
  geom_line() +
  geom_line(aes(y=pred.lb), linetype="dotted") +
  geom_line(aes(y=pred.ub), linetype="dotted") +
  geom_hline(yintercept=0) +
  geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white", 
             stroke=0.2, alpha=0.5, show.legend = FALSE) +
  scale_size(range = c(1, 5)) +
  theme_bw() +
  coord_cartesian(ylim=c(-12,6)) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  labs(x = "Experimental temperature (°C)",
       y = "Standardised change in survival") 
# Save as pdf (6x8)

```

\newpage 

## Modelling response with binned treatment temperatures

The last model we will try is one with categorised or 'binned' treatment temperatures. We categories our effect sizes into one seven bins depending on the treatment temperature. The bins and the number of effect sizes in each bin are given below


```{r}
summary(meta_trait_bintemp)
```

```{r, echo=TRUE, eval=TRUE}
orchard_plot(meta_trait_bintemp, mod = "bin.temp", xlab = "Effect size", transfm = "none", 
             cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40")) 

```
The two extremely outlying points in the <15 category are both from the study OSM205. We will investigate the removal of these outlying points. 
\newpage




# Sensitivity Analysis

What happens when we remove OSM205, which is clearly an outlying effect size. 

```{r, eval=TRUE}
rdata_exc205 <- subset(rdata, Paper.code != "OSM205")
new_vcv <- impute_covariance_matrix(vi=rdata_exc205$v, cluster = rdata_exc205$shared_control, r=0.5)
```

\newpage

## Treatment temperature
```{r, eval=TRUE}
meta_trait_treattemp_sa <- rma.mv(es, new_vcv,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
```

```{r}
summary(meta_trait_treattemp_sa)
```

\newpage

## Warm vs Cool
```{r, eval=TRUE}
meta_trait_warm_sa <- rma.mv(es, new_vcv,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
```

```{r}
summary(meta_trait_warm_sa)
```

\newpage



## Difference
```{r, eval=TRUE}
meta_trait_diff_sa <- rma.mv(es, new_vcv,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
```

```{r}
summary(meta_trait_diff_sa)
```

\newpage
## Treatment temperature as a quadratic effect


```{r, eval=TRUE}
meta_trait_treat2_sa <- rma.mv(es, new_vcv,  mod= ~ poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
```

```{r}
summary(meta_trait_treat2_sa)
```


```{r, eval=TRUE, echo=TRUE}
p <- bubble_plot(meta_trait_treat2_sa, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
```

## Binned temperatures

```{r, eval=TRUE}
meta_trait_bintemp_sa <- rma.mv(es, new_vcv,  mod= ~bin.temp-1,  random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= rdata_exc205, method= "REML")
summary(meta_trait_bintemp_sa)
```

```{r, echo=TRUE, eval=TRUE}
plot <- orchard_plot(meta_trait_bintemp_sa, mod = "bin.temp", xlab = "Effect size", transfm = "none", 
             cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40")) 
plot + coord_cartesian(ylim=c(-5,5))
```


\newpage

# Sensitivty Analysis

Here, we perform a sensitivity analysis by removing the smallest and largest 2.5% of effect sizes.

```{r, eval=TRUE, echo=TRUE}
minq <- quantile(rdata$es, 0.025)
maxq <- quantile(rdata$es, 0.975)

sdata <- subset(rdata, es > minq & es < maxq)
```

The 2.5th and 97.5th percentiles are given below. 
```{r}
print(minq)
print(maxq)
```

We run the quadratic treatment temperature and the binned temperature models again with our new subsetted data i.e. only with data that is between the 2.5Th and 97.5Th percentile.  

## Treatment temperature as a quadratic effect (sesnsitivity analysis)

We re-create the variance-covariance matrix with our new substted data, which we name sdata. Then we run the meta analysis model again with treatment temperature as  quadratic fixed effect.

```{r, eval=TRUE}
# recreate vcv_shared matrix
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
```

```{r, eval=TRUE, echo=TRUE}
meta_sa_treat2 <- rma.mv(es, VCV_shared_sa,  mod= ~ poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= sdata, method= "REML")
```

```{r}
summary(meta_sa_treat2)
```


\newpage

Below is a bubble plot of the fitted quadratic model to the subsetted data. 

```{r, eval=TRUE, echo=TRUE}
p <- bubble_plot(meta_sa_treat2, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
```

\newpage 

## Modelling temperature as a linear fixed effect (Sensitivity analysis)


```{r, eval=TRUE, echo=TRUE}
meta_sa_treat <- rma.mv(es, VCV_shared_sa,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), test = "t", dfs = "contain", data= sdata, method= "REML")
```

```{r}
summary(meta_sa_treat)
```


\newpage

Below is a bubble plot of the fitted linear model to the subsetted data. 

```{r, eval=TRUE, echo=TRUE}
p <- bubble_plot(meta_sa_treat, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
```



## Modelling response with binned treatment temperatures

Lastly, we rerun the model where our effect sizes are categorised into one seven bins depending on the treatment temperature. The bins and the number of effect sizes in each bin of the new subsetted data are given below


```{r}
table(sdata$bin.temp)
```


```{r, eval=TRUE}
meta_sa_bintemp <- rma.mv(es, VCV_shared_sa,  mod= ~bin.temp-1,  random= list(~ 1|study_code,  ~1|obs), data= sdata, test = "t", dfs = "contain", method= "REML")
```

```{r, eval=TRUE}
summary(meta_sa_bintemp)
```

```{r, echo=TRUE, eval=TRUE}
plot <- orchard_plot(meta_sa_bintemp, mod = "bin.temp", xlab = "Effect size", transfm = "none", 
             cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40")) 

plot+ coord_cartesian(ylim=c(-8,8))
```


# Publication Bias.

We fit meta-regression model with year as a moderator to see whether there is an publication bias. In other words, is effect size strongly correlated with publication year. We found now evidence to suggest that year has an effect on the report effect sizes. A summary of the model is given below. 

# Assumes a correlation of 0.5 between effect sizes from the same experiment 
rdata_exc205$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)

```{r, eval=TRUE}
meta_year <- rma.mv(es, new_vcv,  mod= ~Publication.year,  random= list(~ 1|study_code,  ~1|obs), data= rdata_exc205, test = "t", dfs = "contain", method= "REML")
```

```{r, eval=TRUE}
summary(meta_year)
```


```{r, eval=TRUE, echo=TRUE}
q <- bubble_plot(meta_year, mod = "Publication.year", group="study_code")
q+ coord_cartesian(ylim=c(-20,10))
```

\newpage
