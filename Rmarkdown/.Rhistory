#Output IPD
IPD<-matrix(c(t.IPD,event.IPD,arm),ncol=3,byrow=F)
IPD
rm(list=ls())
library(rotl)
taxa <- c("Trichogramma_pretiosum")
tnrs_match_names(taxa,context_name = "Animals")
tnrs_match_names("Canis_lupus",context_name = "Animals")
tnrs_match_names("Aedes_australis",context_name = "Animals")
tnrs_match_names("Xiphophorus_meyeri",context_name = "Animals")
tnrs_match_names("Trichogramma acacioi",context_name = "Animals")
tnrs_match_names("Trichogramma_acacioi",context_name = "Animals")
tnrs_match_names("Trichogramma_acantholydae",context_name = "Animals")
tnrs_match_names("Aphis citricidus",context_name = "Animals")
tnrs_match_names("Aphis_citricidus",context_name = "Animals")
tnrs_match_names("Tinocallis_dalbergicola",context_name = "Animals")
tnrs_match_names("Tetrastichus_abalosi",context_name = "Animals")
tnrs_match_names("Telenomus chrysopae",context_name = "Animals")
tnrs_match_names("Telenomus_chrysopae",context_name = "Animals")
tnrs_match_names("Sphenomorphus_maculatus",context_name = "Animals")
tnrs_match_names("Larutia_seribuatensis",context_name = "Animals")
tnrs_match_names("Sceloporus_consobrinus",context_name = "Animals")
tnrs_match_names("Sardinops_caeruleus",context_name = "Animals")
tnrs_match_names("Rhyncaphytoptus_abiesis",context_name = "Animals")
tnrs_match_names("Australopalpus_alphitoniae",context_name = "Animals")
tnrs_match_names("Pseudodiaptomus_inopinus",context_name = "Animals")
tnrs_match_names("Pseudodiaptomus_andamanensis",context_name = "Animals")
tnrs_match_names("Pseudodiaptomus_actusus",context_name = "Animals")
tnrs_match_names("Pseudococcus_aberrans",context_name = "Animals")
tnrs_match_names("Caryedon_serratus",context_name = "Animals")
tnrs_match_names("Circus_melanoleucos",context_name = "Animals")
tnrs_match_names("Hippocampus_alatus",context_name = "Animals")
tnrs_match_names("Muscidifurax_raptorellus",context_name = "Animals")
tnrs_match_names("Gryllus_bimaculatus",context_name = "Animals")
tnrs_match_names("Gryllus_abditus",context_name = "Animals")
tnrs_match_names("Haliotis_asinina",context_name = "Animals")
tnrs_match_names("perca_falcata",context_name = "Animals")
tnrs_match_names("Phallocryptus_sublettei",context_name = "Animals")
tnrs_match_names("Pleuronectes_quadrituberculatus",context_name = "Animals")
tnrs_match_names("Planococcus_aemulor",context_name = "Animals")
tnrs_match_names("Phyllonorycter_pomonella",context_name = "Animals")
tnrs_match_names("Phyllonorycter_aarviki",context_name = "Animals")
tnrs_match_names("Phyllonorycter_abrasella",context_name = "Animals")
tnrs_match_names("Phyllonorycter_acanthus",context_name = "Animals")
tnrs_match_names("Penaeus_arambourgi",context_name = "Animals")
tnrs_match_names("Pediculaster_amerahae",context_name = "Animals")
tnrs_match_names("Patella_affinis",context_name = "Animals")
tnrs_match_names("Patella_albicosta",context_name = "Animals")
tnrs_match_names("Poecile_cinctus",context_name = "Animals")
tnrs_match_names("Paracoccus_abnormalis",context_name = "Animals")
tnrs_match_names("ophryotrocha_permanni",context_name = "Animals")
tnrs_match_names("chrysoperla_adami",context_name = "Animals")
tnrs_match_names("cicadulina_anesta",context_name = "Animals")
tnrs_match_names("Neoseiulus_accessus",context_name = "Animals")
tnrs_match_names("Myzus_adjugae",context_name = "Animals")
tnrs_match_names("Mythimna_unipuncta",context_name = "Animals")
tnrs_match_names("Mabuya_meridensis",context_name = "Animals")
tnrs_match_names("Larus_hartalbi",context_name = "Animals")
tnrs_match_names("Largus_biaculatus",context_name = "Animals")
tnrs_match_names("Largus_bimaculatus",context_name = "Animals")
tnrs_match_names("Largus_bipupulatus",context_name = "Animals")
tnrs_match_names("Lacerta_schreiberi",context_name = "Animals")
tnrs_match_names("Hyalopterus_amygdali",context_name = "Animals")
tnrs_match_names("Daphnosis_australis",context_name = "Animals")
tnrs_match_names("Daphnopsis_australis",context_name = "Animals")
tnrs_match_names("Daphnia_australis",context_name = "Animals")
tnrs_match_names("Diaptomus_acutilobatus",context_name = "Animals")
tnrs_match_names("Diaptomus_affinis",context_name = "Animals")
tnrs_match_names("Diaptomus_armatus",context_name = "Animals")
tnrs_match_names("Diaptomus_azureus",context_name = "Animals")
tnrs_match_names("Diglyphus isaea",context_name = "Animals")
tnrs_match_names("Diglyphus_isaea",context_name = "Animals")
tnrs_match_names("Diploar_labyrinthiformis",context_name = "Animals")
tnrs_match_names("echinometra_insularis",context_name = "Animals")
tnrs_match_names("echinometra_vanbrunti",context_name = "Animals")
tnrs_match_names("Echinogammarus_acarinatus",context_name = "Animals")
# Set up data
data <- read.delim("Mapdata20230519.txt", h=T, stringsAsFactors = TRUE)
###-----------------------------------------------------###
### Multilevel meta-analysis using Metafor              ###
### Author: Fay Frost [fay.frost@liverpool.ac.uk]             ###
### Code adapted from Liam Dougherty.
### University of Liverpool                             ###
### Date: August 2023                                   ###
###-----------------------------------------------------###
############################################ Preamble ######################################################
rm(list=ls()) # Clear R environment
library(metafor)
library(ggplot2)
library(ape)
library(rotl)
library(multcomp)
library(dplyr)
# To install the orchaRd package:
install.packages("pacman")
install.packages("pacman")
pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
install.packages("orchaRd")
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
sessionInfo()
install.packages("installr")
library(installr)
updateR()
updateR()
setwd("~/")
setwd("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis")
setwd("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis")
library(metafor)
library(ggplot2)
library(ape)
library(rotl)
library(multcomp)
library(dplyr)
# To install the orchaRd package:
#install.packages("pacman")
#pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
#devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
### Read in effect size data
effectdata <- read.csv("Survival project all pairwise.es.csv")
repdata_warm <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Warm" )
repdata_cool <- subset(effectdata, Trait.category == "Reproduction" & warm.cool == "Cool" )
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
survdata_warm <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Warm" )
survdata_cool <- subset(effectdata, Trait.category == "Survival" & warm.cool == "Cool" )
allrep <- rbind(repdata_warm, repdata_cool)
alllong <- rbind(longdata_warm, longdata_cool)
allsurv <- rbind(survdata_warm, survdata_cool)
############################################ Preamble ######################################################
rm(list=ls()) # Clear R environment
### Read in effect size data
effectdata <- read.csv("Survival project all pairwise.es.csv")
rep  <- subset(effectdata, Trait.category == "Reproduction")
long <- subset(effectdata, Trait.category == "Longevity")
surv <- subset(effectdata, Trait.category == "Survival" )
## select data for analysis
rdata <- rbind(rep, long)
########### change species names in survival data ####################################
classes <- read.csv("Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
levels(rdata$Paper.code)
levels(rdata$study_code)
View(rdata)
levels(rdata$Experiment.code)
rdata$Experiment.code <- factor(rdata$Experiment.code)
levels(rdata$Experiment.code)
levels(rdata$Experiment.code[which(rdata$Trait.category == "Reproduction")])
levels(rdata$Experiment.code[which(rdata$Trait.category == "Longevity")])
#####
rdata$Experiment.code[which(rdata$Trait.category == "Longevity")]
#####
long_codes <- rdata$Experiment.code[which(rdata$Trait.category == "Longevity")]
rep_codes <-  rdata$Experiment.code[which(rdata$Trait.category == "reproduction")]
rep_codes <-  rdata$Experiment.code[which(rdata$Trait.category == "Reproduction")]
which(rdata$Trait.category == "Longevity")
rdata$Experiment.code[which(rdata$Trait.category == "Longevity")]
rdata$Experiment.code[which(rdata$Trait.category == "Reproduction")]
View(rdata)
#####
long_codes <- rdata$Effect.size.code[which(rdata$Trait.category == "Longevity")]
rep_codes <-  rdata$Effect.size.code[which(rdata$Trait.category == "Reproduction")]
#####
long_codes <- unique(rdata$Effect.size.code[which(rdata$Trait.category == "Longevity")])
rep_codes <-  unique(rdata$Effect.size.code[which(rdata$Trait.category == "Reproduction")])
intersect(long_codes, rep_codes)
View(rdata)
load("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/longevity_meta-analysis.RData")
minq <- quantile(rdata$es, 0.025)
maxq <- quantile(rdata$es, 0.975)
sdata <- subset(rdata, es > minq & es < maxq)
print(minq)
print(maxq)
# recreate vcv_shared matrix
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
library(metafor)
library(ggplot2)
library(ape)
library(rotl)
library(multcomp)
library(dplyr)
library(ggtree)
# To install the orchaRd package:
#install.packages("pacman")
#pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
#devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
library(clubSandwich)
library(rmarkdown)
# recreate vcv_shared matrix
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
meta_sa_treat3 <- rma.mv(es, VCV_shared_sa,  mod= ~ poly(treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= sdata, method= "REML")
summary(meta_sa_treat3)
p <- bubble_plot(meta_sa_treat3, mod = "treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10))
table(sdata$bin.temp)
meta_sa_bintemp <- rma.mv(es, VCV_shared_sa,  mod= ~bin.temp-1,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= sdata, method= "REML")
summary(meta_sa_bintemp)
plot <- orchard_plot(meta_sa_bintemp, mod = "bin.temp", xlab = "Effect size", transfm = "none",
cb=FALSE, group="obs", tree.order = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40"))
plot+ coord_cartesian(ylim=c(-40,20))
plot+ coord_cartesian(ylim=c(-10,10))
render("meta_analysis_longevity.Rmd")
(meta_trait_bintemp)
# Create a custom order for bin.temp
rdata$bin.temp <- factor(rdata$bin.temp, levels = c("<15", "15-20", "20-25", "25-30", "30-35", "35-40", ">40"))
meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_bintemp)
summary(meta_trait_treat3)
summary(meta_trait_bintemp)
render("meta_analysis_longevity.Rmd")
save.image("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/longevity_meta-analysis.RData")
table(rdata$Habitat)
meta_bintemp_habitat <- rma.mv(es, VCV_shareda,  mod= ~bin.temp * Habitat,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
meta_bintemp_habitat <- rma.mv(es, VCV_shared,  mod= ~bin.temp * Habitat,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_bintemp_habitat)
table(rdata$Sex)
table(rdata$Sex.exposed)
save.image("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/longevity_meta-analysis.RData")
effectdata <- read.csv("Survival project all pairwise.es.csv")
rdata£Sex[which(rdata$Sex == "both")]
rdata$Sex[which(rdata$Sex == "both")]
rdata <- effectdata
rdata$Sex[which(rdata$Sex == "both")]
which(rdata$Sex == "both")
rdata$Sex[which(rdata$Sex == "Both sexes")]
rdata$Sex[which(rdata$Sex == "Both sexes")] <- "Both"
rdata$Sex[which(rdata$Sex == "Both Sexes")] <- "Both"
table(rdata$Sex)
table(rdata$Sex.exposed)
rdata$Sex.exposed[which(rdata$Sex.exposed == "Both sexes")] <- "Both"
rdata$Sex.exposed[which(rdata$Sex.exposed == "Both Sexes")] <- "Both"
rdata$Sex.exposed[which(rdata$Sex.exposed == "b")] <- "Both"
table(rdata$Sex.exposed)
rdata$Sex.exposed[which(rdata$Sex.exposed == "both")] <- "Both"
rdata$Sex.exposed[which(rdata$Sex.exposed == "female")] <- "Female"
rdata$Sex.exposed[which(rdata$Sex.exposed == "Females only")] <- "Female"
rdata$Sex.exposed[which(rdata$Sex.exposed == "male")] <- "Male"
rdata$Sex.exposed[which(rdata$Sex.exposed == "Males only")] <- "Male"
table(rdata$Sex.exposed)
View(rdata)
table(rdata$Fertilisation.mode)
table(rdata$Agricultural.importance)
rdata$Agricultural.importance[which(rdata$Agricultural.importance == "no")] <- "No"
table(rdata$Lab.or.field)
table(rdata$Stressor.variation)
table(rdata$Country.of.origin)
rdata$Country.of.origin[which(rdata$Country.of.origin == "Brasil")] <- "Brazil"
table(rdata$Continent.of.origin)
table(rdata$Exposure.duration
)
rdata$Stressor.variation[which(rdata$Stressor.variation == "1 - 5 days")] <- "1 to 5 days"
)
table(rdata$Exposure.duration)
rdata$Stressor.variation[which(rdata$Stressor.variation == "1 - 5 days ")] <- "1 to 5 days"
table(rdata$Exposure.duration)
rdata$Stressor.variation
rdata$Exposure.duration[which(rdata$Exposure.duration == "1 - 5 days")] <- "1 to 5 days"
table(rdata$Exposure.duration)
rdata$Exposure.duration[which(rdata$Exposure.duration == "Less than 24 hours")] <- "< 24 hours"
rdata$Exposure.duration[which(rdata$Exposure.duration == "Less than 24 hrs")] <- "< 24 hours"
table(rdata$Exposure.duration)
rdata$Exposure.duration[which(rdata$Exposure.duration == "more than 5 days")] <- "> 5 days"
rdata$Exposure.duration[which(rdata$Exposure.duration == "More than 5 days")] <- "> 5 days"
table(rdata$Exposure.duration)
rdata$Exposure.duration[which(rdata$Exposure.duration == "More than 5 days")] <- "> 5 days"
rdata$Exposure.duration[which(rdata$Exposure.duration == "> 5 days")] <- "More than 5 days"
table(rdata$Exposure.duration)
rdata$Exposure.duration[which(rdata$Exposure.duration == "Yes")] <- "More than 5 days"
table(rdata$Exposure.duration)
table(rdata$Ocean.sea.of.origin)
table(rdata$Life.stage.of.animal)
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "adult")] <- "Adult"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "Adults")] <- "Adult"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "Adults only")] <- "Adult"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "Eggs")] <- "Egg"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "from egg")] <- "Egg"
table(rdata$Life.stage.of.animal)
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "from juvenile")] <- "Juvenile"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "Juveniles")] <- "Juvenile"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "Larval")] <- "Larvae"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "mix")] <- "Mix"
rdata$Life.stage.of.animal[which(rdata$Life.stage.of.animal == "No")] <- "Mix"
table(rdata$Life.stage.of.animal)
write.csv(rdata, "Survival project all pairwise.es.csv")
setwd("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis")
rm(list=ls()) # Clear R environment
library(metafor)
library(ggplot2)
library(ape)
library(rotl)
library(multcomp)
library(dplyr)
library(ggtree)
# To install the orchaRd package:
#install.packages("pacman")
#pacman::p_load(devtools, tidyverse, metafor, patchwork, R.rsp, emmeans)
#devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(orchaRd)
library(clubSandwich)
library(rmarkdown)
##########################################################################################################
#--------------#
# 1. Setup     #
#--------------#
### Read in effect size data
effectdata <- read.csv("Data/Survival project all pairwise.es.csv")
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
### select data for analysis
rdata <- alllong
rdata <- subset(rdata, Paper.code != "HUM251")
########### change species names in survival data ####################################
classes <- read.csv("Data/Species_classifications.CSV") ## read in species classifications from map
rdata$Species.latin[which(rdata$Species.latin == "Marasmia exigua")]                <- "Cnaphalocrocis exigua"
rdata$Species.latin[which(rdata$Species.latin == "Matsumuratettix hieroglyphicus")] <- "Matsumuratettix hiroglyphicus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <- "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Apis craccivora")]                <- "Aphis craccivora"
rdata$Species.latin[which(rdata$Species.latin == "Cryptoleamus montrouzieri")]      <- "Cryptolaemus montrouzieri"
rdata$Species.latin[which(rdata$Species.latin == "Asplanchna brightwelli")]         <- "Asplanchna brightwellii"
rdata$Species.latin[which(rdata$Species.latin == "Brennandania lambi")]             <- "Pygmephorus lambi"
rdata$Species.latin[which(rdata$Species.latin == "Amblyseius alstoniae")]           <- "Euseius alstoniae"
rdata$Species.latin[which(rdata$Species.latin == "Siphoninus phyllyreae")]          <- "Siphoninus phillyreae"
rdata$Species.latin[which(rdata$Species.latin == "Proprioseiopsis asetus")]         <- "Amblyseius asetus"
rdata$Species.latin[which(rdata$Species.latin == "Parabemisia myrica")]             <- "Parabemisia myricae"
rdata$Species.latin[which(rdata$Species.latin == "Cirrospilus sp. near lyncus")]    <- "Cirrospilus lyncus"
rdata$Species.latin[which(rdata$Species.latin == "Anagyrus sp. nov. nr. sinope" )]  <- "Anagyrus sinope"
rdata$Species.latin[which(rdata$Species.latin == "Monochamus leuconotus")]          <- "Anthores leuconotus"
rdata$Species.latin[which(rdata$Species.latin == "Ropalosiphum maidis")]            <- "Rhopalosiphum maidis"
rdata$Species.latin[which(rdata$Species.latin == "Artemia fransiscana")]            <- "Artemia franciscana"
rdata$Species.latin[which(rdata$Species.latin == "Blathyplectes curculionis")]      <- "Bathyplectes curculionis"
rdata$Species.latin[which(rdata$Species.latin == "Menochilus sexmaculatus")]        <- "Cheilomenes sexmaculata"
rdata$Species.latin[which(rdata$Species.latin == "unknown (Tominic)")]              <- "Trichogramma"
### specify classifications from map
rdata$Class <- classes$class[match(rdata$Species.latin, classes$species_latin)]
### Create random factors into data frame
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor
precision <- sqrt(1/rdata$v)                         # inverse standard error
rdata[,"precision"] <- precision
str(rdata)
nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies
#### Import Tree #############
## import tree from map
tree1 <- read.nexus("Phylogeny/all_long_excHUM251_tree.nex")
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix
#--------------------------#
# 2. Random Effects Models #
#--------------------------#
# Simple model (no random effects)
meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1)
# Adding four random factors
meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
summary(meta2)
i2_ml(meta2, method=c("ratio")) # Heterogeneity at each random factor level
# Accounting for non-independence of data points from the same experiment
# Assumes a correlation of 0.5 between effect sizes from the same experiment
rdata$shared_control <- factor(rdata$Effect.size.code)
vcv_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
# Add new variance matrix into the mixed-effects meta-analysis model
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~ 1|shared_control, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)
# Add new variance matrix into the mixed-effects meta-analysis model
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~ 1|shared_control, ~1|obs),
R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
summary(meta3)
i2_ml(meta3, method=c("ratio")) # Heterogeneity at each random factor level
## without phylogeny or species
meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta4)
i2_ml(meta4, method=c("ratio")) # Heterogeneity at each random factor level
## without phylogeny but with shared control
meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta5)
i2_ml(meta5, method=c("ratio")) # Heterogeneity at each random factor level
## without phylogeny, species or study_code
meta7 <- rma.mv(es, VCV_shared, random= list(~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta7)
i2_ml(meta7, method=c("ratio")) # Heterogeneity at each random factor level
## without phylogeny, species or shared_control
meta8 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
summary(meta8)
i2_ml(meta8, method=c("ratio")) # Heterogeneity at each random factor level
####
#-----------------------#
# 3. Meta-regressions   #
#-----------------------#
# Single categorical factor added as a fixed effect
# warm/cool
meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_warm)
# warm/cool -1
meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_warm_nointer)
# ref temp
meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_ref)
# treat temp
meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~treattemp, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_treattemp)
# treat temp^2
meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~ poly(treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_treat2)
# treat temp^3
meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~ poly(treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_treat3)
aic <- AIC(meta_trait_treat3)
AICs <- rbind(AICs, aic)
# diff temp
meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_diff)
# all fixed effects
meta_trait_all <- rma.mv(es, VCV_shared,  mod= ~warm.cool + diff + treattemp + reftemp, random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_all)
### binned treatment max temperatures.
rdata$bin.temp <- c(NA)
rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40"
rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40"
rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35"
rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30"
rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
rdata$bin.temp[which(rdata$treattemp <15)] <- "<15"
rdata$bin.temp <- factor(rdata$bin.temp)
levels(rdata$bin.temp)
table(rdata$bin.temp)
# binned temps
meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_trait_bintemp)
## Publication Bias.
meta_year <- rma.mv(es, VCV_shared,  mod= ~Publication.year,
random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_year)
# Sensitivty Analysis
# Preform a sensitivity analysis by removing the smallest and largest 2.5% of effect sizes.
minq <- quantile(rdata$es, 0.025)
maxq <- quantile(rdata$es, 0.975)
sdata <- subset(rdata, es > minq & es < maxq)
## Treatment temperature as a cubic effect (sesnsitivity analysis)
# re-cmpute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
# re-run cubic model
meta_sa_treat3 <- rma.mv(es, VCV_shared_sa,  mod= ~ poly(treattemp, degree=3, raw=TRUE),
random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= sdata, method= "REML")
summary(meta_sa_treat3)
# re-run binned temps model
meta_sa_bintemp <- rma.mv(es, VCV_shared_sa,  mod= ~bin.temp-1,
random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= sdata, method= "REML")
summary(meta_sa_bintemp)
###########################################################################################################
# Other fixed effects
meta_bintemp_habitat <- rma.mv(es, VCV_shared,  mod= ~bin.temp * Habitat,
random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(meta_bintemp_habitat)
save.image("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/Output/longevity_meta_analysis_output.RData")
render("meta_analysis_reproduction.Rmd")
load("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/Output/reproduction_meta_analysis_output.RData")
setwd("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/Rmarkdown")
render("meta_analysis_reproduction.Rmd")
load("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/Output/longevity_meta_analysis_output.RData")
setwd("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/Rmarkdown")
render("meta_analysis_longevity.Rmd")
load("C:/Users/ff242/Desktop/Liverpool PDRA/Survival project/Survival Meta Analysis/Output/longevity_meta_analysis_output.RData")
test <- rma.mv(es, VCV_shared,  mod= ~bin.temp * Habitat -1,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
test <- rma.mv(es, VCV_shared,  mod= ~ -1 + bin.temp * Habitat,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(test)
test <- rma.mv(es, VCV_shared,  mod= ~ poly(treattemp, degree=3, raw=TRUE) * Habitat,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(test)
test <- rma.mv(es, VCV_shared,  mod= ~ -1 + poly(treattemp, degree=3, raw=TRUE) * Habitat,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(test)
test <- rma.mv(es, VCV_shared,  mod= ~ -1 + poly(treattemp, degree=3, raw=TRUE) * -1 + Habitat,  random= list(~ 1|study_code, ~ 1|shared_control, ~1|obs), data= rdata, method= "REML")
summary(test)
