---
title: "Multivariate Meta-Analysis for Longevity"
author: "Fay Frost, Daniel Noble, & Liam Dougherty"
format: docx
execute:
  freeze: auto  # re-render only when source changes
cache: false
echo: false
warning: false
error: false
include: true
crossref:
  fig-title: 'Figure'
fig-labels: arabic
title-delim: "-"
fig-prefix: "Figure"
tbl-prefix: "Table"
---
  
### Setup
  
```{r, packages}
#| echo: false
#| warning: false
#| include: false
#| eval: true
#install.packages("pacman")
#devtools::install_github("daniel1noble/metaAidR", force=TRUE)
pacman::p_load(tidyverse, here, ggplot2, rotl, multcomp, dplyr, clubSandwich, tidyr,  metafor, ape, phytools, corrplot, metaAidR, orchaRd, latex2exp, flextable)
# source functions
source(here("R", "func.R"))
options(digits = 6)
```

```{r, rerun}
#| echo: false
#| warning: false
#| include: false
#| eval: true

## rerun all models?
rerun <- FALSE
```

```{r, load data}
#| echo: false
#| warning: false
#| include: false

### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))

### select data for analysis
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata <- alllong

### Species names which need changing for phylogeny. 
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea ashmeadi")]              <- "Gonatocerus ashmeadi"	
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea triguttata")]   <- "Gonatocerus triguttatus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <-  "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Daphnia australis")]            <-  "Daphniopsis australis"

### Create random factors into data frame 
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor 

precision <- sqrt(1/rdata$v)                         # inverse standard error 
rdata[,"precision"] <- precision
str(rdata)

nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies

#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_long_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE) 
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix

# use a randomization approach to deal with polytomies. 
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html

saveRDS(rdata, here("Output", "Output data", "longevity", "data_full_longevity.rds"))
```


### Results   

```{r}
#| echo: false
#| warning: false
#| include: false
#| 
# Simple model (no random effects)
if(rerun){
meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1)}
```

```{r}
#| echo: false
#| warning: false
#| include: false
#| 

# Adding four random factors
if(rerun){
meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs), 
                R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
  saveRDS(meta2, here("Output", "models", "longevity", "mv_long_2.rds"))
} else { 
   meta2 <- readRDS(here("Output", "models", "longevity", "mv_long_2.rds"))
  }
```


```{r}
#| echo: false
#| warning: false
#| include: false

# Assumes a correlation of 0.5 between effect sizes from the same experiment 
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)


# Add new variance matrix for shared_control into the mixed-effects meta-analysis model
if(rerun){
meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs), 
                R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
 saveRDS(meta3, here("Output", "models", "longevity", "mv_long_3.rds"))
} else { 
  meta3 <-  readRDS(here("Output", "models", "longevity", "mv_long_3.rds"))
  }
```

### Random effects models

### Intercept only model

At 25C the mean effect size for longevity was significantly negative (est = `r meta3$b`, 95% CI: `r meta3$ci.lb` to `r meta3$ci.ub`, *p*-value = `r p_value(meta3$pval)`). The estimated I2 for each random effect was I2[Total] = `r i2_ml(meta3, method=c("ratio"))[1]`%, I2[Phylogeny]= `r i2_ml(meta3, method=c("ratio"))[2]`%,  I2[species]= `r i2_ml(meta3, method=c("ratio"))[3]`%, I2[study]=`r i2_ml(meta3, method=c("ratio"))[4]`%, I2[obs]=`r i2_ml(meta3, method=c("ratio"))[5]`%

```{r}
#| echo: false
#| warning: false
#| include: true
#| eval: false
summary(meta3)
i2_ml(meta3, method=c("ratio"))
```



```{r, meta4-7}
#| echo: false
#| warning: false
#| include: false
#| 

if(rerun){
  ## without phylogeny or species
  meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
  saveRDS(meta4, here("Output", "models", "longevity", "mv_long_4.rds"))
  
  ## without phylogeny 
  meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta5, here("Output", "models", "longevity", "mv_long_5.rds"))
  
  ## without phylogeny, species or study_code 
  meta7 <- rma.mv(es, VCV_shared, random= list(~1|obs), data= rdata, method= "REML")
  saveRDS(meta7, here("Output", "models", "longevity", "mv_long_7.rds"))
} else {
  meta4 <- readRDS(here("Output", "models", "longevity", "mv_long_4.rds"))
  meta5 <- readRDS(here("Output", "models", "longevity",  "mv_long_5.rds"))
  meta7 <- readRDS(here("Output", "models", "longevity", "mv_long_7.rds"))
}


```

### Random effects combinations
We then fit the models with different combinations of random effects. The best fitting model according to AIC used only study_ID and observation_ID as random effects with `r round(i2_ml(meta4)[2],2)`% and  `r round(i2_ml(meta4)[3],2)`% estimated heterogeneity respectively. We used this random effects model as a base for our meta-regression models. 


### Meta-Regressions 

### How does temperature affect longevity?

```{r, regressionmodels}
#| echo: false
#| warning: false
#| include: false
#| 

if(rerun){
  # warm/cool
  meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_warm, here("Output", "models", "longevity", "mv_long_warm.rds"))
  
  # warm/cool -1
  meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_warm_nointer, here("Output", "models", "longevity", "mv_long_warm-1.rds"))
  
  
  # ref temp
  meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_ref, here("Output", "models", "longevity", "mv_long_ref.rds"))
  
  
  # treat temp centered
  meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_treattemp, here("Output", "models", "longevity", "mv_long_ctemp.rds"))
  
  
  # treat temp^2 centered
  meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  r2_ml(meta_trait_treat2)
  saveRDS(meta_trait_treat2, here("Output", "models", "longevity",  "mv_long_ctemp2.rds"))
  
  # treat temp^3 centered
  meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~ poly(c_treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_treat3, here("Output", "models", "longevity", "mv_long_ctemp3.rds"))
  r2_ml(meta_trait_treat3)
  
    # treat temp^4 centered
  meta_trait_treat4 <- rma.mv(es, VCV_shared,  mod= ~ poly(c_treattemp, degree=4, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_treat3, here("Output", "models", "longevity", "mv_long_ctemp4.rds"))
  
  
  # diff temp
  meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_diff, here("Output", "models", "longevity", "mv_long_diff.rds"))
  
  
  ### binned treatment max temperatures.
  rdata$bin.temp <- c(NA)
  
  rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40" 
  rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40" 
  rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35" 
  rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30" 
  rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
  rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
  rdata$bin.temp[which(rdata$treattemp <15)] <- "<15" 
  
  rdata$bin.temp <- factor(rdata$bin.temp)
  
  levels(rdata$bin.temp)
  table(rdata$bin.temp)
  
  # binned temps
  meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,  
                               random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  
  saveRDS(meta_trait_bintemp, here("Output", "models", "longevity", "mv_long_bintemp.rds"))
  
} else {
  meta_trait_warm  <- readRDS(here("Output", "models", "longevity", "mv_long_warm.rds"))
  meta_trait_warm_nointer  <- readRDS(here("Output", "models", "longevity", "mv_long_warm-1.rds"))
  meta_trait_ref <- readRDS(here("Output", "models", "longevity", "mv_long_ref.rds"))
  meta_trait_treattemp  <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp.rds"))
  meta_trait_treat2  <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp2.rds"))
  meta_trait_diff <- readRDS(here("Output", "models", "longevity", "mv_long_diff.rds"))
  meta_trait_bintemp <-  readRDS(here("Output", "models", "longevity", "mv_long_bintemp.rds"))
  meta_trait_treat3 <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp3.rds"))
  meta_trait_treat4 <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp4.rds"))
}

```

Across all taxa, longevity exhibited a significant quadratic relationship with temperature (QM=`r meta_trait_treat2$QM`, P = `r meta_trait_treat2$QMp`) (@tbl-treat2): longevity peaked around 5°C, and decreased with increasing temperatures (@fig-treat2). The inclusion of phylogenetic relatedness did not result in an improved model fit, as evidenced by the change in Akaike Information Criterion (AIC). Consequently, phylogeny was excluded from the model. Nevertheless, it's worth noting that there was a significant level of variability in lifespan responses to temperature, with a total I2 of `r i2_ml(meta_trait_treat2)[1]`%. The effect size at the observation level (ID) accounted for  `r i2_ml(meta_trait_treat2)[3]`% of this variability, while study-level ID contributed to `r i2_ml(meta_trait_treat2)[2]`%. Phylogeny, in contrast, had a negligible impact, explaining less than 0.001% of the variation.


```{r, tbl-treat2}
#| label: tbl-treat2
#| tbl-cap: Non-linear effects of temperature on mean effect size of longevity
table <- data.frame(Parameters = c("Longevity (mean)", "Linear Treatment Temperature (centered) - Longevity","Quadratic Treatment Temperature (centered) - Longevity"),
                    Est. = round(meta_trait_treat2$b, 4),
                    `L 95% CI` = round(meta_trait_treat2$ci.lb, 4),
                    `U 95% CI` = round(meta_trait_treat2$ci.ub, 4),
                    `p-value` = sapply(round(meta_trait_treat2$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
```

```{r}
#| label: fig-treat3
#| fig-cap: Bubble plot of effect size of longevity when controlling for temperature. 
preds.rep <- predict(meta_trait_treat2, addx=TRUE)
rep_data <- rdata

rep_data$pred <- preds.rep$pred  
rep_data$pred.lb <- preds.rep$pi.lb
rep_data$pred.ub <- preds.rep$pi.ub
rep_data$c.lb <- preds.rep$ci.lb
rep_data$c.ub <- preds.rep$ci.ub

ggplot(rep_data, aes(x = c_treattemp, y = pred)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
  geom_line() +
  geom_line(aes(y=pred.lb), linetype="dotted") +
  geom_line(aes(y=pred.ub), linetype="dotted") +
  geom_hline(yintercept=0) +
  geom_point(rdata, mapping=aes(x = c_treattemp, y = es, size=precision), shape=21, fill="white", 
             stroke=0.2, alpha=0.5, show.legend = FALSE) +
  scale_size(range = c(1, 5)) +
  theme_bw() +
  coord_cartesian(ylim=c(-12,8)) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  labs(x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan") 
# Save as pdf (6x8)

```

```{r}

# Calculating the y value for the peak of the curve

f = function(x) {
  (-0.0047*x^2)+(-0.199*x)-0.0112
  }

# find the maximum of f(x) within the interval [-25, 25]
ans = optimize(f, interval = c(-25,25), maximum=TRUE)
x_max= ans$maximum
x_max+25 # Value in degrees

```

# Sensitivity analysis- Robust variance estimation


```{r}
#| echo: false
#| warning: false
#| include: false

# Check robustness of the results.

if(rerun){
meta_trait_treat2_robust <- robust(meta_trait_treat2, cluster = rdata$study_code, clubSandwich=TRUE)
saveRDS(meta_trait_treat2_robust, here("Output", "models", "longevity", "meta_trait_treat2_robust.rds"))

} else {
  meta_trait_treat2_robust <- readRDS(here("Output", "models", "longevity", "meta_trait_treat2_robust.rds"))
}

```



### How does sex exposed and life stage of exposure effect longevity?

```{r, lifestagesex}
#| echo: false
#| warning: false
#| include: false


## Sex exposed
# We could lump categories so that we have cases where males are included (Both, Male), versus cases with just females (Female, Parthenogenetic), 
# with Unsure removed. I would predict that the 'Both' category would show the biggest drop for longevity, but there will be no difference for lifespan

if(rerun){
  new_data <- rdata
  
  new_data$Sex.exposed[which(new_data$Sex.exposed == "Male")] <- "Both"
  new_data$Sex.exposed[which(new_data$Sex.exposed == "Parthenogenetic")] <- "Female"
  
  new_data <- subset(new_data, Sex.exposed != "Unsure")
  
  VCV_shared_sex <- impute_covariance_matrix(vi=new_data$v, cluster = new_data$shared_control, r=0.5)
  
  
  meta_treat_sex <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Sex.exposed-1, 
                           random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
  
  meta_treat_sex_nointer <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Sex.exposed-1, 
                         random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
  
  saveRDS(meta_treat_sex, here("Output", "models", "longevity", "meta_treat_long_sex.rds"))
  saveRDS(meta_treat_sex_nointer, here("Output", "models", "longevity", "meta_treat_sex_nointer.rds"))
  saveRDS(new_data, here("Output", "Output data",  "data_long_sex.rds"))
  
  
  ## Life-stage
  # We could lump categories so that we have cases where only adults were exposed (Adult), 
  # versus cases where immature stages were exposed (Juvenile, Larvae, Pupae, Mix)- perhaps after excluding 'Egg' and 'Embryo' because these categories are a bit weird
  
  ls_data <- rdata
  
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Juvenile")] <- "Immature"
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Larvae")] <- "Immature"
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Mix")] <- "Immature"
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Pupae")] <- "Immature"
  
  ls_data <- subset(ls_data, Life.stage.of.animal != "Egg")
  ls_data <- subset(ls_data, Life.stage.of.animal != "Embryo")
  
  VCV_shared_life <- impute_covariance_matrix(vi=ls_data$v, cluster = ls_data$shared_control, r=0.5)
  
  meta_treat_ls <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Life.stage.of.animal,
                          random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML", test="t")
  
  
  meta_treat_ls_nointer <- rma.mv(es, VCV_shared_life,  mod= ~ -1 + poly(c_treattemp, degree=2, raw=TRUE)*Life.stage.of.animal,
                           random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML", test="t")


  saveRDS(meta_treat_ls, here("Output", "models", "longevity", "meta_treat_long_ls.rds"))
  saveRDS(meta_treat_ls_nointer, here("Output", "models", "longevity", "meta_treat_ls_nointer.rds"))
  saveRDS(ls_data, here("Output", "Output data", "data_long_ls.rds"))
} else {
  meta_treat_sex <- readRDS(here("Output", "models", "longevity", "meta_treat_long_sex.rds"))
  meta_treat_sex_nointer <- readRDS(here("Output", "models", "longevity", "meta_treat_sex_nointer.rds"))
  new_data <- readRDS(here("Output", "Output data", "data_long_sex.rds"))
  
  meta_treat_ls <- readRDS(here("Output", "models", "longevity", "meta_treat_long_ls.rds"))
  meta_treat_ls_nointer <- readRDS(here("Output", "models", "longevity", "meta_treat_ls_nointer.rds"))
  ls_data <- readRDS(here("Output", "Output data", "data_long_ls.rds"))
}

```


### sex exposed

The relationship between temperature and longevity did not depend on whether both males and females were exposed to experimental temperatures (N= `r length(which(new_data$Sex.exposed == "Both"))` effect sizes), or whether just females were exposed to experimental temperatures (N= `r length(which(new_data$Sex.exposed == "Female"))` effect sizes) (Interaction between the quadratic effect of (centered) temperature and sex exposed category, z=`r meta_treat_sex$zval[8]`, *p*-value = `r p_value(meta_treat_sex$pval[8])`).   
                                        
```{r, tbl-sex}
#| label: tbl-sex
#| tbl-cap: Non-linear effects of temperature and sex exposed on mean effect size of longevity
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Both","Quadratic Treatment Temperature (centered) - Both", "Both (mean)", "Females only (mean)", "Treatment Temperature (centered) - Females only","Quadratic Treatment Temperature (centered) - Females only"),
                    Est. = round(meta_treat_sex_nointer$b, 4),
                    `L 95% CI` = round(meta_treat_sex_nointer$ci.lb, 4),
                    `U 95% CI` = round(meta_treat_sex_nointer$ci.ub, 4),
                    `p-value` = sapply(round(meta_treat_sex_nointer$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
```

```{r, fig-figsex}
#| label: fig-figsex
#| fig-cap: Predicted models of sex exposed and temeprature effects on longevity.  

preds.rep.sex <- predict(meta_treat_sex, addx=TRUE)
sex_rep_data <- new_data

sex_rep_data$pred <- preds.rep.sex$pred  
sex_rep_data$pred.lb <- preds.rep.sex$pi.lb
sex_rep_data$pred.ub <- preds.rep.sex$pi.ub
sex_rep_data$c.lb <- preds.rep.sex$ci.lb
sex_rep_data$c.ub <- preds.rep.sex$ci.ub

library(ggplot2)

ggplot(data = sex_rep_data, aes(x = c_treattemp, y = pred, col = Sex.exposed, linetype = Sex.exposed)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Sex.exposed), alpha = 0.15) +
  geom_line() +
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(values = c("solid", "dashed")) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  labs(title = "Predicted temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Sex exposed",  # Set the title of the color legend
       fill = "Sex exposed",
       linetype = "Sex exposed")   # Set the title of the fill legend (for ribbons)
```


```{r, fig-figsexobs}
#| label: fig-figsexobs
#| fig-cap: Observed effects of sex exposed and temeprature on longevity.  

ggplot(data = sex_rep_data, aes(x = c_treattemp, y = es, col = Sex.exposed)) +
  geom_point( alpha=0.5)+
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) + 
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  labs(title = "Observed temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Sex exposed")   # Set the title of the fill legend (for ribbons)

```


### life stage of animal

The relationship between temperature and longevity did not depend on whether subjects were exposed as adults only (N= `r length(which(ls_data$Life.stage.of.animal == "Adult"))` effect sizes), or across multiple life stages (N= `r length(which(ls_data$Life.stage.of.animal == "Immature"))`effect sizes) (Interaction between the quadratic effect of (centered) temperature and life stage category, z=`r meta_treat_ls$zval[8]`, *p*-value = `r p_value(meta_treat_ls$pval[8])`), Table (@tbl-ls). 

```{r, tbl-ls}
#| label: tbl-ls
#| tbl-cap: Non-linear effects of temperature and life stage of animal on mean effect size of longevity
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Adult","Quadratic Treatment Temperature (centered) - Adult", "Adult (mean)", "Immature (mean)", "Treatment Temperature (centered) - Immature","Quadratic Treatment Temperature (centered) - Immature"),
                    Est. = round(meta_treat_ls_nointer$b, 4),
                    `L 95% CI` = round(meta_treat_ls_nointer$ci.lb, 4),
                    `U 95% CI` = round(meta_treat_ls_nointer$ci.ub, 4),
                    `p-value` = sapply(round(meta_treat_ls_nointer$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
```


```{r, fig-figls}
#| label: fig-figls
#| fig-cap: Predicted models of life stage and temeprature effects on longevity.  

preds.rep.ls <- predict(meta_treat_ls, addx=TRUE)
ls_rep_data <- ls_data

ls_rep_data$pred <- preds.rep.ls$pred  
ls_rep_data$pred.lb <- preds.rep.ls$pi.lb
ls_rep_data$pred.ub <- preds.rep.ls$pi.ub
ls_rep_data$c.lb <- preds.rep.ls$ci.lb
ls_rep_data$c.ub <- preds.rep.ls$ci.ub

library(ggplot2)

ggplot(data = ls_rep_data, aes(x = c_treattemp, y = pred, col = Life.stage.of.animal, linetype = Life.stage.of.animal)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Life.stage.of.animal), alpha = 0.15) +
  geom_line() +
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(values = c("solid", "dashed")) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  labs(title = "Predicted temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Life stage",  # Set the title of the color legend
       fill = "Life stage",
       linetype = "Life stage")   # Set the title of the fill legend (for ribbons)
```

However, looking at the observed values, it is possible these model estimates are strongly driven by outlying values. 
```{r, fig-figlsobs}
#| label: fig-figlsobs
#| fig-cap: Observed effect sizes of sex and temeprature effects on longevity.  

### observed data 
ggplot(data = ls_rep_data, aes(x = c_treattemp, y = es, col = Life.stage.of.animal)) +
  geom_point( alpha=0.5)+
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) + 
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  coord_cartesian(ylim = c(-10,1))+
  labs(title = "Observed temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Life stage")   # Set the title of the fill legend (for ribbons)


```


### Pest status


```{r, pestsubanalysis}

if(rerun){
  pest.only <- subset(rdata, Agricultural.importance == "Pest")

  VCV_pest.only <- impute_covariance_matrix(vi=pest.only$v, cluster = pest.only$shared_control, r=0.5)
  
  V2 <- VCV_pest.only
 
  mlma_pest.only <- rma.mv(es, V2,  mod = ~poly(c_treattemp, degree=2, raw=TRUE), 
                        random= list(~ 1|study_code,  ~1|obs), data= pest.only, method= "REML", test="t")
 
 saveRDS(mlma_pest.only, here("output", "models", "longevity", "mlma_pest.only.rds"))
} else {
  
  mlma_pest.only <- readRDS(here("output", "models", "longevity", "mlma_pest.only.rds"))
}

```


```{r, pestfixedfactor}

if(rerun){
  
  # initial categories
  table(rdata$Agricultural.importance)
  
  ## Recode everything not pest as "Not Pest"
  pestdata <- rdata
  pestdata$Agricultural.importance[which(pestdata$Agricultural.importance != "Pest")] <- "Not Pest"
  
  # recoded counts of categories
  table(pestdata$Agricultural.importance)
  

  V2 <- impute_covariance_matrix(vi=pestdata$v, cluster = pestdata$shared_control, r=0.5)
  
  mlma_pest.fixed <- rma.mv(es, V2,  mod = ~poly(c_treattemp, degree=2, raw=TRUE)*Agricultural.importance, 
                        random= list(~ 1|study_code,  ~1|obs), data= pestdata, method= "REML", test="t")
 
  saveRDS(mlma_pest.fixed, here("output", "models", "longevity", "mlma_pest.fixed.rds"))
  saveRDS(pestdata, here("Output", "Output data",  "longevity", "data_rep_pest.rds"))
} else {
  mlma_pest.fixed <- readRDS(here("output", "models", "longevity", "mlma_pest.fixed.rds"))
  pestdata <- readRDS(here("Output", "Output data", "longevity", "data_rep_pest.rds"))
}

```

```{r, fig-figpest}
#| label: fig-figpest
#| fig-cap: Predicted Non-linear effects of temperature and pest status on mean effect size of longevity. 
preds.rep.pest <- predict(mlma_pest.fixed, addx=TRUE)
pest_rep_data <- pestdata

pest_rep_data$pred <- preds.rep.pest$pred  
pest_rep_data$pred.lb <- preds.rep.pest$pi.lb
pest_rep_data$pred.ub <- preds.rep.pest$pi.ub
pest_rep_data$c.lb <- preds.rep.pest$ci.lb
pest_rep_data$c.ub <- preds.rep.pest$ci.ub

library(ggplot2)

ggplot(data = pest_rep_data, aes(x = c_treattemp, y = pred, col = Agricultural.importance, linetype = Agricultural.importance)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Agricultural.importance), alpha = 0.15) +
  geom_line() +
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(values = c("solid", "dashed")) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  coord_cartesian(ylim = c(-10,5))+
  labs(title = "Predicted temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Pest staus",  # Set the title of the color legend
       fill = "Pest status",
       linetype = "Pest staus")   # Set the title of the fill legend (for ribbons)
```



### Sensitivity Analysis

### Treatment temperature

```{r}
#| echo: false
#| warning: false
#| include: false

if(rerun){
sdata <- subset(rdata, es > -10 & es < 10) # Removes 36 data points
saveRDS(sdata, here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))

# re-compute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)

# Quadratic model
meta_sa_treat2 <- rma.mv(es, VCV_shared_sa,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), 
                         random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")

saveRDS(meta_sa_treat2, here("Output", "models", "longevity", "meta_sa_treat2.rds"))
} else {
  meta_sa_treat2 <- readRDS(here("Output", "models", "longevity", "meta_sa_treat2.rds"))
  sa_data <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))
}

```


```{r, tbl-sactemp}
#| label: tbl-sactemp
#| tbl-cap: Non-linear effects of temperature on mean effect size of longevity having removed 10% of the most extreme effect sizes. 
table <- data.frame(Parameters = c("Longevity (mean)", "Linear Treatment Temperature (centered) - Longevity","Quadratic Treatment Temperature (centered) - Longevity"),
                    Est. = round(meta_sa_treat2$b, 4),
                    `L 95% CI` = round(meta_sa_treat2$ci.lb, 4),
                    `U 95% CI` = round(meta_sa_treat2$ci.ub, 4),
                    `p-value` = sapply(round(meta_sa_treat2$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
```


```{r}
#| label: fig-ctemp_vs_sactemp
#| fig-cap: Predicited models of sex exposed and temeprature effects on reproduction.  

preds.ctemp <- predict(meta_trait_treat2, addx=TRUE)
preds.sa.ctemp <- predict(meta_sa_treat2, addx=TRUE)

ctemp_data <- rdata
ctemp_sa_data <- sdata

ctemp_data$pred <- preds.ctemp$pred  
ctemp_data$pred.lb <- preds.ctemp$pi.lb
ctemp_data$pred.ub <- preds.ctemp$pi.ub
ctemp_data$c.lb <- preds.ctemp$ci.lb
ctemp_data$c.ub <- preds.ctemp$ci.ub

ctemp_sa_data$pred <- preds.sa.ctemp$pred  
ctemp_sa_data$pred.lb <- preds.sa.ctemp$pi.lb
ctemp_sa_data$pred.ub <- preds.sa.ctemp$pi.ub
ctemp_sa_data$c.lb <- preds.sa.ctemp$ci.lb
ctemp_sa_data$c.ub <- preds.sa.ctemp$ci.ub


library(ggplot2)

p <- ggplot(data = ctemp_data, aes(x = c_treattemp, y = pred, col="Full data", fill = "Full data", linetype = "Full data")) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub), alpha = 0.15) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  geom_line() +
  theme_bw() + 
  labs(title = "Predicted temperature effect on reproduction",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Full data",  # Set the title of the color legend
       fill = "Full data",
       linetype = "Full data")   

p + 
  geom_line(data = ctemp_sa_data, aes(x = c_treattemp, y = pred, col = "Sensitivity data", linetype = "Sensitivity data")) +
  geom_ribbon(data = ctemp_sa_data, aes(ymin = c.lb, ymax = c.ub, fill = "Sensitivity data"), col="orange", alpha = 0.15) +
  scale_color_manual(name = "Model", values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(name = "Model", values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(name = "Model", values = c("solid", "dashed")) +
  labs(title = "Predicted temperature effect on reproduction",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Sensitivity data",  # Set the title of the color legend
       fill = "Sensitivity data",
       linetype = "Sensitivity data")


```


### Sex exposed

```{r}
#| echo: false
#| warning: false
#| include: false

if(rerun){
sexdata <- readRDS(here("Output", "Output data",  "data_long_sex.rds"))
sdata <- subset(sexdata, es > -10 & es < 10) # Removes 36 data points
saveRDS(sdata, here("Output", "Output data", "longevity", "sensitivity_data_long_sex.rds"))

# re-compute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)

# Quadratic model
meta_sa_sex <- rma.mv(es, VCV_shared_sa,  mod= ~poly(c_treattemp, degree=2, raw=TRUE) * Sex.exposed, 
                         random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")

saveRDS(meta_sa_sex, here("Output", "models", "longevity", "meta_sa_long_sex.rds"))
} else {
  meta_sa_sex <- readRDS(here("Output", "models", "longevity", "meta_sa_long_sex.rds"))
  sa_long_sexdata <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long_sex.rds"))
}

```

The interaction between treatment temperature and sex exposed was also not significant after removing outliers (Interaction between the quadratic effect of (centered) temperature and sex exposed category, z=`r meta_sa_sex$zval[8]`, *p*-value = `r p_value(meta_sa_sex$pval[8])`).


```{r, tbl-sasex}
#| label: tbl-sasex
#| tbl-cap: Non-linear effects of temperature and sex exposed on mean effect size of longevity with 10% most extreme effect sizes removed. 
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Both","Quadratic Treatment Temperature (centered) - Both", "Both (mean)", "Females only (mean)", "Treatment Temperature (centered) - Females only","Quadratic Treatment Temperature (centered) - Females only"),
                    Est. = round(meta_sa_sex$b, 4),
                    `L 95% CI` = round(meta_sa_sex$ci.lb, 4),
                    `U 95% CI` = round(meta_sa_sex$ci.ub, 4),
                    `p-value` = sapply(round(meta_sa_sex$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)

```


```{r, fig-figsexsa}
#| label: fig-figsexsa
#| fig-cap: Predicted models of sex exposed and temeprature effects on longevity.  

preds.rep.sex <- predict(meta_sa_sex, addx=TRUE)
sex_rep_data <- sa_rep_sexdata

sex_rep_data$pred <- preds.rep.sex$pred  
sex_rep_data$pred.lb <- preds.rep.sex$pi.lb
sex_rep_data$pred.ub <- preds.rep.sex$pi.ub
sex_rep_data$c.lb <- preds.rep.sex$ci.lb
sex_rep_data$c.ub <- preds.rep.sex$ci.ub

library(ggplot2)

ggplot(data = sex_rep_data, aes(x = c_treattemp, y = pred, col = Sex.exposed, linetype = Sex.exposed)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Sex.exposed), alpha = 0.15) +
  geom_line() +
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(values = c("solid", "dashed")) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  labs(title = "Predicted Temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Sex exposed",  # Set the title of the color legend
       fill = "Sex exposed",
       linetype = "Sex exposed")   # Set the title of the fill legend (for ribbons)

```


### Life-stage

```{r}
#| echo: false
#| warning: false
#| include: false

if(rerun){
ls_data <- readRDS(here("Output", "Output data", "data_long_ls.rds"))
sdata <- subset(ls_data, es > -10 & es < 10) # Removes 36 data points
saveRDS(sdata, here("Output", "Output data", "longevity", "sensitivity_data_long_ls.rds"))

# re-compute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)

# Quadratic model
meta_sa_ls <- rma.mv(es, VCV_shared_sa,  mod= ~poly(c_treattemp, degree=2, raw=TRUE) * Life.stage.of.animal, 
                         random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")

saveRDS(meta_sa_ls, here("Output", "models", "longevity", "meta_sa_long_ls.rds"))
} else {
  meta_sa_ls <- readRDS(here("Output", "models", "longevity", "meta_sa_long_ls.rds"))
  sa_rep_lsdata <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long_ls.rds"))
}

```

The relationship between temperature and longevity did not depend on life stage category after removing outliers (Interaction between the quadratic effect of (centered) temperature and life stage category, z=`r meta_sa_ls$zval[8]`, *p*-value = `r p_value(meta_sa_ls$pval[8])`), Table (@tbl-sals).

```{r, tbl-sals}
#| label: tbl-sals
#| tbl-cap: Non-linear effects of temperature and life stageo animal on mean effect size of longevity after removing the 10% most extreme effect sizes.
table <- data.frame(Parameters = c("Linear Treatment Temperature (centered) - Adult","Quadratic Treatment Temperature (centered) - Adult", "Adult (mean)", "Immature (mean)", "Treatment Temperature (centered) - Immature","Quadratic Treatment Temperature (centered) - Immature"),
                    Est. = round(meta_sa_ls$b, 4),
                    `L 95% CI` = round(meta_sa_ls$ci.lb, 4),
                    `U 95% CI` = round(meta_sa_ls$ci.ub, 4),
                    `p-value` = sapply(round(meta_sa_ls$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
```

```{r, fig-figlssa}
#| label: fig-figlssa
#| fig-cap: Predicted models of sex exposed and temeprature effects on longevity.  

preds.rep.ls <- predict(meta_sa_ls, addx=TRUE)
ls_rep_data <- sa_rep_lsdata

ls_rep_data$pred <- preds.rep.ls$pred  
ls_rep_data$pred.lb <- preds.rep.ls$pi.lb
ls_rep_data$pred.ub <- preds.rep.ls$pi.ub
ls_rep_data$c.lb <- preds.rep.ls$ci.lb
ls_rep_data$c.ub <- preds.rep.ls$ci.ub

library(ggplot2)

ggplot(data = ls_rep_data, aes(x = c_treattemp, y = pred, col = Life.stage.of.animal, linetype = Life.stage.of.animal)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Life.stage.of.animal), alpha = 0.15) +
  geom_line() +
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(values = c("solid", "dashed")) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  coord_cartesian(ylim = c(-7,3))+
  labs(title = "Predicted temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Life stage",  # Set the title of the color legend
       fill = "Life stage",
       linetype = "Life stage")   # Set the title of the fill legend (for ribbons)
```


### Pest status

```{r}
#| echo: false
#| warning: false
#| include: false

if(rerun){
sdata <- subset(rdata, es > -10 & es < 10) # Removes 36 data points
sdata$Agricultural.importance[which(sdata$Agricultural.importance != "Pest")] <- "Not Pest"
saveRDS(sdata, here("Output", "Output data", "longevity", "sensitivity_data_pest.rds"))

# re-compute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)

# Quadratic model

mlma_sa_pest.fixed <- rma.mv(es, VCV_shared_sa,  mod = ~poly(c_treattemp, degree=2, raw=TRUE)*Agricultural.importance, 
                          random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML", test="t")
 
saveRDS(mlma_sa_pest.fixed, here("output", "models", "longevity", "mlma_sa_pest.fixed.rds"))
saveRDS(sdata, here("output", "Output data", "longevity", "pest_rep_sa_data.rds"))
} else {
  mlma_sa_pest.fixed <- readRDS(here("output", "models", "longevity", "mlma_sa_pest.fixed.rds"))
  pest_sa_data <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_pest.rds"))
}

```

```{r, fig-figpestsa}
#| label: fig-figpestsa
#| fig-cap: Predicted Non-linear effects of temperature and pest status on mean effect size of longevity (after removing outliers). 
preds.rep.pest <- predict(mlma_sa_pest.fixed, addx=TRUE)
pest_rep_data <- sdata

pest_rep_data$pred <- preds.rep.pest$pred  
pest_rep_data$pred.lb <- preds.rep.pest$pi.lb
pest_rep_data$pred.ub <- preds.rep.pest$pi.ub
pest_rep_data$c.lb <- preds.rep.pest$ci.lb
pest_rep_data$c.ub <- preds.rep.pest$ci.ub

library(ggplot2)

ggplot(data = pest_rep_data, aes(x = c_treattemp, y = pred, col = Agricultural.importance, linetype = Agricultural.importance)) +
  geom_ribbon(aes(ymin = c.lb, ymax = c.ub, fill = Agricultural.importance), alpha = 0.15) +
  geom_line() +
  scale_color_manual(values = c("purple", "orange")) +  # Set colors for the points and lines
  scale_fill_manual(values = c("purple", "orange")) +    # Set colors for the ribbons
  scale_linetype_manual(values = c("solid", "dashed")) +
  scale_x_continuous(breaks=c(-25, -15, -5, 5, 15), labels=c("0", "10", "20", "30", "40")) +
  theme_bw() + 
  coord_cartesian(ylim = c(-5,3))+
  labs(title = "Predicted temperature effect on longevity",
       x = "Experimental temperature (°C)",
       y = "Standardised change in adult lifespan",
       color = "Pest staus",  # Set the title of the color legend
       fill = "Pest status",
       linetype = "Pest staus")   # Set the title of the fill legend (for ribbons)
```


### Sensitivity analysis: long-term exposure only

# Temperature effect

```{r, sa.remove.24}

#| echo: false
#| warning: false
#| include: false

if(rerun){
expose.data <- subset(rdata, Exposure.duration != "< 24 hours")
expose.data <- subset(expose.data, Exposure.duration != "1 to 5 days")

sdata <- expose.data
saveRDS(sdata, here("Output", "Output data", "longevity", "sensitivity_data_long_exposure.rds"))

# re-compute the covariance matrix for subsetted data
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)

# Quadratic
meta_sa_exposure <- rma.mv(es, VCV_shared_sa,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), 
                           random=list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")

saveRDS(meta_sa_exposure, here("Output", "models", "longevity", "meta_sa_long_exposure.rds"))
} else {
  meta_sa_exposure <- readRDS(here("Output", "models", "longevity", "meta_sa_long_exposure.rds"))
  sa_exposure <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long_exposure.rds"))
}


```

```{r}
#| label: fig-short.exposureremoved
#| fig-cap: Bubble plot of effect size of longevity when controlling for temperature with < 24 hour exposure observations removed. 
p <- bubble_plot(meta_sa_exposure, mod = "c_treattemp", group="study_code")
p+coord_cartesian(ylim=c(-10,10)) + labs(x = "Temperature deviation from 25C")
```

```{r, tbl-saexposure}
#| label: tbl-saexposure
#| tbl-cap: Non-linear effects of temperature on mean effect size of longevity when  < 24 hour exposure times removed.
table <- data.frame(Parameters = c("Longevity (mean)", "Linear Treatment Temperature (centered) - Longevity","Quadratic Treatment Temperature (centered) - Longevity"),
                    Est. = round(meta_sa_exposure$b, 4),
                    `L 95% CI` = round(meta_sa_exposure$ci.lb, 4),
                    `U 95% CI` = round(meta_sa_exposure$ci.ub, 4),
                    `p-value` = sapply(round(meta_sa_exposure$pval,4), function(x) p_value(x)), row.names = NULL, check.names = FALSE)
flextable(table)
```


# Life stage

```{r}
#| echo: false
#| warning: false
#| include: false

## Remove acute temperature effect sizes

if(rerun){
ls_data <- rdata
  
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Juvenile")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Larvae")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Mix")] <- "Immature"
ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Pupae")] <- "Immature"
ls_data <- subset(ls_data, Life.stage.of.animal != "Egg")
ls_data <- subset(ls_data, Life.stage.of.animal != "Embryo")

ls_data_chronic <- subset(ls_data, Exposure.duration != "< 24 hours")
ls_data_chronic <- subset(ls_data_chronic, Exposure.duration != "1 to 5 days")

VCV_shared_ls <- impute_covariance_matrix(vi=ls_data_chronic$v, cluster = ls_data_chronic$shared_control, r=0.5)

meta_ls_chronic <- rma.mv(es, VCV_shared_ls,  mod= ~poly(c_treattemp, degree=2, raw=TRUE)*Life.stage.of.animal, 
                         random= list(~ 1|study_code,  ~1|obs), data= ls_data_chronic, method= "REML", test="t")

saveRDS(meta_ls_chronic, here("Output", "models", "longevity", "meta_ls_chronic.rds"))
saveRDS(ls_data_chronic, here("Output", "Output data", "longevity", "ls_data_chronic.rds"))

} else {
  meta_ls_chronic <- readRDS(here("Output", "models", "longevity", "meta_ls_chronic.rds"))
  ls_data_chronic <- readRDS(here("Output", "Output data", "longevity", "ls_data_chronic.rds"))
  }


```


# Pest staus

```{r}

if(rerun){

  ## Recode everything not pest as "Not Pest"
  pestdata <- rdata
  pestdata$shared_control <- factor(pestdata$Effect.size.code)
  pestdata$study_code <- factor(pestdata$Paper.code)  
  pestdata$obs <- factor(c(1:nrow(pestdata)))
  pestdata$Agricultural.importance[which(pestdata$Agricultural.importance != "Pest")] <- "Not Pest"

  pestdata_chronic <- subset(pestdata, Exposure.duration != "< 24 hours")
  pestdata_chronic <- subset(pestdata_chronic, Exposure.duration != "1 to 5 days")
  
  V2 <- impute_covariance_matrix(vi=pestdata_chronic$v, cluster = pestdata_chronic$shared_control, r=0.5)
  
  meta_pest_chronic <- rma.mv(es, V2,  mod = ~poly(c_treattemp, degree=2, raw=TRUE)*Agricultural.importance, 
                          random= list(~ 1|study_code,  ~1|obs), data= pestdata_chronic, method= "REML", test="t")
 
  saveRDS(meta_pest_chronic, here("output", "models", "longevity", "meta_pest_chronic.rds"))
  saveRDS(pestdata_chronic, here("Output", "Output data", "longevity", "data_pest_chronic.rds"))
} else {
  meta_pest_chronic <- readRDS(here("output", "models", "longevity", "meta_pest_chronic.rds"))
  pestdata_chronic <- readRDS(here("Output", "Output data", "longevity", "data_pest_chronic.rds"))
}

```



### Publication Bias

### Effect of year

```{r}
#| echo: false
#| warning: false
#| include: false

## Effect of year

if(rerun){
meta_year <- rma.mv(es, VCV_shared,  mod= ~Publication.year,  
                    random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_year, here("Output", "models", "longevity", "meta_long_year.rds"))

# After removing outliers
sdata <- subset(rdata, es > -10 & es < 10) 
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
meta_sa_year <- rma.mv(es, VCV_shared_sa,  mod= ~Publication.year,  
                    random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")
saveRDS(meta_sa_year, here("Output", "models", "longevity", "meta_sa_year.rds"))

} else {
  meta_year <- readRDS(here("Output", "models", "longevity", "meta_long_year.rds"))
  sdata <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))
  meta_sa_year <- readRDS(here("Output", "models", "longevity", "meta_sa_year.rds"))
}
```

We found no significant effect of year on effect suggesting that there was no presence of publication bias (*p*-value = `r meta_year$pval[2]`)

```{r, @fig-figyear}
#| label: fig-figyear
#| fig-cap: Bubble plot of mean effect size throughout time.  

q <- bubble_plot(meta_year, mod = "Publication.year", group="study_code") +
  labs(x = "Year of Publication")
q+ coord_cartesian(ylim=c(-20,10))
```


### Effect of study precision

```{r}
#| echo: false
#| warning: false
#| include: false
#| eval: false

### Study precision

if(rerun){
meta_precision <- rma.mv(es, VCV_shared,  mod= ~precision,  
                    random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_precision, here("Output", "models", "longevity", "meta_long_precision.rds"))

# After removing outliers
sdata <- subset(rdata, es > -10 & es < 10)
saveRDS(sdata, here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))
VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)

meta_sa_precision <- rma.mv(es, VCV_shared_sa,  mod= ~precision,  
                    random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")
saveRDS(meta_sa_precision, here("Output", "models", "longevity", "meta_sa_precision.rds"))

} else {
  meta_precision <- readRDS(here("Output", "models", "longevity", "meta_long_precision.rds"))
  sdata <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))
  meta_sa_precision <- readRDS(here("Output", "models", "longevity", "meta_sa_precision.rds"))
}

plot(sdata$es, sdata$precision)
bubble_plot(meta_sa_precision, mod = "precision", group="study_code")

```



### Other polynomials

```{r, higherorderpoly}


if(rerun){
  
  # treat temp^4 centered
meta_trait_treat4 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=4, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat4, here("Output", "models", "longevity", "mv_rep_ctemp4.rds"))

  # treat temp^5 centered
meta_trait_treat5 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=5, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat5, here("Output", "models", "longevity", "mv_rep_ctemp5.rds"))

  # treat temp^6 centered
meta_trait_treat6 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=6, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat6, here("Output", "models", "longevity", "mv_rep_ctemp6.rds"))


  # treat temp^7 centered (fails to converge)
meta_trait_treat7 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=7, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat7, here("Output", "models", "longevity", "mv_rep_ctemp7.rds"))


  # treat temp^8 centered (fails to converge)
meta_trait_treat8 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=8, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
saveRDS(meta_trait_treat8, here("Output", "models", "longevity", "mv_rep_ctemp8.rds"))

} else {
  meta_trait_treat4  <- readRDS(here("Output", "models",  "longevity", "mv_rep_ctemp4.rds"))
  meta_trait_treat5  <- readRDS(here("Output", "models",  "longevity", "mv_rep_ctemp5.rds"))
  meta_trait_treat6  <- readRDS(here("Output", "models",  "longevity", "mv_rep_ctemp6.rds"))

}


```


```{r, fig_long-degree}

preds.2 <- predict(meta_trait_treat2, addx=TRUE)
preds.3 <- predict(meta_trait_treat3, addx=TRUE)
preds.4 <- predict(meta_trait_treat4, addx=TRUE)
preds.5 <- predict(meta_trait_treat5, addx=TRUE)
preds.6 <- predict(meta_trait_treat6, addx=TRUE)

ctemp_data <- rdata

ctemp_data$preds.2 <- preds.2$pred  
ctemp_data$preds.3 <- preds.3$pred  
ctemp_data$preds.4 <- preds.4$pred  
ctemp_data$preds.5 <- preds.5$pred  
ctemp_data$preds.6 <- preds.6$pred  


library(ggplot2)

cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
          "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

ggplot(ctemp_data, aes(x = c_treattemp)) +
  geom_point(aes(y = es, size = v), color="black", fill="white", alpha=1/5, size=2) +
  geom_line(aes(y = preds.2, color = "2", linetype= "2"), size = 1.5) +
  geom_line(aes(y = preds.3, color = "3", linetype= "3"), size = 1.5) +
  geom_line(aes(y = preds.4, color = "4", linetype= "4"), size = 1.5) +
  geom_line(aes(y = preds.5, color = "5", linetype= "5"), size = 1.5) +
  geom_line(aes(y = preds.6, color = "6", linetype= "6"), size = 1.5) +
  labs(title = "Predicted effect size curves for longevity using different polynomials",
       x = "Temperature deviation from 25C",
       y = "Effect size") +
  theme_minimal() +
  coord_cartesian(ylim = c(-10, 10)) +
  scale_color_manual(values = c("2" = cbp2[2], "3" = cbp2[3], "4" = cbp2[4], "5" = cbp2[5], "6" = cbp2[8]),
                     name = "Polynomial Degree") +
  scale_linetype_manual(values = c("solid", "dashed", "dotted", "dotdash", "longdash" ), name = "Polynomial Degree")



```


