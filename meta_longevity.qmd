---
title: "Multivariate Meta-Analysis for Longevity"
author: "Daniel Noble & Fay Frost"
format: docx
execute:
  freeze: auto  # re-render only when source changes
cache: false
echo: false
warning: false
error: false
include: true
crossref:
  fig-title: 'Figure'
fig-labels: arabic
title-delim: "-"
fig-prefix: "Figure"
tbl-prefix: "Table"
---
  
  ```{r, packages}
#| echo: false
#| warning: false
#| include: false
#| eval: true
#install.packages("pacman")
#devtools::install_github("daniel1noble/metaAidR", force=TRUE)
pacman::p_load(tidyverse, here, ggplot2, rotl, multicomp, dplyr, clubSandwich, tidyr,  metafor, ape, phytools, corrplot, metaAidR, orchaRd, latex2exp, flextable)
# source functions
source(here("R", "func.R"))

options(digits = 2)
```

```{r, rerun}
#| echo: false
#| warning: false
#| include: false
#| eval: true

## rerun all models?
rerun <- TRUE
```

```{r, load data}
#| echo: false
#| warning: false
#| include: false

### Read in effect size data
effectdata <- read.csv(here("Data", "Survival project all pairwise.es.csv"))

### select data for analysis
longdata_warm <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Warm" )
longdata_cool <- subset(effectdata, Trait.category == "Longevity" & warm.cool == "Cool" )
alllong <- rbind(longdata_warm, longdata_cool)
rdata <- alllong

### Species names which need changing for phylogeny. 
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea ashmeadi")]              <- "Gonatocerus ashmeadi"	
rdata$Species.latin[which(rdata$Species.latin == "Cosmocomoidea triguttata")]   <- "Gonatocerus triguttatus"
rdata$Species.latin[which(rdata$Species.latin == "Mythimna roseilinea")]            <-  "Mythimna albipuncta"
rdata$Species.latin[which(rdata$Species.latin == "Daphnia australis")]            <-  "Daphniopsis australis"

### Create random factors into data frame 
rdata$obs <- factor(c(1:nrow(rdata)))                # Unique observation code
rdata$study_code <- factor(rdata$Paper.code)         # Model requires column names study_code (this is biggest level of nested code structure)
rdata$Species.phylo <- factor(rdata$Species.latin)   # Species names for phylo matrix
rdata$species <- factor(rdata$Species.latin)         # Another species column for ranom factor 

precision <- sqrt(1/rdata$v)                         # inverse standard error 
rdata[,"precision"] <- precision
str(rdata)

nlevels(rdata$species)    # Check number of species
nlevels(rdata$study_code) # Check number of studies

#### Import Tree #############
tree1 <- read.nexus(here("Phylogeny", "all_long_excHUM251_tree.nex"))
tree_grafen = compute.brlen(tree1, method="Grafen", power=1)
tree <- ape::multi2di(tree_grafen, random = TRUE) 
phylo_matrix <- vcv(tree_grafen, cor=TRUE, model="Brownian") # Make phylogenetic matrix

# use a randomization approach to deal with polytomies. 
# Could this this approach or another detailed here: https://search.r-project.org/CRAN/refmans/RRphylo/html/fix.poly.html


```



# Models   

In this section we fit a series of random and fixed effects models. 

## Random effects models

```{r}
#| echo: false
#| warning: false
#| include: false
#| 
# Simple model (no random effects)

meta1 <- rma.uni(es, v, data= rdata, method= "REML")
summary(meta1) 
```

```{r}
#| echo: false
#| warning: false
#| include: false
#| 

# Adding four random factors
if(rerun){
  meta2 <- rma.mv(es, v, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs), 
                  R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
  saveRDS(meta2, here("Output", "models", "longevity", "mv_long_2.rds"))
} else { 
  meta2 <- readRDS(here("Output", "models", "longevity", "mv_long_2.rds"))
}

summary(meta2)
i2_ml(meta2, method=c("ratio")) # Heterogeneity at each random factor level
```



## Accounting for non-independence of data points from the same experiment

We initially fit the model using all random factors.
```{r}
#| echo: false
#| warning: false
#| include: false

# Assumes a correlation of 0.5 between effect sizes from the same experiment 
rdata$shared_control <- factor(rdata$Effect.size.code)
VCV_shared <- impute_covariance_matrix(vi=rdata$v, cluster = rdata$shared_control, r=0.5)


# Add new variance matrix for shared_control into the mixed-effects meta-analysis model
if(rerun){
  meta3 <- rma.mv(es, VCV_shared, random= list(~ 1|Species.phylo, ~ 1|species, ~ 1|study_code, ~1|obs), 
                  R= list(Species.phylo = phylo_matrix), data= rdata, method= "REML")
  saveRDS(meta3, here("Output", "models", "longevity", "mv_long_3.rds"))
} else { 
  meta3 <-  readRDS(here("Output", "models", "longevity", "mv_long_3.rds"))
}
```

```{r}
#| echo: true
#| warning: false
#| include: true
#| eval: true
summary(meta3)
i2_ml(meta3, method=c("ratio"))
```


We then fit the models with different combinations of random effects. 
```{r}
#| echo: false
#| warning: false
#| include: false
#| 

if(rerun){
  ## without phylogeny or species
  meta4 <- rma.mv(es, VCV_shared, random= list(~ 1|study_code, ~1|obs), data= rdata, method= "REML")
  saveRDS(meta4, here("Output", "models", "longevity", "mv_long_4.rds"))
  
  ## without phylogeny 
  meta5 <- rma.mv(es, VCV_shared, random= list(~ 1|species, ~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta5, here("Output", "models", "longevity", "mv_long_5.rds"))
  
  ## without phylogeny, species or study_code 
  meta7 <- rma.mv(es, VCV_shared, random= list(~1|obs), data= rdata, method= "REML")
  saveRDS(meta7, here("Output", "models", "longevity", "mv_long_7.rds"))
} else {
  meta4 <- readRDS(here("Output", "models", "longevity", "mv_long_4.rds"))
  meta5 <- readRDS(here("Output", "models", "longevity",  "mv_long_5.rds"))
  meta7 <- readRDS(here("Output", "models", "longevity", "mv_long_7.rds"))
}


```

The best fitting model according to AIC has just study_code and obs as random factors. 
```{r}
#| echo: true
#| warning: false
#| include: true
#| eval: true
summary(meta7)
i2_ml(meta7, method=c("ratio"))
```

## Meta-Regressions 

We fit single categorical factors as a fixed effect.

```{r}
#| echo: false
#| warning: false
#| include: false
#| 

if(rerun){
  # warm/cool
  meta_trait_warm <- rma.mv(es, VCV_shared,  mod= ~warm.cool, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_warm, here("Output", "models", "longevity", "mv_long_warm.rds"))
  
  # warm/cool -1
  meta_trait_warm_nointer <- rma.mv(es, VCV_shared,  mod= ~warm.cool-1, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_warm_noiter, here("Output", "models", "longevity", "mv_long_warm-1.rds"))
  
  
  # ref temp
  meta_trait_ref <- rma.mv(es, VCV_shared,  mod= ~reftemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_ref, here("Output", "models", "longevity", "mv_long_ref.rds"))
  
  
  # treat temp centered
  meta_trait_treattemp <- rma.mv(es, VCV_shared,  mod= ~c_treattemp, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_treattemp, here("Output", "models", "longevity", "mv_long_ctemp.rds"))
  
  
  # treat temp^2 centered
  meta_trait_treat2 <- rma.mv(es, VCV_shared,  mod= ~poly(c_treattemp, degree=2, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_treat2, here("Output", "models", "mv_long_ctemp2.rds"))
  
  # treat temp^3 centered
  meta_trait_treat3 <- rma.mv(es, VCV_shared,  mod= ~ poly(c_treattemp, degree=3, raw=TRUE), random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_treat2, here("Output", "models", "mv_long_ctemp3.rds"))
  
  
  # diff temp
  meta_trait_diff <- rma.mv(es, VCV_shared,  mod= ~diff, random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  saveRDS(meta_trait_diff, here("Output", "models", "longevity", "mv_long_diff.rds"))
  
  
  ### binned treatment max temperatures.
  rdata$bin.temp <- c(NA)
  
  rdata$bin.temp[which(rdata$treattemp >= 40)] <- ">40" 
  rdata$bin.temp[which(rdata$treattemp >= 35 & rdata$treattemp <40)] <- "35-40" 
  rdata$bin.temp[which(rdata$treattemp >= 30 & rdata$treattemp <35)] <- "30-35" 
  rdata$bin.temp[which(rdata$treattemp >= 25 & rdata$treattemp <30)] <- "25-30" 
  rdata$bin.temp[which(rdata$treattemp >= 20 & rdata$treattemp <25)] <- "20-25"
  rdata$bin.temp[which(rdata$treattemp >= 15 & rdata$treattemp <20)] <- "15-20"
  rdata$bin.temp[which(rdata$treattemp <15)] <- "<15" 
  
  rdata$bin.temp <- factor(rdata$bin.temp)
  
  levels(rdata$bin.temp)
  table(rdata$bin.temp)
  
  # binned temps
  meta_trait_bintemp <- rma.mv(es, VCV_shared,  mod= ~bin.temp-1,  
                               random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  
  saveRDS(meta_trait_bintemp, here("Output", "models", "longevity", "mv_long_bintemp.rds"))
  
} else {
  meta_trait_warm  <- readRDS(here("Output", "models", "longevity", "mv_long_warm.rds"))
  meta_trait_warm_noiter  <- readRDS(meta_trait_warm_noiter, here("Output", "models", "longevity", "mv_long_warm-1.rds"))
  meta_trait_ref <- readRDS(here("Output", "models", "longevity", "mv_long_ref.rds"))
  meta_trait_treattemp  <- readRDS(here("Output", "models", "longevity", "mv_long_ctemp.rds"))
  meta_trait_treat2  <- readRDS(here("Output", "models", "mv_long_ctemp2.rds"))
  meta_trait_diff <- readRDS(here("Output", "models", "longevity", "mv_long_diff.rds"))
  meta_trait_bintemp <-  readRDS(here("Output", "models", "longevity", "mv_long_bintemp.rds"))
  meta_trait_treat3 <- readRDS(here("Output", "models", "mv_long_ctemp3.rds"))
}

```


# How does sex exposed and life stage of exposure effect longevity?
```{r}
#| echo: false
#| warning: false
#| include: false


## Sex exposed
# We could lump categories so that we have cases where males are included (Both, Male), versus cases with just females (Female, Parthenogenetic), 
# with Unsure removed. I would predict that the 'Both' category would show the biggest drop for longevity, but there will be no difference for lifespan

if(rerun){
  new_data <- rdata
  
  new_data$Sex.exposed[which(new_data$Sex.exposed == "Male")] <- "Both"
  new_data$Sex.exposed[which(new_data$Sex.exposed == "Parthenogenetic")] <- "Female"
  
  new_data <- subset(new_data, Sex.exposed != "Unsure")
  
  VCV_shared_sex <- impute_covariance_matrix(vi=new_data$v, cluster = new_data$shared_control, r=0.5)
  
  
  meta_treat_sex <- rma.mv(es, VCV_shared_sex,  mod= ~poly(c_treattemp, degree=3, raw=TRUE)*Sex.exposed-1, 
                           random= list(~ 1|study_code,  ~1|obs), data= new_data, method= "REML")
  
  saveRDS(meta_treat_sex, here("Output", "models", "longevity", "meta_treat_long_sex.rds"))
  saveRDS(new_data, here("Output", "Output data",  "data_long_sex.rds"))
  
  
  ## Life-stage
  # We could lump categories so that we have cases where only adults were exposed (Adult), 
  # versus cases where immature stages were exposed (Juvenile, Larvae, Pupae, Mix)- perhaps after excluding 'Egg' and 'Embryo' because these categories are a bit weird
  
  ls_data <- rdata
  
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Juvenile")] <- "Immature"
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Larvae")] <- "Immature"
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Mix")] <- "Immature"
  ls_data$Life.stage.of.animal[which(ls_data$Life.stage.of.animal == "Pupae")] <- "Immature"
  
  ls_data <- subset(ls_data, Life.stage.of.animal != "Egg")
  ls_data <- subset(ls_data, Life.stage.of.animal != "Embryo")
  
  VCV_shared_life <- impute_covariance_matrix(vi=ls_data$v, cluster = ls_data$shared_control, r=0.5)
  
  meta_treat_ls <- rma.mv(es, VCV_shared_life,  mod= ~poly(c_treattemp, degree=3, raw=TRUE)*Life.stage.of.animal,
                          random= list(~ 1|study_code,  ~1|obs), data= ls_data, method= "REML")
  saveRDS(meta_treat_ls, here("Output", "models", "longevity", "meta_treat_long_ls.rds"))
  saveRDS(ls_data, here("Output", "Output data", "data_long_ls.rds"))
} else {
  meta_treat_sex <- readRDS(here("Output", "models", "longevity", "meta_treat_long_sex.rds"))
  new_data <- readRDS(here("Output", "Output data", "data_long_sex.rds"))
}

```

#Publication Bias and Sensitivity Analysis

```{r}
#| echo: false
#| warning: false
#| include: false

## Publication Bias.

if(rerun){
  meta_year <- rma.mv(es, VCV_shared,  mod= ~Publication.year,  
                      random= list(~ 1|study_code,  ~1|obs), data= rdata, method= "REML")
  
  saveRDS(meta_year, here("Output", "models", "longevity", "meta_long_year.rds"))
  
  # Sensitivty Analysis
  # Preform a sensitivity analysis by removing the smallest and largest 2.5% of effect sizes.
  
  
  minq <- quantile(rdata$es, 0.025)
  maxq <- quantile(rdata$es, 0.975)
  
  sdata <- subset(rdata, es > minq & es < maxq)
  saveRDS(s_data, here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))
  
  
  ## Treatment temperature as a quadratic effect (sesnsitivity analysis)
  
  # re-cmpute the covariance matrix for subsetted data
  VCV_shared_sa <- impute_covariance_matrix(vi=sdata$v, cluster = sdata$shared_control, r=0.5)
  
  
  # re-run quadratic model
  meta_sa_treat2 <- rma.mv(es, VCV_shared_sa,  mod= ~poly(c_treattemp, degree=3, raw=TRUE), 
                           random= list(~ 1|study_code,  ~1|obs), data= sdata, method= "REML")
  
  saveRDS(meta_sa_treat2, here("Output", "models", "longevity", "meta_sa_ctemp2.rds"))
} else {
  meta_year <- readRDS(here("Output", "models", "longevity", "meta_long_year.rds"))
  sdata <- readRDS(here("Output", "Output data", "longevity", "sensitivity_data_long.rds"))
  meta_sa_treat2 <- readRDS(here("Output", "models", "longevity", "meta_sa_ctemp2.rds"))
}


## Now we completely remove any study that has an effect size in the highest or lowest 2.5%. 

#remove_min <- unique(rdata$Paper.code[which(rdata$es < minq)])
#remove_max <- unique(rdata$Paper.code[which(rdata$es > maxq)])
#remove <- union(remove_min, remove_max)
#subdata <- rdata[!(rdata$Paper.code %in% remove), ]
#VCV_shared_subdata <- impute_covariance_matrix(vi=subdata$v, cluster = subdata$shared_control, r=0.5)
```
